{"version":3,"sources":["webpack:///./node_modules/@apollo/react-hooks/lib/react-hooks.esm.js","webpack:///./node_modules/@apollo/react-components/lib/react-components.esm.js","webpack:///./node_modules/@apollo/react-hoc/lib/react-hoc.esm.js","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./node_modules/react-is/index.js","webpack:///./node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Link/Link.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Link/Link.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Link/Link.js"],"names":["react_hooks_esm_OperationData","OperationData","options","context","this","isMounted","previousOptions","prototype","getOptions","setOptions","newOptions","Object","equality_esm","unmount","refreshClient","client","invariant_esm","isNew","cleanup","verifyDocumentType","document","type","operation","react_common_esm","react_hooks_esm_QueryData","_super","QueryData","_a","forceUpdate","_this","call","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","result","getQueryResult","startQuerySubscription","tslib_es6","execute","skip","query","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","bundle_esm","ready","called","data","undefined","fetchData","ssr","children","opts","displayName","onCompleted","onError","partialRefetch","fetchPolicy","obs","watchQuery","renderPromises","registerSSRObservable","getCurrentResult","afterExecute","_b","lazy","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","bind","updatedOptions","variables","ssrLoading","addQueryPromise","prepareObservableQueryOptions","Query","metadata","reactComponent","observableQueryFields","observable","refetch","fetchMore","updateQuery","startPolling","stopPolling","subscribeToMore","initializeObservableQuery","getSSRObservable","observableQueryOptions","newObservableQueryOptions","subscription","obsQuery","subscribe","next","error","_error","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","getLastResult","resetLastResults","assign","create","currentResult","partial","errors","length","graphQLErrors","keys","unsubscribe","useBaseQuery","react","x","tick","queryDataRef","current","queryData","memoFn","key","ref","value","react_hooks_esm_MutationData","MutationData","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","mutationContext","_c","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","ignoreResults","updateResult","isMostRecentMutation","previousResult","react_hooks_esm_SubscriptionData","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","endSubscription","startSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","RenderPromises","queryPromises","Map","queryInfoTrie","props","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","push","clear","all","varMap","get","has","variablesString","JSON","stringify","info","react_components_esm_Query","useQuery","react_components_esm_Mutation","mutationDataRef","mutationData","useMutation","react_components_esm_Subscription","subscriptionDataRef","useSubscription","__webpack_require__","d","__webpack_exports__","propTypes","prop_types_default","a","object","func","isRequired","string","notifyOnNetworkStatusChange","bool","pollInterval","number","returnPartialData","oneOfType","arrayOf","withQuery","_apollo_react_common__WEBPACK_IMPORTED_MODULE_4__","tslib__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6__","react__WEBPACK_IMPORTED_MODULE_6___default","n","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_7__","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_7___default","_apollo_react_components__WEBPACK_IMPORTED_MODULE_8__","ts_invariant__WEBPACK_IMPORTED_MODULE_9__","defaultMapPropsToOptions","defaultMapPropsToSkip","getDisplayName","WrappedComponent","name","calculateVariablesFromProps","_i","variable","variableName","variableProp","kind","GraphQLBase","withRef","setWrappedInstance","getWrappedInstance","wrappedInstance","Component","operationOptions","alias","mapPropsToOptions","lastResultProps","mapPropsToSkip","graphQLDisplayName","GraphQL","apply","arguments","render","shouldSkip","createElement","r","childProps","newResult","ownProps","ReactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","$$typeof","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","concat","targetStatics","sourceStatics","i","descriptor","e","b","Symbol","c","f","g","h","k","l","m","p","q","t","v","w","u","y","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","getClassNames","classNamesFunction","Link_base_LinkBase","LinkBase","_link","_onClick","ev","onClick","disabled","preventDefault","className","href","theme","styles","keytipProps","classNames","isButton","isDisabled","RootType","_getRootType","KeytipData","ariaDescribedBy","keytipAttributes","_adjustPropsForRootType","root","aria-disabled","focus","as","target","restProps","getStyles","componentRef","BaseComponent","GlobalClassNames","Link","styled","semanticColors","linkColor","link","linkInteractedColor","linkHovered","linkDisabledColor","disabledText","focusBorderColor","focusBorder","lib","fonts","medium","color","outline","fontSize","fontWeight","selectors",".ms-Fabric--isFocusVisible &:focus","boxShadow","borderBottom","background","backgroundColor","border","cursor","display","margin","overflow","padding","textAlign","textOverflow","userSelect","textDecoration","&:link, &:visited","pointerEvents","&:active, &:hover, &:active:hover","&:focus","scope"],"mappings":"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","file":"0-2bf7ce3c407310e4e4df.js","sourcesContent":["import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.function.bind\";\nimport { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __rest, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = function () {\n  function OperationData(options, context) {\n    this.isMounted = false;\n    this.previousOptions = {};\n    this.context = {};\n    this.options = {};\n    this.options = options || {};\n    this.context = context || {};\n  }\n\n  OperationData.prototype.getOptions = function () {\n    return this.options;\n  };\n\n  OperationData.prototype.setOptions = function (newOptions) {\n    if (!equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n\n    this.options = newOptions;\n  };\n\n  OperationData.prototype.unmount = function () {\n    this.isMounted = false;\n  };\n\n  OperationData.prototype.refreshClient = function () {\n    var client = this.options && this.options.client || this.context && this.context.client;\n    process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ' + 'ApolloClient instance in via options.');\n    var isNew = false;\n\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n\n    return {\n      client: this.client,\n      isNew: isNew\n    };\n  };\n\n  OperationData.prototype.verifyDocumentType = function (document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" + (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n  };\n\n  return OperationData;\n}();\n\nvar QueryData = function (_super) {\n  __extends(QueryData, _super);\n\n  function QueryData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        forceUpdate = _a.forceUpdate;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.previousData = {};\n    _this.currentObservable = {};\n    _this.runLazy = false;\n\n    _this.runLazyQuery = function (options) {\n      _this.runLazy = true;\n      _this.lazyOptions = options;\n\n      _this.forceUpdate();\n    };\n\n    _this.getExecuteResult = function () {\n      var result = _this.getQueryResult();\n\n      _this.startQuerySubscription();\n\n      return result;\n    };\n\n    _this.forceUpdate = forceUpdate;\n    return _this;\n  }\n\n  QueryData.prototype.execute = function () {\n    this.refreshClient();\n\n    var _a = this.getOptions(),\n        skip = _a.skip,\n        query = _a.query;\n\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n    if (this.isMounted) this.startQuerySubscription();\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  };\n\n  QueryData.prototype.executeLazy = function () {\n    return !this.runLazy ? [this.runLazyQuery, {\n      loading: false,\n      networkStatus: NetworkStatus.ready,\n      called: false,\n      data: undefined\n    }] : [this.runLazyQuery, this.execute()];\n  };\n\n  QueryData.prototype.fetchData = function () {\n    if (this.getOptions().skip) return false;\n\n    var _a = this.getOptions(),\n        children = _a.children,\n        ssr = _a.ssr,\n        displayName = _a.displayName,\n        skip = _a.skip,\n        onCompleted = _a.onCompleted,\n        onError = _a.onError,\n        partialRefetch = _a.partialRefetch,\n        opts = __rest(_a, [\"children\", \"ssr\", \"displayName\", \"skip\", \"onCompleted\", \"onError\", \"partialRefetch\"]);\n\n    var fetchPolicy = opts.fetchPolicy;\n    if (ssr === false) return false;\n\n    if (fetchPolicy === 'network-only' || fetchPolicy === 'cache-and-network') {\n      fetchPolicy = 'cache-first';\n    }\n\n    var obs = this.refreshClient().client.watchQuery(__assign({}, opts, {\n      fetchPolicy: fetchPolicy\n    }));\n\n    if (this.context && this.context.renderPromises) {\n      this.context.renderPromises.registerSSRObservable(obs, this.getOptions());\n    }\n\n    var currentResult = this.currentObservable.query.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  };\n\n  QueryData.prototype.afterExecute = function (_a) {\n    var _this = this;\n\n    var _b = (_a === void 0 ? {} : _a).lazy,\n        lazy = _b === void 0 ? false : _b;\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n      setTimeout(function () {\n        _this.currentObservable.query && _this.currentObservable.query.resetQueryStoreErrors();\n      });\n    }\n\n    return this.unmount.bind(this);\n  };\n\n  QueryData.prototype.cleanup = function () {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  };\n\n  QueryData.prototype.getOptions = function () {\n    var options = _super.prototype.getOptions.call(this);\n\n    var lazyOptions = this.lazyOptions || {};\n\n    var updatedOptions = __assign({}, options, {\n      variables: __assign({}, options.variables, lazyOptions.variables),\n      context: __assign({}, options.context, lazyOptions.context)\n    });\n\n    if (this.runLazy) {\n      delete updatedOptions.skip;\n    }\n\n    return updatedOptions;\n  };\n\n  QueryData.prototype.getExecuteSsrResult = function () {\n    var result;\n    var ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: {}\n    };\n\n    if (this.context && this.context.renderPromises) {\n      result = this.context.renderPromises.addQueryPromise(this, this.getExecuteResult);\n\n      if (!result) {\n        result = ssrLoading;\n      }\n    }\n\n    return result;\n  };\n\n  QueryData.prototype.prepareObservableQueryOptions = function () {\n    this.verifyDocumentType(this.getOptions().query, DocumentType.Query);\n    var displayName = this.getOptions().displayName || 'Query';\n    return __assign({}, this.getOptions(), {\n      displayName: displayName,\n      context: this.getOptions().context || {},\n      metadata: {\n        reactComponent: {\n          displayName: displayName\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.observableQueryFields = function (observable) {\n    return {\n      variables: observable.variables,\n      refetch: observable.refetch.bind(observable),\n      fetchMore: observable.fetchMore.bind(observable),\n      updateQuery: observable.updateQuery.bind(observable),\n      startPolling: observable.startPolling.bind(observable),\n      stopPolling: observable.stopPolling.bind(observable),\n      subscribeToMore: observable.subscribeToMore.bind(observable)\n    };\n  };\n\n  QueryData.prototype.initializeObservableQuery = function () {\n    if (this.context && this.context.renderPromises) {\n      this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n    }\n\n    if (!this.currentObservable.query) {\n      var observableQueryOptions = this.prepareObservableQueryOptions();\n      this.previousData.observableQueryOptions = __assign({}, observableQueryOptions, {\n        children: null\n      });\n      this.currentObservable.query = this.refreshClient().client.watchQuery(observableQueryOptions);\n    }\n  };\n\n  QueryData.prototype.updateObservableQuery = function () {\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n    }\n\n    var newObservableQueryOptions = __assign({}, this.prepareObservableQueryOptions(), {\n      children: null\n    });\n\n    if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable.query.setOptions(newObservableQueryOptions)[\"catch\"](function () {});\n    }\n  };\n\n  QueryData.prototype.startQuerySubscription = function () {\n    var _this = this;\n\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n    var obsQuery = this.currentObservable.query;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: function next(_a) {\n        var loading = _a.loading,\n            networkStatus = _a.networkStatus,\n            data = _a.data;\n\n        if (_this.previousData.result && _this.previousData.result.loading === loading && _this.previousData.result.networkStatus === networkStatus && equal(_this.previousData.result.data, data || {})) {\n          return;\n        }\n\n        _this.forceUpdate();\n      },\n      error: function error(_error) {\n        _this.resubscribeToQuery();\n\n        if (!_error.hasOwnProperty('graphQLErrors')) throw _error;\n\n        _this.forceUpdate();\n      }\n    });\n  };\n\n  QueryData.prototype.resubscribeToQuery = function () {\n    this.removeQuerySubscription();\n    var lastError = this.currentObservable.query.getLastError();\n    var lastResult = this.currentObservable.query.getLastResult();\n    this.currentObservable.query.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query, {\n      lastError: lastError,\n      lastResult: lastResult\n    });\n  };\n\n  QueryData.prototype.getQueryResult = function () {\n    var result = {\n      data: Object.create(null)\n    };\n    Object.assign(result, this.observableQueryFields(this.currentObservable.query));\n\n    if (this.getOptions().skip) {\n      result = __assign({}, result, {\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      });\n    } else {\n      var currentResult = this.currentObservable.query.getCurrentResult();\n      var loading = currentResult.loading,\n          partial = currentResult.partial,\n          networkStatus = currentResult.networkStatus,\n          errors = currentResult.errors;\n      var error = currentResult.error,\n          data = currentResult.data;\n      data = data || Object.create(null);\n\n      if (errors && errors.length > 0) {\n        error = new ApolloError({\n          graphQLErrors: errors\n        });\n      }\n\n      Object.assign(result, {\n        loading: loading,\n        networkStatus: networkStatus,\n        error: error,\n        called: true\n      });\n\n      if (loading) {\n        var previousData = this.previousData.result ? this.previousData.result.data : {};\n        Object.assign(result.data, previousData, data);\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query.getLastResult() || {}).data\n        });\n      } else {\n        var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n        var partialRefetch = this.getOptions().partialRefetch;\n\n        if (partialRefetch && Object.keys(data).length === 0 && partial && fetchPolicy !== 'cache-only') {\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        Object.assign(result.data, data);\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading = this.previousData.result && this.previousData.result.loading || false;\n    this.previousData.result = result;\n    return result;\n  };\n\n  QueryData.prototype.handleErrorOrCompleted = function () {\n    var _a = this.currentObservable.query.getCurrentResult(),\n        data = _a.data,\n        loading = _a.loading,\n        error = _a.error;\n\n    if (!loading) {\n      var _b = this.getOptions(),\n          query = _b.query,\n          variables = _b.variables,\n          onCompleted = _b.onCompleted,\n          onError = _b.onError;\n\n      if (this.previousOptions && !this.previousData.loading && equal(this.previousOptions.query, query) && equal(this.previousOptions.variables, variables)) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  };\n\n  QueryData.prototype.removeQuerySubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return QueryData;\n}(OperationData);\n\nfunction useDeepMemo(memoFn, key) {\n  var ref = useRef();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = {\n      key: key,\n      value: memoFn()\n    };\n  }\n\n  return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n  if (lazy === void 0) {\n    lazy = false;\n  }\n\n  var context = useContext(getApolloContext());\n\n  var _a = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      tick = _a[0],\n      forceUpdate = _a[1];\n\n  var updatedOptions = options ? __assign({}, options, {\n    query: query\n  }) : {\n    query: query\n  };\n  var queryDataRef = useRef();\n\n  if (!queryDataRef.current) {\n    queryDataRef.current = new QueryData({\n      options: updatedOptions,\n      context: context,\n      forceUpdate: forceUpdate\n    });\n  }\n\n  var queryData = queryDataRef.current;\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n  var memo = {\n    options: updatedOptions,\n    context: context,\n    tick: tick\n  };\n  var result = useDeepMemo(function () {\n    return lazy ? queryData.executeLazy() : queryData.execute();\n  }, memo);\n  useEffect(function () {\n    return queryData.afterExecute({\n      lazy: lazy\n    });\n  }, [result]);\n  useEffect(function () {\n    return function () {\n      return queryData.cleanup();\n    };\n  }, []);\n  return result;\n}\n\nfunction useQuery(query, options) {\n  return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n  return useBaseQuery(query, options, true);\n}\n\nvar MutationData = function (_super) {\n  __extends(MutationData, _super);\n\n  function MutationData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        result = _a.result,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.runMutation = function (mutationFunctionOptions) {\n      if (mutationFunctionOptions === void 0) {\n        mutationFunctionOptions = {};\n      }\n\n      _this.onMutationStart();\n\n      var mutationId = _this.generateNewMutationId();\n\n      return _this.mutate(mutationFunctionOptions).then(function (response) {\n        _this.onMutationCompleted(response, mutationId);\n\n        return response;\n      })[\"catch\"](function (error) {\n        _this.onMutationError(error, mutationId);\n\n        if (!_this.getOptions().onError) throw error;\n      });\n    };\n\n    _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n\n    _this.result = result;\n    _this.setResult = setResult;\n    _this.mostRecentMutationId = 0;\n    return _this;\n  }\n\n  MutationData.prototype.execute = function (result) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    return [this.runMutation, result];\n  };\n\n  MutationData.prototype.afterExecute = function () {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  };\n\n  MutationData.prototype.cleanup = function () {};\n\n  MutationData.prototype.mutate = function (mutationFunctionOptions) {\n    var _a = this.getOptions(),\n        mutation = _a.mutation,\n        variables = _a.variables,\n        optimisticResponse = _a.optimisticResponse,\n        update = _a.update,\n        _b = _a.context,\n        mutationContext = _b === void 0 ? {} : _b,\n        _c = _a.awaitRefetchQueries,\n        awaitRefetchQueries = _c === void 0 ? false : _c,\n        fetchPolicy = _a.fetchPolicy;\n\n    var mutateOptions = __assign({}, mutationFunctionOptions);\n\n    var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n    delete mutateOptions.variables;\n    return this.refreshClient().client.mutate(__assign({\n      mutation: mutation,\n      optimisticResponse: optimisticResponse,\n      refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries: awaitRefetchQueries,\n      update: update,\n      context: mutationContext,\n      fetchPolicy: fetchPolicy,\n      variables: mutateVariables\n    }, mutateOptions));\n  };\n\n  MutationData.prototype.onMutationStart = function () {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  };\n\n  MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n    var _a = this.getOptions(),\n        onCompleted = _a.onCompleted,\n        ignoreResults = _a.ignoreResults;\n\n    var data = response.data,\n        errors = response.errors;\n    var error = errors && errors.length > 0 ? new ApolloError({\n      graphQLErrors: errors\n    }) : undefined;\n\n    var callOncomplete = function callOncomplete() {\n      return onCompleted ? onCompleted(data) : null;\n    };\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data: data,\n        error: error\n      });\n    }\n\n    callOncomplete();\n  };\n\n  MutationData.prototype.onMutationError = function (error, mutationId) {\n    var onError = this.getOptions().onError;\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error: error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  };\n\n  MutationData.prototype.generateNewMutationId = function () {\n    return ++this.mostRecentMutationId;\n  };\n\n  MutationData.prototype.isMostRecentMutation = function (mutationId) {\n    return this.mostRecentMutationId === mutationId;\n  };\n\n  MutationData.prototype.updateResult = function (result) {\n    if (this.isMounted && (!this.previousResult || !equal(this.previousResult, result))) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  };\n\n  return MutationData;\n}(OperationData);\n\nfunction useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    called: false,\n    loading: false\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign({}, options, {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n\n    return mutationDataRef.current;\n  }\n\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}\n\nvar SubscriptionData = function (_super) {\n  __extends(SubscriptionData, _super);\n\n  function SubscriptionData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.currentObservable = {};\n    _this.setResult = setResult;\n\n    _this.initialize(options);\n\n    return _this;\n  }\n\n  SubscriptionData.prototype.execute = function (result) {\n    var currentResult = result;\n\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    var shouldResubscribe = this.getOptions().shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (shouldResubscribe !== false && this.previousOptions && Object.keys(this.previousOptions).length > 0 && (this.previousOptions.subscription !== this.getOptions().subscription || !equal(this.previousOptions.variables, this.getOptions().variables))) {\n      this.endSubscription();\n      delete this.currentObservable.query;\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n    this.previousOptions = this.getOptions();\n    return __assign({}, currentResult, {\n      variables: this.getOptions().variables\n    });\n  };\n\n  SubscriptionData.prototype.afterExecute = function () {\n    this.isMounted = true;\n  };\n\n  SubscriptionData.prototype.cleanup = function () {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  };\n\n  SubscriptionData.prototype.initialize = function (options) {\n    if (this.currentObservable.query) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  };\n\n  SubscriptionData.prototype.startSubscription = function () {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query.subscribe({\n      next: this.updateCurrentData.bind(this),\n      error: this.updateError.bind(this),\n      complete: this.completeSubscription.bind(this)\n    });\n  };\n\n  SubscriptionData.prototype.getLoadingResult = function () {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  };\n\n  SubscriptionData.prototype.updateResult = function (result) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  };\n\n  SubscriptionData.prototype.updateCurrentData = function (result) {\n    var onSubscriptionData = this.getOptions().onSubscriptionData;\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  };\n\n  SubscriptionData.prototype.updateError = function (error) {\n    this.updateResult({\n      error: error,\n      loading: false\n    });\n  };\n\n  SubscriptionData.prototype.completeSubscription = function () {\n    var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  };\n\n  SubscriptionData.prototype.endSubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return SubscriptionData;\n}(OperationData);\n\nfunction useSubscription(subscription, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    loading: true,\n    error: undefined,\n    data: undefined\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign({}, options, {\n    subscription: subscription\n  }) : {\n    subscription: subscription\n  };\n  var subscriptionDataRef = useRef();\n\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData({\n        options: updatedOptions,\n        context: context,\n        setResult: setResult\n      });\n    }\n\n    return subscriptionDataRef.current;\n  }\n\n  var subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions);\n  subscriptionData.context = context;\n  useEffect(function () {\n    return subscriptionData.afterExecute();\n  });\n  useEffect(function () {\n    return subscriptionData.cleanup.bind(subscriptionData);\n  }, []);\n  return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n  var client = React.useContext(getApolloContext()).client;\n  process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' + 'have called `ApolloProvider` higher up in your tree.');\n  return client;\n}\n\nfunction makeDefaultQueryInfo() {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nvar RenderPromises = function () {\n  function RenderPromises() {\n    this.queryPromises = new Map();\n    this.queryInfoTrie = new Map();\n  }\n\n  RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n    this.lookupQueryInfo(props).observable = observable;\n  };\n\n  RenderPromises.prototype.getSSRObservable = function (props) {\n    return this.lookupQueryInfo(props).observable;\n  };\n\n  RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n    var info = this.lookupQueryInfo(queryInstance.getOptions());\n\n    if (!info.seen) {\n      this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n        resolve(queryInstance.fetchData());\n      }));\n      return null;\n    }\n\n    return finish();\n  };\n\n  RenderPromises.prototype.hasPromises = function () {\n    return this.queryPromises.size > 0;\n  };\n\n  RenderPromises.prototype.consumeAndAwaitPromises = function () {\n    var _this = this;\n\n    var promises = [];\n    this.queryPromises.forEach(function (promise, queryInstance) {\n      _this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  };\n\n  RenderPromises.prototype.lookupQueryInfo = function (props) {\n    var queryInfoTrie = this.queryInfoTrie;\n    var query = props.query,\n        variables = props.variables;\n    var varMap = queryInfoTrie.get(query) || new Map();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    var variablesString = JSON.stringify(variables);\n    var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  };\n\n  return RenderPromises;\n}();\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };","export { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __rest } from 'tslib';\nimport { useQuery, useMutation, useSubscription } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nfunction Query(props) {\n  var children = props.children,\n      query = props.query,\n      options = __rest(props, [\"children\", \"query\"]);\n\n  var result = useQuery(query, options);\n  return children && result ? children(result) : null;\n}\n\n(function (Query) {\n  Query.propTypes = {\n    client: PropTypes.object,\n    children: PropTypes.func.isRequired,\n    fetchPolicy: PropTypes.string,\n    notifyOnNetworkStatusChange: PropTypes.bool,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    pollInterval: PropTypes.number,\n    query: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    ssr: PropTypes.bool,\n    partialRefetch: PropTypes.bool,\n    returnPartialData: PropTypes.bool\n  };\n})(Query || (Query = {}));\n\nfunction Mutation(props) {\n  var _a = useMutation(props.mutation, props),\n      runMutation = _a[0],\n      result = _a[1];\n\n  return props.children ? props.children(runMutation, result) : null;\n}\n\n(function (Mutation) {\n  Mutation.propTypes = {\n    mutation: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    refetchQueries: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])), PropTypes.func]),\n    awaitRefetchQueries: PropTypes.bool,\n    update: PropTypes.func,\n    children: PropTypes.func.isRequired,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    fetchPolicy: PropTypes.string\n  };\n})(Mutation || (Mutation = {}));\n\nfunction Subscription(props) {\n  var result = useSubscription(props.subscription, props);\n  return props.children && result ? props.children(result) : null;\n}\n\n(function (Subscription) {\n  Subscription.propTypes = {\n    subscription: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    children: PropTypes.func,\n    onSubscriptionData: PropTypes.func,\n    onSubscriptionComplete: PropTypes.func,\n    shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n  };\n})(Subscription || (Subscription = {}));\n\nexport { Mutation, Query, Subscription };","import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.function.name\";\nimport { parser, DocumentType, ApolloConsumer } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign, __rest } from 'tslib';\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { Query, Mutation, Subscription } from '@apollo/react-components';\nimport { invariant } from 'ts-invariant';\n\nvar defaultMapPropsToOptions = function defaultMapPropsToOptions() {\n  return {};\n};\n\nvar defaultMapPropsToSkip = function defaultMapPropsToSkip() {\n  return false;\n};\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nfunction calculateVariablesFromProps(operation, props) {\n  var variables = {};\n\n  for (var _i = 0, _a = operation.variables; _i < _a.length; _i++) {\n    var _b = _a[_i],\n        variable = _b.variable,\n        type = _b.type;\n    if (!variable.name || !variable.name.value) continue;\n    var variableName = variable.name.value;\n    var variableProp = props[variableName];\n\n    if (typeof variableProp !== 'undefined') {\n      variables[variableName] = variableProp;\n      continue;\n    }\n\n    if (type.kind !== 'NonNullType') {\n      variables[variableName] = undefined;\n    }\n  }\n\n  return variables;\n}\n\nvar GraphQLBase = function (_super) {\n  __extends(GraphQLBase, _super);\n\n  function GraphQLBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.withRef = false;\n    _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n    return _this;\n  }\n\n  GraphQLBase.prototype.getWrappedInstance = function () {\n    process.env.NODE_ENV === \"production\" ? invariant(this.withRef, 2) : invariant(this.withRef, \"To access the wrapped instance, you need to specify \" + \"{ withRef: true } in the options\");\n    return this.wrappedInstance;\n  };\n\n  GraphQLBase.prototype.setWrappedInstance = function (ref) {\n    this.wrappedInstance = ref;\n  };\n\n  return GraphQLBase;\n}(React.Component);\n\nfunction withQuery(document, operationOptions) {\n  if (operationOptions === void 0) {\n    operationOptions = {};\n  }\n\n  var operation = parser(document);\n  var _a = operationOptions.options,\n      options = _a === void 0 ? defaultMapPropsToOptions : _a,\n      _b = operationOptions.skip,\n      skip = _b === void 0 ? defaultMapPropsToSkip : _b,\n      _c = operationOptions.alias,\n      alias = _c === void 0 ? 'Apollo' : _c;\n  var mapPropsToOptions = options;\n\n  if (typeof mapPropsToOptions !== 'function') {\n    mapPropsToOptions = function mapPropsToOptions() {\n      return options;\n    };\n  }\n\n  var mapPropsToSkip = skip;\n\n  if (typeof mapPropsToSkip !== 'function') {\n    mapPropsToSkip = function mapPropsToSkip() {\n      return skip;\n    };\n  }\n\n  var lastResultProps;\n  return function (WrappedComponent) {\n    var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n\n    var GraphQL = function (_super) {\n      __extends(GraphQL, _super);\n\n      function GraphQL() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      GraphQL.prototype.render = function () {\n        var _this = this;\n\n        var props = this.props;\n        var shouldSkip = mapPropsToSkip(props);\n        var opts = shouldSkip ? Object.create(null) : __assign({}, mapPropsToOptions(props));\n\n        if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n\n        return React.createElement(Query, __assign({}, opts, {\n          displayName: graphQLDisplayName,\n          skip: shouldSkip,\n          query: document\n        }), function (_a) {\n          var _b, _c;\n\n          var _ = _a.client,\n              data = _a.data,\n              r = __rest(_a, [\"client\", \"data\"]);\n\n          if (operationOptions.withRef) {\n            _this.withRef = true;\n            props = Object.assign({}, props, {\n              ref: _this.setWrappedInstance\n            });\n          }\n\n          if (shouldSkip) {\n            return React.createElement(WrappedComponent, __assign({}, props, {}));\n          }\n\n          var result = Object.assign(r, data || {});\n          var name = operationOptions.name || 'data';\n          var childProps = (_b = {}, _b[name] = result, _b);\n\n          if (operationOptions.props) {\n            var newResult = (_c = {}, _c[name] = result, _c.ownProps = props, _c);\n            lastResultProps = operationOptions.props(newResult, lastResultProps);\n            childProps = lastResultProps;\n          }\n\n          return React.createElement(WrappedComponent, __assign({}, props, childProps));\n        });\n      };\n\n      GraphQL.displayName = graphQLDisplayName;\n      GraphQL.WrappedComponent = WrappedComponent;\n      return GraphQL;\n    }(GraphQLBase);\n\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n\nfunction withMutation(document, operationOptions) {\n  if (operationOptions === void 0) {\n    operationOptions = {};\n  }\n\n  var operation = parser(document);\n  var _a = operationOptions.options,\n      options = _a === void 0 ? defaultMapPropsToOptions : _a,\n      _b = operationOptions.alias,\n      alias = _b === void 0 ? 'Apollo' : _b;\n  var mapPropsToOptions = options;\n  if (typeof mapPropsToOptions !== 'function') mapPropsToOptions = function mapPropsToOptions() {\n    return options;\n  };\n  return function (WrappedComponent) {\n    var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n\n    var GraphQL = function (_super) {\n      __extends(GraphQL, _super);\n\n      function GraphQL() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      GraphQL.prototype.render = function () {\n        var props = this.props;\n        var opts = mapPropsToOptions(props);\n\n        if (operationOptions.withRef) {\n          this.withRef = true;\n          props = Object.assign({}, props, {\n            ref: this.setWrappedInstance\n          });\n        }\n\n        if (!opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n\n        return React.createElement(Mutation, __assign({}, opts, {\n          mutation: document,\n          ignoreResults: true\n        }), function (mutate, _a) {\n          var _b, _c;\n\n          var data = _a.data,\n              r = __rest(_a, [\"data\"]);\n\n          var result = Object.assign(r, data || {});\n          var name = operationOptions.name || 'mutate';\n          var resultName = operationOptions.name ? name + \"Result\" : 'result';\n          var childProps = (_b = {}, _b[name] = mutate, _b[resultName] = result, _b);\n\n          if (operationOptions.props) {\n            var newResult = (_c = {}, _c[name] = mutate, _c[resultName] = result, _c.ownProps = props, _c);\n            childProps = operationOptions.props(newResult);\n          }\n\n          return React.createElement(WrappedComponent, __assign({}, props, childProps));\n        });\n      };\n\n      GraphQL.displayName = graphQLDisplayName;\n      GraphQL.WrappedComponent = WrappedComponent;\n      return GraphQL;\n    }(GraphQLBase);\n\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n\nfunction withSubscription(document, operationOptions) {\n  if (operationOptions === void 0) {\n    operationOptions = {};\n  }\n\n  var operation = parser(document);\n  var _a = operationOptions.options,\n      options = _a === void 0 ? defaultMapPropsToOptions : _a,\n      _b = operationOptions.skip,\n      skip = _b === void 0 ? defaultMapPropsToSkip : _b,\n      _c = operationOptions.alias,\n      alias = _c === void 0 ? 'Apollo' : _c,\n      shouldResubscribe = operationOptions.shouldResubscribe;\n  var mapPropsToOptions = options;\n  if (typeof mapPropsToOptions !== 'function') mapPropsToOptions = function mapPropsToOptions() {\n    return options;\n  };\n  var mapPropsToSkip = skip;\n  if (typeof mapPropsToSkip !== 'function') mapPropsToSkip = function mapPropsToSkip() {\n    return skip;\n  };\n  var lastResultProps;\n  return function (WrappedComponent) {\n    var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n\n    var GraphQL = function (_super) {\n      __extends(GraphQL, _super);\n\n      function GraphQL(props) {\n        var _this = _super.call(this, props) || this;\n\n        _this.state = {\n          resubscribe: false\n        };\n        return _this;\n      }\n\n      GraphQL.prototype.componentDidUpate = function (prevProps) {\n        if (shouldResubscribe) {\n          this.setState({\n            resubscribe: shouldResubscribe(prevProps, this.props)\n          });\n        }\n      };\n\n      GraphQL.prototype.render = function () {\n        var _this = this;\n\n        var props = this.props;\n        var shouldSkip = mapPropsToSkip(props);\n        var opts = shouldSkip ? Object.create(null) : mapPropsToOptions(props);\n\n        if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n\n        return React.createElement(Subscription, __assign({}, opts, {\n          displayName: graphQLDisplayName,\n          skip: shouldSkip,\n          subscription: document,\n          shouldResubscribe: this.state.resubscribe\n        }), function (_a) {\n          var _b, _c;\n\n          var data = _a.data,\n              r = __rest(_a, [\"data\"]);\n\n          if (operationOptions.withRef) {\n            _this.withRef = true;\n            props = Object.assign({}, props, {\n              ref: _this.setWrappedInstance\n            });\n          }\n\n          if (shouldSkip) {\n            return React.createElement(WrappedComponent, __assign({}, props, {}));\n          }\n\n          var result = Object.assign(r, data || {});\n          var name = operationOptions.name || 'data';\n          var childProps = (_b = {}, _b[name] = result, _b);\n\n          if (operationOptions.props) {\n            var newResult = (_c = {}, _c[name] = result, _c.ownProps = props, _c);\n            lastResultProps = operationOptions.props(newResult, lastResultProps);\n            childProps = lastResultProps;\n          }\n\n          return React.createElement(WrappedComponent, __assign({}, props, childProps));\n        });\n      };\n\n      GraphQL.displayName = graphQLDisplayName;\n      GraphQL.WrappedComponent = WrappedComponent;\n      return GraphQL;\n    }(GraphQLBase);\n\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n\nfunction graphql(document, operationOptions) {\n  if (operationOptions === void 0) {\n    operationOptions = {};\n  }\n\n  switch (parser(document).type) {\n    case DocumentType.Mutation:\n      return withMutation(document, operationOptions);\n\n    case DocumentType.Subscription:\n      return withSubscription(document, operationOptions);\n\n    case DocumentType.Query:\n    default:\n      return withQuery(document, operationOptions);\n  }\n}\n\nfunction getDisplayName$1(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nfunction withApollo(WrappedComponent, operationOptions) {\n  if (operationOptions === void 0) {\n    operationOptions = {};\n  }\n\n  var withDisplayName = \"withApollo(\" + getDisplayName$1(WrappedComponent) + \")\";\n\n  var WithApollo = function (_super) {\n    __extends(WithApollo, _super);\n\n    function WithApollo(props) {\n      var _this = _super.call(this, props) || this;\n\n      _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n      return _this;\n    }\n\n    WithApollo.prototype.getWrappedInstance = function () {\n      process.env.NODE_ENV === \"production\" ? invariant(operationOptions.withRef, 1) : invariant(operationOptions.withRef, \"To access the wrapped instance, you need to specify \" + \"{ withRef: true } in the options\");\n      return this.wrappedInstance;\n    };\n\n    WithApollo.prototype.setWrappedInstance = function (ref) {\n      this.wrappedInstance = ref;\n    };\n\n    WithApollo.prototype.render = function () {\n      var _this = this;\n\n      return React.createElement(ApolloConsumer, null, function (client) {\n        var props = Object.assign({}, _this.props, {\n          client: client,\n          ref: operationOptions.withRef ? _this.setWrappedInstance : undefined\n        });\n        return React.createElement(WrappedComponent, __assign({}, props));\n      });\n    };\n\n    WithApollo.displayName = withDisplayName;\n    WithApollo.WrappedComponent = WrappedComponent;\n    return WithApollo;\n  }(React.Component);\n\n  return hoistNonReactStatics(WithApollo, WrappedComponent, {});\n}\n\nexport { graphql, withApollo, withMutation, withQuery, withSubscription };","'use strict';\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar ReactIs = require('react-is');\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;\n\nfunction getStatics(component) {\n  if (ReactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  }\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n\n    return targetComponent;\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}","/** @license React v16.9.0\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar b = \"function\" === typeof Symbol && Symbol[\"for\"],\n    c = b ? Symbol[\"for\"](\"react.element\") : 60103,\n    d = b ? Symbol[\"for\"](\"react.portal\") : 60106,\n    e = b ? Symbol[\"for\"](\"react.fragment\") : 60107,\n    f = b ? Symbol[\"for\"](\"react.strict_mode\") : 60108,\n    g = b ? Symbol[\"for\"](\"react.profiler\") : 60114,\n    h = b ? Symbol[\"for\"](\"react.provider\") : 60109,\n    k = b ? Symbol[\"for\"](\"react.context\") : 60110,\n    l = b ? Symbol[\"for\"](\"react.async_mode\") : 60111,\n    m = b ? Symbol[\"for\"](\"react.concurrent_mode\") : 60111,\n    n = b ? Symbol[\"for\"](\"react.forward_ref\") : 60112,\n    p = b ? Symbol[\"for\"](\"react.suspense\") : 60113,\n    q = b ? Symbol[\"for\"](\"react.suspense_list\") : 60120,\n    r = b ? Symbol[\"for\"](\"react.memo\") : 60115,\n    t = b ? Symbol[\"for\"](\"react.lazy\") : 60116,\n    v = b ? Symbol[\"for\"](\"react.fundamental\") : 60117,\n    w = b ? Symbol[\"for\"](\"react.responder\") : 60118;\n\nfunction x(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var u = a.$$typeof;\n\n    switch (u) {\n      case c:\n        switch (a = a.type, a) {\n          case l:\n          case m:\n          case e:\n          case g:\n          case f:\n          case p:\n            return a;\n\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case n:\n              case h:\n                return a;\n\n              default:\n                return u;\n            }\n\n        }\n\n      case t:\n      case r:\n      case d:\n        return u;\n    }\n  }\n}\n\nfunction y(a) {\n  return x(a) === m;\n}\n\nexports.typeOf = x;\nexports.AsyncMode = l;\nexports.ConcurrentMode = m;\nexports.ContextConsumer = k;\nexports.ContextProvider = h;\nexports.Element = c;\nexports.ForwardRef = n;\nexports.Fragment = e;\nexports.Lazy = t;\nexports.Memo = r;\nexports.Portal = d;\nexports.Profiler = g;\nexports.StrictMode = f;\nexports.Suspense = p;\n\nexports.isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || \"object\" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === v || a.$$typeof === w);\n};\n\nexports.isAsyncMode = function (a) {\n  return y(a) || x(a) === l;\n};\n\nexports.isConcurrentMode = y;\n\nexports.isContextConsumer = function (a) {\n  return x(a) === k;\n};\n\nexports.isContextProvider = function (a) {\n  return x(a) === h;\n};\n\nexports.isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === c;\n};\n\nexports.isForwardRef = function (a) {\n  return x(a) === n;\n};\n\nexports.isFragment = function (a) {\n  return x(a) === e;\n};\n\nexports.isLazy = function (a) {\n  return x(a) === t;\n};\n\nexports.isMemo = function (a) {\n  return x(a) === r;\n};\n\nexports.isPortal = function (a) {\n  return x(a) === d;\n};\n\nexports.isProfiler = function (a) {\n  return x(a) === g;\n};\n\nexports.isStrictMode = function (a) {\n  return x(a) === f;\n};\n\nexports.isSuspense = function (a) {\n  return x(a) === p;\n};","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { BaseComponent, classNamesFunction } from '../../Utilities';\nimport { KeytipData } from '../../KeytipData';\nvar getClassNames = classNamesFunction();\n\nvar LinkBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(LinkBase, _super);\n\n  function LinkBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._link = React.createRef();\n\n    _this._onClick = function (ev) {\n      var _a = _this.props,\n          onClick = _a.onClick,\n          disabled = _a.disabled;\n\n      if (disabled) {\n        ev.preventDefault();\n      } else if (onClick) {\n        onClick(ev);\n      }\n    };\n\n    return _this;\n  }\n\n  LinkBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        disabled = _a.disabled,\n        children = _a.children,\n        className = _a.className,\n        href = _a.href,\n        theme = _a.theme,\n        styles = _a.styles,\n        keytipProps = _a.keytipProps;\n    var classNames = getClassNames(styles, {\n      className: className,\n      isButton: !href,\n      isDisabled: disabled,\n      theme: theme\n    });\n\n    var RootType = this._getRootType(this.props);\n\n    return React.createElement(KeytipData, {\n      keytipProps: keytipProps,\n      ariaDescribedBy: this.props['aria-describedby'],\n      disabled: disabled\n    }, function (keytipAttributes) {\n      return React.createElement(RootType, tslib_1.__assign({}, keytipAttributes, _this._adjustPropsForRootType(RootType, _this.props), {\n        className: classNames.root,\n        onClick: _this._onClick,\n        ref: _this._link,\n        \"aria-disabled\": disabled\n      }), children);\n    });\n  };\n\n  LinkBase.prototype.focus = function () {\n    var current = this._link.current;\n\n    if (current && current.focus) {\n      current.focus();\n    }\n  };\n\n  LinkBase.prototype._adjustPropsForRootType = function (RootType, props) {\n    // Deconstruct the props so we remove props like `as`, `theme` and `styles`\n    // as those will always be removed. We also take some props that are optional\n    // based on the RootType.\n    var children = props.children,\n        as = props.as,\n        disabled = props.disabled,\n        target = props.target,\n        href = props.href,\n        theme = props.theme,\n        getStyles = props.getStyles,\n        styles = props.styles,\n        componentRef = props.componentRef,\n        restProps = tslib_1.__rest(props, [\"children\", \"as\", \"disabled\", \"target\", \"href\", \"theme\", \"getStyles\", \"styles\", \"componentRef\"]); // RootType will be a string if we're dealing with an html component\n\n\n    if (typeof RootType === 'string') {\n      // Remove the disabled prop for anchor elements\n      if (RootType === 'a') {\n        return tslib_1.__assign({\n          target: target,\n          href: disabled ? undefined : href\n        }, restProps);\n      } // Add the type='button' prop for button elements\n\n\n      if (RootType === 'button') {\n        return tslib_1.__assign({\n          type: 'button',\n          disabled: disabled\n        }, restProps);\n      } // Remove the target and href props for all other non anchor elements\n\n\n      return tslib_1.__assign({}, restProps, {\n        disabled: disabled\n      });\n    } // Retain all props except 'as' for ReactComponents\n\n\n    return tslib_1.__assign({\n      target: target,\n      href: href,\n      disabled: disabled\n    }, restProps);\n  };\n\n  LinkBase.prototype._getRootType = function (props) {\n    if (props.as) {\n      return props.as;\n    }\n\n    if (props.href) {\n      return 'a';\n    }\n\n    return 'button';\n  };\n\n  return LinkBase;\n}(BaseComponent);\n\nexport { LinkBase };","import \"core-js/modules/es6.string.link\";\nimport { getGlobalClassNames, HighContrastSelectorWhite, HighContrastSelectorBlack, HighContrastSelector } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Link'\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c;\n\n  var className = props.className,\n      isButton = props.isButton,\n      isDisabled = props.isDisabled,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors; // Tokens\n\n  var linkColor = semanticColors.link;\n  var linkInteractedColor = semanticColors.linkHovered;\n  var linkDisabledColor = semanticColors.disabledText;\n  var focusBorderColor = semanticColors.focusBorder;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      color: linkColor,\n      outline: 'none',\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      selectors: (_a = {\n        '.ms-Fabric--isFocusVisible &:focus': {\n          // Can't use getFocusStyle because it doesn't support wrapping links\n          // https://github.com/OfficeDev/office-ui-fabric-react/issues/4883#issuecomment-406743543\n          // A box-shadow allows the focus rect to wrap links that span multiple lines\n          // and helps the focus rect avoid getting clipped.\n          boxShadow: \"0 0 0 1px \" + focusBorderColor + \" inset\",\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            outline: '1px solid WindowText'\n          }, _b)\n        }\n      }, _a[HighContrastSelector] = {\n        // For IE high contrast mode\n        borderBottom: 'none'\n      }, _a)\n    }, isButton && {\n      background: 'none',\n      backgroundColor: 'transparent',\n      border: 'none',\n      cursor: 'pointer',\n      display: 'inline',\n      margin: 0,\n      overflow: 'inherit',\n      padding: 0,\n      textAlign: 'left',\n      textOverflow: 'inherit',\n      userSelect: 'text',\n      borderBottom: '1px solid transparent',\n      selectors: (_c = {}, _c[HighContrastSelectorBlack] = {\n        color: '#FFFF00'\n      }, _c[HighContrastSelectorWhite] = {\n        color: '#00009F'\n      }, _c)\n    }, !isButton && {\n      textDecoration: 'none'\n    }, isDisabled && ['is-disabled', {\n      color: linkDisabledColor,\n      cursor: 'default'\n    }, {\n      selectors: {\n        '&:link, &:visited': {\n          pointerEvents: 'none'\n        }\n      }\n    }], !isDisabled && {\n      selectors: {\n        '&:active, &:hover, &:active:hover': {\n          color: linkInteractedColor,\n          textDecoration: 'underline'\n        },\n        '&:focus': {\n          color: linkColor\n        }\n      }\n    }, classNames.root, className]\n  };\n};","import { styled } from '../../Utilities';\nimport { LinkBase } from './Link.base';\nimport { getStyles } from './Link.styles';\nexport var Link = styled(LinkBase, getStyles, undefined, {\n  scope: 'Link'\n});"],"sourceRoot":""}
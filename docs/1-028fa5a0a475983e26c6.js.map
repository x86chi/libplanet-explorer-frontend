{"version":3,"sources":["webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsRow.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsList.types.js","webpack:///./node_modules/@fluentui/react/node_modules/@uifabric/utilities/lib/selection/Selection.types.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupedList.types.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupSpacer.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/Check/Check.base.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/Check/Check.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/Check/Check.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsHeader.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsRowCheck.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/@uifabric/utilities/lib/renderFunction/composeRenderFunction.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsRowCheck.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsHeader.types.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/utilities/dragdrop/DragDropHelper.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsColumn.base.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsColumn.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsColumn.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsHeader.base.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsHeader.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsRowFields.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsRow.base.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsRow.js","webpack:///./node_modules/@fluentui/react/node_modules/@uifabric/utilities/lib/selection/Selection.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/Spinner/Spinner.types.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/utilities/selection/SelectionZone.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupedList.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupHeader.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/Spinner/Spinner.base.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/Spinner/Spinner.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/Spinner/Spinner.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupHeader.base.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupHeader.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupShowAll.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupShowAll.base.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupShowAll.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupFooter.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupFooter.base.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupFooter.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/List/List.types.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/List/List.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupedListSection.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupedList.base.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/GroupedList/GroupedList.js","webpack:///./node_modules/@fluentui/react/node_modules/@uifabric/utilities/lib/dom/getRect.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/utilities/decorators/withViewport.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/utilities/groupedList/GroupedListUtility.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsList.base.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsList.styles.js","webpack:///./node_modules/@fluentui/react/node_modules/office-ui-fabric-react/lib/components/DetailsList/DetailsList.js","webpack:///./node_modules/@fluentui/react/node_modules/@uifabric/utilities/lib/DelayedRender.js"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_CELL_STYLE_PROPS","DEFAULT_ROW_HEIGHTS","getStyles","tslib__WEBPACK_IMPORTED_MODULE_1__","_Styling__WEBPACK_IMPORTED_MODULE_2__","_Utilities__WEBPACK_IMPORTED_MODULE_3__","DetailsRowGlobalClassNames","root","compact","cell","cellAnimation","cellCheck","check","cellMeasurer","listCellFirstChild","isContentUnselectable","isSelected","isCheckVisible","isRowHeader","fields","cellLeftPadding","cellRightPadding","cellExtraRightPadding","rowHeight","compactRowHeight","values","Object","rowVerticalPadding","compactRowVerticalPadding","props","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","theme","canSelect","droppingClassName","anySelected","checkboxCellClassName","className","_o","cellStyleProps","enableUpdateAnimations","palette","fonts","neutralPrimary","white","neutralSecondary","neutralLighter","neutralLight","neutralDark","neutralQuaternaryAlt","focusBorder","semanticColors","classNames","colors","defaultHeaderText","defaultMetaText","defaultBackground","defaultHoverHeaderText","defaultHoverMetaText","defaultHoverBackground","selectedHeaderText","selectedMetaText","selectedBackground","selectedHoverHeaderText","selectedHoverMetaText","selectedHoverBackground","focusHeaderText","focusMetaText","focusBackground","focusHoverBackground","selectedStyles","inset","borderColor","outlineColor","color","background","borderBottom","selectors","&:before","position","display","top","height","bottom","left","right","content","borderTop","&:hover","> a","&:focus","MsHighContrastAdjust","a","cannotSelectStyles","userSelect","cursor","rootCompactStyles","minHeight","border","cellCompactStyles","paddingTop","paddingBottom","paddingLeft","defaultCellStyles","boxSizing","verticalAlign","whiteSpace","overflow","textOverflow","& > button","maxWidth","fadeIn400","small","minWidth","padding","textAlign","opacity","cellUnpadded","paddingRight","cellPadded","slideLeftIn40","checkCell","marginTop","flexShrink","checkCover","alignItems","fontSize","medium","fontWeight","semibold","isMultiline","wordBreak","ColumnActionsMode","ConstrainMode","ColumnDragEndLocation","DetailsListLayoutMode","CheckboxVisibility","SELECTION_CHANGE","SelectionMode","SelectionDirection","CollapseAllVisibility","GroupSpacer_GroupSpacer","count","indentWidth","width","react","style","getClassNames","classNamesFunction","CheckGlobalClassNames","circle","checkHost","Check","styled","checked","styles","useFastIcons","IconComponent","FontIcon","Icon","iconName","checkBoxHeight","isRTL","rtl","lib","sharedCircleCheck","lineHeight",":before","borderRadius","bodyBackground","themePrimary",":hover","undefined","scope","GlobalClassNames","tooltipHost","cellIsCheck","collapseButton","isCollapsed","isAllSelected","isSelectAllHidden","isResizingColumn","cellSizer","isResizing","dropHintCircleStyle","dropHintCaretStyle","dropHintLineStyle","cellTitle","cellName","filterChevron","gripperBarVertical","checkTooltip","DetailsHeader_styles_getCellStyles","DetailsRow_styles","bodyText","margin","DetailsRowCheck_styles_GlobalClassNames","isDisabled","isHeader","memoizer","memoize","outer","inner","innerMemoizer","defaultRender","innerProps","outerProps","composeRenderFunction","DetailsRowCheck_getClassNames","FastCheck","_defaultCheckboxRender","checkboxProps","_fastDefaultCheckboxRender","SelectAllVisibility","DetailsRowCheck","isVisible","selected","checkClassName","onRenderDetailsCheckbox","buttonProps","tslib_es6","defaultCheckboxRender","onRenderCheckbox","detailsCheckboxProps","role","css","aria-checked","data-selection-toggle","data-automationid","justifyContent","backgroundColor","DragDropHelper_DragDropHelper","DragDropHelper","params","this","_selection","selection","_dragEnterCounts","_activeTargets","_lastId","_initialized","prototype","dispose","_events","subscribe","events","dragDropOptions","_this","EventGroup","doc","getDocument","on","body","_onMouseUp","bind","_onDocumentMouseUp","onDragStart","onDragLeave","onDragEnter","onDragEnd","onDrop","onDragOver","onMouseDown","isDraggable","isDroppable","activeTarget","key","handlers","eventMap","context","updateDropState_1","updateDropState","dragDropTarget","options","_isDraggable","_isDroppable","_i","eventMap_1","length","event_1","handler","callback","eventName","push","event","isHandled","preventDefault","data","_onMouseDown","_onDragEnd","index","getSelection","_isDragging","dataTransfer","setData","id","target","handlers_1","off","unsubscribe","_dragData","keys","dropTarget","raise","documentElement","_onMouseMove","buttons","_isChild","_onMouseLeave","button","clientX","clientY","eventTarget","dragTarget","parentElement","childElement","canDrag","dragContext","canDrop","DetailsColumn_base_MOUSEDOWN_PRIMARY_BUTTON","DetailsColumn_base_getClassNames","CLASSNAME_ADD_INTERVAL","DetailsColumn_base_DetailsColumnBase","_super","DetailsColumnBase","call","_root","_onRenderColumnHeaderTooltip","tooltipHostProps","hostClassName","children","_onColumnClick","ev","onColumnClick","column","columnActionsMode","DetailsList_types","disabled","_onDragStart","item","itemIndex","selectedItems","_classNames","_updateHeaderDragInfo","current","classList","add","borderWhileDragging","_async","setTimeout","noBorderWhileDragging","remove","setDraggedItemIndex","updateDragInfo","_onColumnContextMenu","onColumnContextMenu","_onRootMouseDown","stopPropagation","initializeComponentRef","Async","render","columnIndex","parentId","onRenderColumnHeaderTooltip","headerClassName","iconClassName","isActionable","isEmpty","name","isIconVisible","isSorted","isGrouped","isFiltered","isPadded","isIconOnly","transitionDurationDrag","transitionDurationDrop","ref","aria-sort","isSortedDescending","aria-colindex","data-is-draggable","draggable","calculatedWidth","data-item-key","gripperBarVerticalStyle","cellTooltip","setAriaDescribedBy","ariaLabel","aria-label","aria-labelledby","data-is-focusable","aria-describedby","_hasAccessibleLabel","onContextMenu","onClick","aria-haspopup","hasDropdown","aria-expanded","isMenuOpen","accessibleLabel","nearIcon","sortIcon","aria-hidden","_renderAccessibleLabel","componentDidMount","dragDropHelper","_addDragDropHandling","isDropped","borderAfterDropping","noBorderAfterDropping","componentWillUnmount","_dragDropSubscription","componentDidUpdate","_getColumnDragDropOptions","selectionIndex","filterAriaLabel","sortAscendingAriaLabel","sortDescendingAriaLabel","groupAriaLabel","DetailsColumn_styles_GlobalClassNames","DetailsColumn","iconForegroundColor","bodySubtext","headerForegroundColor","headerBackgroundColor","dropdownChevronForegroundColor","neutralTertiary","resizerColor","neutralTertiaryAlt","nearIconStyle","outline","borderAfterDragOrDrop","listHeaderBackgroundHovered",":active","listHeaderBackgroundPressed",":hover i[data-icon-name=\"GripperBarVertical\"]","flexDirection","alignContent","maxHeight","flexWrap","flex","transition","DetailsHeader_base_getClassNames","DetailsHeader_base_MOUSEDOWN_PRIMARY_BUTTON","DetailsHeader_base_MOUSEMOVE_PRIMARY_BUTTON","NO_COLUMNS","DetailsHeader_base_DetailsHeaderBase","DetailsHeaderBase","_rootComponent","_draggedColumnIndex","_dropHintDetails","_updateDroppingState","newValue","type","_resetDropHints","_onDragOver","_computeDropHintToBeShown","_onDrop","columnReorderProps","_getColumnReorderProps","targetIndex","_currentDropHintIndex","isValidDrop","_isValidCurrentDropHintIndex","_onDropIndexInfo","sourceIndex","onColumnDrop","dragDropDetails","draggedIndex","handleColumnReorder","_updateDragInfo","_isCheckboxColumnHidden","_getDropHintPositions","onColumnDragStart","onColumnDragEnd","columnDragEndLocation","_isEventOnHeader","dropLocation","prevRef","columns","prevX","prevMid","frozenColumnCountFromStart","frozenColumnCountFromEnd","i","_rootElement","dropHintElement","querySelectorAll","offsetLeft","newMid","originX","startX","endX","dropHintElementRef","isRtl","eventXRelativePosition","getBoundingClientRect","currentDropHintIndex","_liesBetween","currentIndex","lastValidColumn","indexToUpdate","_isBefore","_isAfter","startIndex","endIndex","middleIndex","Math","ceil","_updateDropHintElement","_renderColumnSizer","columnResizeDetails","state","isResizable","_stopPropagation","data-sizer-index","onBlur","_onSizerBlur","cellSizerStart","cellSizerEnd","cellIsResizing","onDoubleClick","_onSizerDoubleClick","_onSelectAllClicked","toggleAllSelected","columnIndexAttr","getAttribute","Number","setState","columnMinWidth","_onRootMouseMove","isSizing","_onRootRef","focusZone","react_dom","_onRootKeyDown","onColumnResized","increment","which","KeyCodes","enter","shiftKey","_onSizerMouseMove","onColumnIsSizingChanged","movement","_onSizerMouseUp","_onToggleCollapseAll","onToggleCollapseAll","newCollapsed","isAllCollapsed","_id","getId","_dragDropHelper","minimumPixelsForDrag","Selection_types","_onSelectionChanged","_subscriptionObject","_getHeaderDragDropOptions","prevProps","previousColumns","ariaLabelForToggleAllGroupsButton","ariaLabelForSelectAllCheckbox","selectAllVisibility","ariaLabelForSelectionColumn","selectionMode","groupNestingDepth","checkboxVisibility","showCheckbox","none","isCheckboxHidden","hidden","isCheckboxAlwaysVisible","always","FocusZone","componentRef","onMouseMove","direction","FocusZone_types","horizontal","multiple","collapseAllVisibility","visible","cellIsGroupExpander","map","_renderDropHint","_renderColumnDivider","Layer","sizingOverlay","onMouseUp","focus","Boolean","columnReorderOptions","element","displayProperty","childNodes","clientRect","header","onRenderDivider","dropHintIndex","dropHintStyle","onColumnAutoResized","defaultProps","b","DetailsHeader","cellSizerFadeInStyles","cellStyles","bodyDivider","setFocusVisibility","cellWrapperPadded","cellIsActionable","cellIsEmpty","zIndex",":after",":focus:after",":hover:after","boxShadow","marginLeft","transformOrigin","transform","visibility","DetailsRowFields_DetailsRowFields","columnStartIndex","rowClassNames","onRenderItemColumn","getCellValueKey","cellsByColumn","cellValueKeysRef","cellValueKeys","onRender","getValueKey","cellContentsRender","value","fieldName","toString","getCellText","previousValueKey","cellValueKey","showAnimation","aria-readonly","data-automation-key","DetailsRow_base_getClassNames","DetailsRow_base_NO_COLUMNS","DetailsRow_base_DetailsRowBase","DetailsRowBase","_cellMeasurer","_focusZone","selectionState","_getSelectionState","object","isDropping","dragDropEvents","_droppingClassNames","columnMeasureInfo","onDidMount","_getRowDragDropOptions","_onDidMountCalled","previousProps","newWidth","onMeasureDone","onWillUnmount","UNSAFE_componentWillReceiveProps","newProps","shouldComponentUpdate","nextProps","nextState","useReducedRowRenderer","newSelectionState","onRenderCheck","_onRenderCheck","rowWidth","getRowAriaLabel","getRowAriaDescribedBy","checkButtonAriaLabel","rowFieldsAs","RowFields","isSelectionModal","ariaDescribedBy","canSelectItem","ariaSelected","_rowClassNames","rowFields","properties","data-selection-index","data-selection-touch-invoke","data-item-index","aria-rowindex","aria-selected","allowFocusRoot","measureCell","forceIntoFirstElement","isIndexSelected","isModal","eventsToRegister","DetailsRow","Selection_Selection","Selection","arguments","onSelectionChanged","getKey","items","mode","_getKey","defaultGetKey","_changeEventSuppressionCount","_exemptedCount","_anchoredIndex","_unselectableCount","_canSelectItem","_isModal","setItems","getSelectedCount","setChangeEvents","isEnabled","suppressChange","_hasChanged","_change","setModal","setAllSelected","shouldClear","newKeyToIndexMap","newUnselectableIndices","hasSelectionChanged","_setAllSelected","newExemptedIndicies","newExemptedCount","indexProperty","_exemptedIndices","hasOwnProperty","exemptKey","_items","newIndex","_isAllSelected","_keyToIndexMap","_unselectableIndices","_selectedItems","_updateCount","getItems","getSelectedIndices","_selectedIndices","isRangeSelected","fromIndex","selectableCount","single","min","isKeySelected","setKeySelected","shouldAnchor","setIndexSelected","max","isExempt","selectToKey","clearSelection","selectToIndex","anchorIndex","toggleKeySelected","toggleIndexSelected","toggleRangeSelected","preserveModalState","SpinnerSize","SpinnerType","SELECTION_TOGGLE_ATTRIBUTE_NAME","SELECTION_INVOKE_ATTRIBUTE_NAME","SELECTION_INVOKE_TOUCH_ATTRIBUTE_NAME","SELECTALL_TOGGLE_ALL_ATTRIBUTE_NAME","SelectionZone_SelectionZone","SelectionZone","ignoreNextFocus","_handleNextFocus","_onSelectionChange","_onMouseDownCapture","document","activeElement","elementContains","_hasAttribute","getParent","_onFocus","isToggleModifierPressed","_isCtrlPressed","_isMetaPressed","_getSelectionMode","_shouldHandleFocus","isToggle","itemRoot","_findItemRoot","_getItemIndex","enterModalOnTouch","_isTouch","_setIsTouch","isSelectedOnFocus","_onItemSurfaceClick","_updateModifiers","_isSelectionDisabled","_shouldAutoSelect","_isShiftPressed","_onInvokeMouseDown","disableAutoSelectOnInputElements","tagName","_onTouchStartCapture","_onClick","enableTouchInvocationTarget","isSelectionDisabled","_onToggleAllClick","_onToggleClick","_onInvokeClick","_onContextMenu","onItemContextMenu","nativeEvent","_onDoubleClick","onItemInvoked","_isInputElement","_onKeyDownCapture","_onKeyDown","isSelectAllKey","isClearSelectionKey","escape","space","getDerivedStateFromProps","prevState","win","getWindow","_findScrollParentAndTryClearOnEmptyClick","ms-SelectionZone--modal","onKeyDown","onKeyDownCapture","onMouseDownCapture","onFocusCapture","data-selection-is-modal","useFocusRects","_isTabPressed","_clearAndSelectIndex","scrollParent","lib_scroll","_tryClearOnEmptyClick","Node","contains","selectionPreservedOnEmptyClick","_isNonHandledClick","ctrlKey","metaKey","keyCode","tab","indexValue","attributeName","lib_focus","handleFocus","_shouldHandleFocusTimeoutId","clearTimeout","isTouch","_isTouchTimeoutId","GroupedList_styles_GlobalClassNames","group","link","listCell","beziers","GroupHeader_styles_GlobalClassNames","dropIcon","expand","title","iconTag","GroupHeader_styles_beziers","Spinner_base_getClassNames","Spinner_base_SpinnerBase","SpinnerBase","apply","size","ariaLive","label","labelPosition","statusMessage","nativeProps","styleSize","large","aria-live","DelayedRender","screenReaderText","Spinner_styles_GlobalClassNames","spinAnimation","0%","100%","Spinner","themeLight","borderTopColor","animationName","animationDuration","animationIterationCount","animationTimingFunction","xSmall","GroupHeader_base_getClassNames","GroupHeader_base_GroupHeaderBase","GroupHeaderBase","_toggleCollapse","onToggleCollapse","isGroupLoading","newLoadingVisible","isLoadingVisible","_onKeyUp","shouldOpen","_onToggleSelectGroupClick","onToggleSelectGroup","_onHeaderClick","onGroupHeaderClick","_onRenderTitle","headerCount","hasMoreData","groupLevel","viewport","loadingText","onRenderTitle","onRenderGroupHeaderCheckbox","isCollapsedGroupSelectVisible","expandButtonProps","expandButtonIcon","selectAllButtonProps","groupedListId","ariaPosInSet","ariaSetSize","isSelectionCheckVisible","currentlySelected","aria-setsize","aria-posinset","onKeyUp","aria-level","groupHeaderContainer","aria-controls","expandIsCollapsed","GroupHeader_base_FastCheck","GroupHeader","finalRowHeight","checkExpandResetStyles","listBackground","listItemBackgroundHovered","actionLinkHovered","durationValue4","durationValue1","transitionDelay","durationValue3","listItemBackgroundChecked","listItemBackgroundCheckedHovered","neutralQuaternary","mediumPlus","regular","durationValue2","GroupShowAll_styles_GlobalClassNames","GroupShowAll_base_getClassNames","GroupShowAll","showAllLinkText","onToggleSummarize","memoizedOnClick","Link","GroupFooter_styles_GlobalClassNames","GroupFooter_base_getClassNames","GroupFooter","footerText","ScrollToMode","RESIZE_DELAY","MIN_SCROLL_UPDATE_DELAY","MAX_SCROLL_UPDATE_DELAY","IDLE_DEBOUNCE_DELAY","DONE_SCROLLING_WAIT","EMPTY_RECT","_measurePageRect","_measureSurfaceRect","_measureScrollRect","List_List","List","_surface","_pageRefs","_onRenderRoot","rootRef","surfaceElement","divProps","_onRenderSurface","surfaceRef","pageElements","_onRenderPage","pageProps","onRenderCell","page","cellRole","cells","itemKey","data-list-index","ignoreScrollingState","isScrolling","pages","_estimatedPageHeight","_totalEstimates","_requiredWindowsAhead","_requiredWindowsBehind","_measureVersion","_onAsyncScroll","debounce","leading","maxWait","_onAsyncIdle","_onAsyncResize","_onScrollingDone","_cachedPageHeights","_focusedIndex","_pageCache","defineProperty","get","enumerable","configurable","scrollToIndex","measureItem","scrollToMode","_getRenderCount","allowedRect","_allowedRect","scrollTop","itemsPerPage","pageSpecification","_getPageSpecification","pageHeight","itemCount","_scrollElement","scrollRect","scrollWindow","itemPositionWithinPage","itemIndexInPage","scrollBottom","getStartItemIndexInView","pages_1","isSpacer","_scrollTop","floor","totalRowHeight","_updatePages","window","_onScroll","renderCount","version","_resetRequiredWindows","_requiredRect","_invalidatePageCache","newState","oldPages","newPages","oldPage","newPage","forceUpdate","_updateRenderRects","getTotalListHeight","_surfaceRect","onRenderSurface","onRenderRoot","pages_2","_renderPage","finalOnRenderSurface","_shouldVirtualize","onShouldVirtualize","cachedPage","usePageCache","pageElement","pageStyle","_getPageStyle","onRenderPage","newRef","getPageStyle","indexString","innerRect","outerRect","_materializedRect","renderedWindowsAhead","renderedWindowsBehind","requiredWindowsAhead","requiredWindowsBehind","windowsAhead","windowsBehind","newListState","_buildPages","oldListPages","_notifyPageChanges","finalProps","finalState","getPageHeight","_updatePageMeasurements","_hasCompletedFirstRender","onPagesUpdated","onPageAdded","onPageRemoved","renderedIndexes","oldPages_1","newPages_1","_onPageAdded","_onPageRemoved","heightChanged","_measurePage","hasChangedHeight","cachedHeight","measureVersion","newClientRect","clientWidth","clientHeight","round","materializedRect","pageTop","currentSpacer","focusedIndex","shouldVirtualize","isFirstRender","_loop_1","this_1","pageData","targetRect","newRect","pageBottom","isPageRendered","array","isPageInAllowedRange","isPageInRequiredRange","itemsInPage","_createPage","slice","_visibleRect","SPACER_KEY_PREFIX","visibleRect","getPageSpecification","_getItemCountForPage","_getPageHeight","visibileRect","getItemCountForPage","pageKey","surfaceRect","scrollHeight","_scrollHeight","abs","visibleTop","innerHeight","_expandRect","containsFocus","rect","pagesBefore","pagesAfter","GroupedListSection_GroupedListSection","GroupedListSection","_list","_subGroupRefs","_droppingClassName","_onRenderGroupHeader","_onRenderGroupShowAll","_onRenderGroupFooter","_renderSubGroup","subGroup","subGroupIndex","getGroupItemLimit","groupProps","headerProps","showAllProps","footerProps","listProps","onRenderGroupHeader","onRenderGroupShowAll","onRenderGroupFooter","nestingDepth","level","showEmptyGroups","_ref","_getGroupKey","groupIndex","groups","_getGroupDragDropOptions","isGroup","newIsDropping","groupedListClassNames","Infinity","isShowAllVisible","isShowingAll","hasNestedGroups","dividerProps","ariaControlsProps","groupHeaderProps","groupShowAllProps","groupFooterProps","canDragGroups","_getDroppingClassName","_returnOne","_onRenderGroup","forceListUpdate","subGroupCount","pageRefs","String","_onRenderGroupCell","groupIsDropping","GroupedList_base_getClassNames","ROW_HEIGHT","COMPACT_ROW_HEIGHT","GroupedList_base_GroupedListBase","GroupedListBase","_groupRefs","_renderGroup","_onToggleSelectGroup","_onToggleCollapse","_onToggleSummarize","_getGroupNestingDepth","onRenderHeader","onRenderShowAll","onRenderFooter","_getDefaultGroupItemLimit","_getGroupItemLimit","_getGroupHeight","getGroupHeight","pageGroup","_updateIsSomeGroupExpanded","_isInnerZoneKeystroke","_isSomeGroupExpanded","_computeIsSomeGroupExpanded","shouldForceUpdates","_forceListUpdates","isAllGroupsCollapsed","_setGroupsCollapsedState","focusZoneProps","shouldEnterInnerZone","vertical","data-is-scrollable","toggleCollapseAll","allCollapsed","groupsInLevel","groupCount","some","onGroupExpandStateChanged","newIsSomeGroupExpanded","isHeaderVisible","GroupedList","getRect","innerWidth","withViewport_RESIZE_DELAY","MAX_RESIZE_ATTEMPTS","withViewport","ComposedComponent","WithViewportComponent","_registerResizeObserver","_viewportResizeObserver","ResizeObserver","observe","_unregisterResizeObserver","disconnect","_updateViewport","withForceUpdate","viewportElement","_resizeAttempts","_composedComponentInstance","skipViewportMeasures","_isResizeObserverAvailable","oldSkipViewportMeasures","newSkipViewportMeasures","newViewport","_updateComposedComponentRef","BaseDecorator","DetailsList_base_getClassNames","MIN_COLUMN_WIDTH","DetailsList_base_DetailsListBase","DetailsListBase","_header","_groupedList","_selectionZone","_sumColumnWidths","totalWidth","forEach","_onRenderRow","_onRenderDetailsHeader","detailsHeaderProps","_onRenderDetailsFooter","detailsFooterProps","_onRenderListCell","_onRenderCell","rowElementEventMap","onRenderMissingItem","onRenderRow","adjustedColumns","rowProps","_onRowDidMount","_onRowWillUnmount","_onGroupExpandStateChanged","isSomeGroupExpanded","_onColumnIsSizingChanged","_onHeaderKeyDown","down","_onContentKeyDown","up","altKey","row","_getItemKey","_activeRows","_setFocusToRowIfPending","onRowDidMount","onRowWillUnmount","collapsed","_onColumnDragEnd","finalDropLocation","outside","surface","_onColumnResized","resizingColumn","resizingColumnIndex","newCalculatedWidth","onColumnResize","_rememberCalculatedWidth","_adjustColumns","_onColumnAutoResized","totalCount","_onActiveRowChanged","el","onActiveItemChanged","focusedItemIndex","_onBlur","_isRightArrow","_columnOverrides","lastWidth","_getAdjustedColumns","disableSelectionZone","_initialFocusedIndex","initialFocusedIndex","focusIndex","_setFocusToRow","onDidUpdate","setKey","newViewportWidth","oldViewportWidth","shouldResetSelection","layoutMode","ariaLabelForListHeader","constrainMode","isPlaceholderData","onColumnHeaderClick","onColumnHeaderContextMenu","selectionZoneProps","ariaLabelForGrid","shouldApplyApplicationRole","additionalListProps","onRenderDetailsHeader","onRenderDetailsFooter","_getDetailsFooterProps","rowCount","total","remainingGroups","currentGroup","pop","GroupedListUtility_GetGroupCount","isFixed","fixedColumns","isHorizontalConstrained","horizontalConstrained","onActiveElementChanged","list","_getGroupProps","aria-rowcount","aria-colcount","aria-busy","headerWrapper","contentWrapper","enterModalSelectionOnTouch","_notifyColumnsResized","currentWidth","viewportWidth","newItems","newColumns","lastSelectionMode","canResizeColumns","sortedColumnKey","groupedColumnKey","firstItem","propName","isCollapsable","isCollapsible","clickable","buildColumns","_getFixedColumns","_getJustifiedColumnsAfterResize","_getJustifiedColumns","_getColumnOverride","newColumn","fixedWidth","reduce","getPaddedWidth","remainingColumns","remainingWidth","firstIndex","rowCheckWidth","groupExpandWidth","availableWidth","lastIndex","overflowWidth","originalWidth","splice","isLast","overrides","spaceLeft","detailsGroupProps","onRenderDetailsGroupFooter","onRenderDetailsGroupHeader","justified","onHover","isFirst","DetailsList_styles_GlobalClassNames","DetailsList","listText","overflowX","overflowY","WebkitOverflowScrolling","tslib__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","isRendered","delay","_timeoutId","only"],"mappings":"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","file":"1-028fa5a0a475983e26c6.js","sourcesContent":["import \"core-js/modules/es6.string.small\";\nimport { __assign } from \"tslib\";\nimport { AnimationClassNames, AnimationStyles, HighContrastSelector, getFocusStyle, getGlobalClassNames, FontWeights } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nexport var DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields'\n};\nvar IsFocusableSelector = \"[data-is-focusable='true']\";\nexport var DEFAULT_CELL_STYLE_PROPS = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24\n}; // Source of default row heights to share.\n\nexport var DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32\n}; // Constant values\n\nvar values = __assign(__assign({}, DEFAULT_ROW_HEIGHTS), {\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6\n});\n\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n  var theme = props.theme,\n      isSelected = props.isSelected,\n      canSelect = props.canSelect,\n      droppingClassName = props.droppingClassName,\n      anySelected = props.anySelected,\n      isCheckVisible = props.isCheckVisible,\n      checkboxCellClassName = props.checkboxCellClassName,\n      compact = props.compact,\n      className = props.className,\n      _o = props.cellStyleProps,\n      cellStyleProps = _o === void 0 ? DEFAULT_CELL_STYLE_PROPS : _o,\n      enableUpdateAnimations = props.enableUpdateAnimations;\n  var palette = theme.palette,\n      fonts = theme.fonts;\n  var neutralPrimary = palette.neutralPrimary,\n      white = palette.white,\n      neutralSecondary = palette.neutralSecondary,\n      neutralLighter = palette.neutralLighter,\n      neutralLight = palette.neutralLight,\n      neutralDark = palette.neutralDark,\n      neutralQuaternaryAlt = palette.neutralQuaternaryAlt;\n  var focusBorder = theme.semanticColors.focusBorder;\n  var classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n  var colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt\n  }; // Selected row styles\n\n  var selectedStyles = [getFocusStyle(theme, {\n    inset: -1,\n    borderColor: focusBorder,\n    outlineColor: white\n  }), classNames.isSelected, {\n    color: colors.selectedMetaText,\n    background: colors.selectedBackground,\n    borderBottom: \"1px solid \" + white,\n    selectors: (_a = {\n      '&:before': {\n        position: 'absolute',\n        display: 'block',\n        top: -1,\n        height: 1,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        content: '',\n        borderTop: \"1px solid \" + white\n      },\n      // Selected State hover\n      '&:hover': {\n        background: colors.selectedHoverBackground,\n        color: colors.selectedHoverMetaText,\n        selectors: (_b = {}, // Selected State hover meta cell\n        _b[\".\" + classNames.cell + \" \" + HighContrastSelector] = {\n          color: 'HighlightText',\n          selectors: {\n            '> a': {\n              color: 'HighlightText'\n            }\n          }\n        }, // Selected State hover Header cell\n        _b[\".\" + classNames.isRowHeader] = {\n          color: colors.selectedHoverHeaderText,\n          selectors: (_c = {}, _c[HighContrastSelector] = {\n            color: 'HighlightText'\n          }, _c)\n        }, // Ensure high-contrast mode overrides default hover background\n        _b[HighContrastSelector] = {\n          background: 'Highlight'\n        }, _b)\n      },\n      // Focus state\n      '&:focus': {\n        background: colors.focusBackground,\n        selectors: (_d = {}, // Selected State hover meta cell\n        _d[\".\" + classNames.cell] = {\n          color: colors.focusMetaText,\n          selectors: (_e = {}, _e[HighContrastSelector] = {\n            color: 'HighlightText',\n            selectors: {\n              '> a': {\n                color: 'HighlightText'\n              }\n            }\n          }, _e)\n        }, // Row header cell\n        _d[\".\" + classNames.isRowHeader] = {\n          color: colors.focusHeaderText,\n          selectors: (_f = {}, _f[HighContrastSelector] = {\n            color: 'HighlightText'\n          }, _f)\n        }, // Ensure high-contrast mode overrides default focus background\n        _d[HighContrastSelector] = {\n          background: 'Highlight'\n        }, _d)\n      }\n    }, _a[HighContrastSelector] = {\n      background: 'Highlight',\n      color: 'HighlightText',\n      MsHighContrastAdjust: 'none',\n      selectors: {\n        a: {\n          color: 'HighlightText'\n        }\n      }\n    }, // Focus and hover state\n    _a['&:focus:hover'] = {\n      background: colors.focusHoverBackground\n    }, _a)\n  }];\n  var cannotSelectStyles = [classNames.isContentUnselectable, {\n    userSelect: 'none',\n    cursor: 'default'\n  }];\n  var rootCompactStyles = {\n    minHeight: values.compactRowHeight,\n    border: 0\n  };\n  var cellCompactStyles = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\"\n  };\n  var defaultCellStyles = [getFocusStyle(theme, {\n    inset: -1\n  }), classNames.cell, {\n    display: 'inline-block',\n    position: 'relative',\n    boxSizing: 'border-box',\n    minHeight: values.rowHeight,\n    verticalAlign: 'top',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingTop: values.rowVerticalPadding,\n    paddingBottom: values.rowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\",\n    selectors: (_g = {\n      '& > button': {\n        maxWidth: '100%'\n      }\n    }, _g[IsFocusableSelector] = getFocusStyle(theme, {\n      inset: -1,\n      borderColor: neutralSecondary,\n      outlineColor: white\n    }), _g)\n  }, isSelected && {\n    selectors: (_h = {}, _h[HighContrastSelector] = {\n      background: 'Highlight',\n      color: 'HighlightText',\n      MsHighContrastAdjust: 'none',\n      selectors: {\n        a: {\n          color: 'HighlightText'\n        }\n      }\n    }, _h)\n  }, compact && cellCompactStyles];\n  return {\n    root: [classNames.root, AnimationClassNames.fadeIn400, droppingClassName, theme.fonts.small, isCheckVisible && classNames.isCheckVisible, getFocusStyle(theme, {\n      borderColor: focusBorder,\n      outlineColor: white\n    }), {\n      borderBottom: \"1px solid \" + neutralLighter,\n      background: colors.defaultBackground,\n      color: colors.defaultMetaText,\n      // This ensures that the row always tries to consume is minimum width and does not compress.\n      display: 'inline-flex',\n      minWidth: '100%',\n      minHeight: values.rowHeight,\n      whiteSpace: 'nowrap',\n      padding: 0,\n      boxSizing: 'border-box',\n      verticalAlign: 'top',\n      textAlign: 'left',\n      selectors: (_j = {}, _j[\".\" + classNames.listCellFirstChild + \" &:before\"] = {\n        display: 'none'\n      }, _j['&:hover'] = {\n        background: colors.defaultHoverBackground,\n        color: colors.defaultHoverMetaText,\n        selectors: (_k = {}, _k[\".\" + classNames.isRowHeader] = {\n          color: colors.defaultHoverHeaderText\n        }, _k)\n      }, _j[\"&:hover .\" + classNames.check] = {\n        opacity: 1\n      }, _j[\".\" + IsFocusVisibleClassName + \" &:focus .\" + classNames.check] = {\n        opacity: 1\n      }, _j)\n    }, isSelected && selectedStyles, !canSelect && cannotSelectStyles, compact && rootCompactStyles, className],\n    cellUnpadded: {\n      paddingRight: cellStyleProps.cellRightPadding + \"px\"\n    },\n    cellPadded: {\n      paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding + \"px\",\n      selectors: (_l = {}, _l[\"&.\" + classNames.cellCheck] = {\n        paddingRight: 0\n      }, _l)\n    },\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [classNames.cellMeasurer, {\n      overflow: 'visible',\n      whiteSpace: 'nowrap'\n    }],\n    checkCell: [defaultCellStyles, classNames.cellCheck, checkboxCellClassName, {\n      padding: 0,\n      // Ensure that the check cell covers the top border of the cell.\n      // This ensures the click target does not leave a spot which would\n      // cause other items to be deselected.\n      paddingTop: 1,\n      marginTop: -1,\n      flexShrink: 0\n    }],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none'\n    },\n    fields: [classNames.fields, {\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    isRowHeader: [classNames.isRowHeader, {\n      color: colors.defaultHeaderText,\n      fontSize: fonts.medium.fontSize\n    }, isSelected && {\n      color: colors.selectedHeaderText,\n      fontWeight: FontWeights.semibold,\n      selectors: (_m = {}, _m[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _m)\n    }],\n    isMultiline: [defaultCellStyles, {\n      whiteSpace: 'normal',\n      wordBreak: 'break-word',\n      textOverflow: 'clip'\n    }],\n    check: [classNames.check]\n  };\n};","/**\n * Enum to describe how a particular column header behaves.\n * This is used to to specify the property `IColumn.columnActionsMode`.\n * If `IColumn.columnActionsMode` is undefined, it's equivalent to `ColumnActionsMode.clickable`.\n * {@docCategory DetailsList}\n */\nexport var ColumnActionsMode;\n\n(function (ColumnActionsMode) {\n  /** Renders the column header as disabled. */\n  ColumnActionsMode[ColumnActionsMode[\"disabled\"] = 0] = \"disabled\";\n  /** Renders the column header as clickable. Default value. */\n\n  ColumnActionsMode[ColumnActionsMode[\"clickable\"] = 1] = \"clickable\";\n  /** Renders the column header as clickable and displays the dropdown chevron. */\n\n  ColumnActionsMode[ColumnActionsMode[\"hasDropdown\"] = 2] = \"hasDropdown\";\n})(ColumnActionsMode || (ColumnActionsMode = {}));\n/**\n * {@docCategory DetailsList}\n */\n\n\nexport var ConstrainMode;\n\n(function (ConstrainMode) {\n  /** Lets the content grow which allows the page to manage scrolling. */\n  ConstrainMode[ConstrainMode[\"unconstrained\"] = 0] = \"unconstrained\";\n  /** Constrains the list to the given layout space. */\n\n  ConstrainMode[ConstrainMode[\"horizontalConstrained\"] = 1] = \"horizontalConstrained\";\n})(ConstrainMode || (ConstrainMode = {}));\n/**\n * Enum to describe where the column has been dropped, after starting the drag\n * {@docCategory DetailsList}\n */\n\n\nexport var ColumnDragEndLocation;\n\n(function (ColumnDragEndLocation) {\n  /** Drag ended outside of current list */\n  ColumnDragEndLocation[ColumnDragEndLocation[\"outside\"] = 0] = \"outside\";\n  /** Drag ended within current list */\n\n  ColumnDragEndLocation[ColumnDragEndLocation[\"surface\"] = 1] = \"surface\";\n  /** Drag ended on header */\n\n  ColumnDragEndLocation[ColumnDragEndLocation[\"header\"] = 2] = \"header\";\n})(ColumnDragEndLocation || (ColumnDragEndLocation = {}));\n/**\n * {@docCategory DetailsList}\n */\n\n\nexport var DetailsListLayoutMode;\n\n(function (DetailsListLayoutMode) {\n  /**\n   * Lets the user resize columns and makes not attempt to fit them.\n   */\n  DetailsListLayoutMode[DetailsListLayoutMode[\"fixedColumns\"] = 0] = \"fixedColumns\";\n  /**\n   * Manages which columns are visible, tries to size them according to their min/max rules and drops\n   * off columns that can't fit and have isCollapsible set.\n   */\n\n  DetailsListLayoutMode[DetailsListLayoutMode[\"justified\"] = 1] = \"justified\";\n})(DetailsListLayoutMode || (DetailsListLayoutMode = {}));\n/**\n * {@docCategory DetailsList}\n */\n\n\nexport var CheckboxVisibility;\n\n(function (CheckboxVisibility) {\n  /** Visible on hover. */\n  CheckboxVisibility[CheckboxVisibility[\"onHover\"] = 0] = \"onHover\";\n  /** Visible always. */\n\n  CheckboxVisibility[CheckboxVisibility[\"always\"] = 1] = \"always\";\n  /** Hide checkboxes. */\n\n  CheckboxVisibility[CheckboxVisibility[\"hidden\"] = 2] = \"hidden\";\n})(CheckboxVisibility || (CheckboxVisibility = {}));","export var SELECTION_CHANGE = 'change';\n/**\n * {@docCategory Selection}\n */\n\nexport var SelectionMode;\n\n(function (SelectionMode) {\n  SelectionMode[SelectionMode[\"none\"] = 0] = \"none\";\n  SelectionMode[SelectionMode[\"single\"] = 1] = \"single\";\n  SelectionMode[SelectionMode[\"multiple\"] = 2] = \"multiple\";\n})(SelectionMode || (SelectionMode = {}));\n/**\n * {@docCategory Selection}\n */\n\n\nexport var SelectionDirection;\n\n(function (SelectionDirection) {\n  SelectionDirection[SelectionDirection[\"horizontal\"] = 0] = \"horizontal\";\n  SelectionDirection[SelectionDirection[\"vertical\"] = 1] = \"vertical\";\n})(SelectionDirection || (SelectionDirection = {}));","/**\n * {@docCategory GroupedList}\n */\nexport var CollapseAllVisibility;\n\n(function (CollapseAllVisibility) {\n  CollapseAllVisibility[CollapseAllVisibility[\"hidden\"] = 0] = \"hidden\";\n  CollapseAllVisibility[CollapseAllVisibility[\"visible\"] = 1] = \"visible\";\n})(CollapseAllVisibility || (CollapseAllVisibility = {}));","import * as React from 'react';\nexport var SPACER_WIDTH = 36;\nexport var GroupSpacer = function GroupSpacer(props) {\n  var count = props.count,\n      _a = props.indentWidth,\n      indentWidth = _a === void 0 ? SPACER_WIDTH : _a;\n  var width = count * indentWidth;\n  return count > 0 ? React.createElement(\"span\", {\n    className: 'ms-GroupSpacer',\n    style: {\n      display: 'inline-block',\n      width: width\n    }\n  }) : null;\n};","import * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { classNamesFunction } from '../../Utilities';\nvar getClassNames = classNamesFunction();\nexport var CheckBase = function CheckBase(props) {\n  var _a = props.checked,\n      checked = _a === void 0 ? false : _a,\n      className = props.className,\n      theme = props.theme,\n      styles = props.styles,\n      _b = props.useFastIcons,\n      useFastIcons = _b === void 0 ? true : _b;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    checked: checked\n  });\n  var IconComponent = useFastIcons ? FontIcon : Icon;\n  return React.createElement(\"div\", {\n    className: classNames.root\n  }, React.createElement(IconComponent, {\n    iconName: \"CircleRing\",\n    className: classNames.circle\n  }), React.createElement(IconComponent, {\n    iconName: \"StatusCircleCheckmark\",\n    className: classNames.check\n  }));\n};","import { HighContrastSelector, getGlobalClassNames, IconFontSizes } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nexport var CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost'\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c, _d, _e; // eslint-disable-next-line deprecation/deprecation\n\n\n  var _f = props.height,\n      height = _f === void 0 ? props.checkBoxHeight || '18px' : _f,\n      checked = props.checked,\n      className = props.className,\n      theme = props.theme;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var isRTL = getRTL(theme);\n  var classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n  var sharedCircleCheck = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    verticalAlign: 'middle'\n  };\n  return {\n    root: [classNames.root, fonts.medium, {\n      // lineHeight currently needs to be a string to output without 'px'\n      lineHeight: '1',\n      width: height,\n      height: height,\n      verticalAlign: 'top',\n      position: 'relative',\n      userSelect: 'none',\n      selectors: (_a = {\n        ':before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: '1px',\n          right: '1px',\n          bottom: '1px',\n          left: '1px',\n          borderRadius: '50%',\n          opacity: 1,\n          background: semanticColors.bodyBackground\n        }\n      }, _a[\".\" + classNames.checkHost + \":hover &, .\" + classNames.checkHost + \":focus &, &:hover, &:focus\"] = {\n        opacity: 1\n      }, _a)\n    }, checked && ['is-checked', {\n      selectors: {\n        ':before': {\n          background: palette.themePrimary,\n          opacity: 1,\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            background: 'Window'\n          }, _b)\n        }\n      }\n    }], className],\n    circle: [classNames.circle, sharedCircleCheck, {\n      color: palette.neutralSecondary,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _c)\n    }, checked && {\n      color: palette.white\n    }],\n    check: [classNames.check, sharedCircleCheck, {\n      opacity: 0,\n      color: palette.neutralSecondary,\n      fontSize: IconFontSizes.medium,\n      left: isRTL ? '-0.5px' : '.5px',\n      selectors: (_d = {\n        ':hover': {\n          opacity: 1\n        }\n      }, _d[HighContrastSelector] = {\n        MsHighContrastAdjust: 'none'\n      }, _d)\n    }, checked && {\n      opacity: 1,\n      color: palette.white,\n      fontWeight: 900,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none',\n        color: 'WindowText'\n      }, _e)\n    }],\n    checkHost: classNames.checkHost\n  };\n};","import { styled } from '../../Utilities';\nimport { CheckBase } from './Check.base';\nimport { getStyles } from './Check.styles';\nexport var Check = styled(CheckBase, getStyles, undefined, {\n  scope: 'Check'\n}, true);","import \"core-js/modules/es6.string.small\";\nimport { getFocusStyle, focusClear, getGlobalClassNames, HighContrastSelector, hiddenContentStyle } from '../../Styling';\nimport { getRTL, IsFocusVisibleClassName } from '../../Utilities';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles'; // For every group level there is a GroupSpacer added. Importing this const to have the source value in one place.\n\nimport { SPACER_WIDTH as GROUP_EXPANDER_WIDTH } from '../GroupedList/GroupSpacer';\nvar GlobalClassNames = {\n  tooltipHost: 'ms-TooltipHost',\n  root: 'ms-DetailsHeader',\n  cell: 'ms-DetailsHeader-cell',\n  cellIsCheck: 'ms-DetailsHeader-cellIsCheck',\n  collapseButton: 'ms-DetailsHeader-collapseButton',\n  isCollapsed: 'is-collapsed',\n  isAllSelected: 'is-allSelected',\n  isSelectAllHidden: 'is-selectAllHidden',\n  isResizingColumn: 'is-resizingColumn',\n  cellSizer: 'ms-DetailsHeader-cellSizer',\n  isResizing: 'is-resizing',\n  dropHintCircleStyle: 'ms-DetailsHeader-dropHintCircleStyle',\n  dropHintCaretStyle: 'ms-DetailsHeader-dropHintCaretStyle',\n  dropHintLineStyle: 'ms-DetailsHeader-dropHintLineStyle',\n  cellTitle: 'ms-DetailsHeader-cellTitle',\n  cellName: 'ms-DetailsHeader-cellName',\n  filterChevron: 'ms-DetailsHeader-filterChevron',\n  gripperBarVertical: 'ms-DetailsColumn-gripperBarVertical',\n  checkTooltip: 'ms-DetailsHeader-checkTooltip',\n  check: 'ms-DetailsHeader-check'\n};\nexport var HEADER_HEIGHT = 42;\nexport var getCellStyles = function getCellStyles(props) {\n  var theme = props.theme,\n      _a = props.cellStyleProps,\n      cellStyleProps = _a === void 0 ? DEFAULT_CELL_STYLE_PROPS : _a;\n  var semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return [classNames.cell, getFocusStyle(theme), {\n    color: semanticColors.bodyText,\n    position: 'relative',\n    display: 'inline-block',\n    boxSizing: 'border-box',\n    padding: \"0 \" + cellStyleProps.cellRightPadding + \"px 0 \" + cellStyleProps.cellLeftPadding + \"px\",\n    lineHeight: 'inherit',\n    margin: '0',\n    height: HEADER_HEIGHT,\n    verticalAlign: 'top',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    textAlign: 'left'\n  }];\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c, _d;\n\n  var theme = props.theme,\n      className = props.className,\n      isAllSelected = props.isAllSelected,\n      isResizingColumn = props.isResizingColumn,\n      isSizing = props.isSizing,\n      isAllCollapsed = props.isAllCollapsed,\n      _e = props.cellStyleProps,\n      cellStyleProps = _e === void 0 ? DEFAULT_CELL_STYLE_PROPS : _e;\n  var semanticColors = theme.semanticColors,\n      palette = theme.palette,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var colors = {\n    iconForegroundColor: semanticColors.bodySubtext,\n    headerForegroundColor: semanticColors.bodyText,\n    headerBackgroundColor: semanticColors.bodyBackground,\n    dropdownChevronForegroundColor: palette.neutralTertiary,\n    resizerColor: palette.neutralTertiaryAlt\n  };\n  var cellSizerFadeInStyles = {\n    opacity: 1,\n    transition: 'opacity 0.3s linear'\n  };\n  var cellStyles = getCellStyles(props);\n  return {\n    root: [classNames.root, fonts.small, {\n      display: 'inline-block',\n      background: colors.headerBackgroundColor,\n      position: 'relative',\n      minWidth: '100%',\n      verticalAlign: 'top',\n      height: HEADER_HEIGHT,\n      lineHeight: HEADER_HEIGHT,\n      whiteSpace: 'nowrap',\n      boxSizing: 'content-box',\n      paddingBottom: '1px',\n      paddingTop: '16px',\n      borderBottom: \"1px solid \" + semanticColors.bodyDivider,\n      cursor: 'default',\n      userSelect: 'none',\n      selectors: (_a = {}, _a[\"&:hover .\" + classNames.check] = {\n        opacity: 1\n      }, _a[\"& .\" + classNames.tooltipHost + \" .\" + classNames.checkTooltip] = {\n        display: 'block'\n      }, _a)\n    }, isAllSelected && classNames.isAllSelected, isResizingColumn && classNames.isResizingColumn, className],\n    check: [classNames.check, {\n      height: HEADER_HEIGHT\n    }, {\n      selectors: (_b = {}, _b[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        opacity: 1\n      }, _b)\n    }],\n    cellWrapperPadded: {\n      paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding\n    },\n    cellIsCheck: [cellStyles, classNames.cellIsCheck, {\n      position: 'relative',\n      padding: 0,\n      margin: 0,\n      display: 'inline-flex',\n      alignItems: 'center',\n      border: 'none'\n    }, isAllSelected && {\n      opacity: 1\n    }],\n    cellIsGroupExpander: [cellStyles, {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: fonts.small.fontSize,\n      padding: 0,\n      border: 'none',\n      width: GROUP_EXPANDER_WIDTH,\n      color: palette.neutralSecondary,\n      selectors: {\n        ':hover': {\n          backgroundColor: palette.neutralLighter\n        },\n        ':active': {\n          backgroundColor: palette.neutralLight\n        }\n      }\n    }],\n    cellIsActionable: {\n      selectors: {\n        ':hover': {\n          color: semanticColors.bodyText,\n          background: semanticColors.listHeaderBackgroundHovered\n        },\n        ':active': {\n          background: semanticColors.listHeaderBackgroundPressed\n        }\n      }\n    },\n    cellIsEmpty: {\n      textOverflow: 'clip'\n    },\n    cellSizer: [classNames.cellSizer, focusClear(), {\n      display: 'inline-block',\n      position: 'relative',\n      cursor: 'ew-resize',\n      bottom: 0,\n      top: 0,\n      overflow: 'hidden',\n      height: 'inherit',\n      background: 'transparent',\n      zIndex: 1,\n      width: 16,\n      selectors: (_c = {\n        ':after': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          width: 1,\n          background: colors.resizerColor,\n          opacity: 0,\n          left: '50%'\n        },\n        ':focus:after': cellSizerFadeInStyles,\n        ':hover:after': cellSizerFadeInStyles\n      }, _c[\"&.\" + classNames.isResizing + \":after\"] = [cellSizerFadeInStyles, {\n        boxShadow: '0 0 5px 0 rgba(0, 0, 0, 0.4)'\n      }], _c)\n    }],\n    cellIsResizing: classNames.isResizing,\n    cellSizerStart: {\n      margin: '0 -8px'\n    },\n    cellSizerEnd: {\n      margin: 0,\n      marginLeft: -16\n    },\n    collapseButton: [classNames.collapseButton, {\n      transformOrigin: '50% 50%',\n      transition: 'transform .1s linear'\n    }, isAllCollapsed ? [classNames.isCollapsed, {\n      transform: 'rotate(0deg)'\n    }] : {\n      transform: getRTL(theme) ? 'rotate(-90deg)' : 'rotate(90deg)'\n    }],\n    checkTooltip: classNames.checkTooltip,\n    sizingOverlay: isSizing && {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      cursor: 'ew-resize',\n      background: 'rgba(255, 255, 255, 0)',\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        background: 'transparent',\n        MsHighContrastAdjust: 'none'\n      }, _d)\n    },\n    accessibleLabel: hiddenContentStyle,\n    dropHintCircleStyle: [classNames.dropHintCircleStyle, {\n      display: 'inline-block',\n      visibility: 'hidden',\n      position: 'absolute',\n      bottom: 0,\n      height: 9,\n      width: 9,\n      borderRadius: '50%',\n      marginLeft: -5,\n      top: 34,\n      overflow: 'visible',\n      zIndex: 10,\n      border: \"1px solid \" + palette.themePrimary,\n      background: palette.white\n    }],\n    dropHintCaretStyle: [classNames.dropHintCaretStyle, {\n      display: 'none',\n      position: 'absolute',\n      top: -28,\n      left: -6.5,\n      fontSize: fonts.medium.fontSize,\n      color: palette.themePrimary,\n      overflow: 'visible',\n      zIndex: 10\n    }],\n    dropHintLineStyle: [classNames.dropHintLineStyle, {\n      display: 'none',\n      position: 'absolute',\n      bottom: 0,\n      top: 0,\n      overflow: 'hidden',\n      height: 42,\n      width: 1,\n      background: palette.themePrimary,\n      zIndex: 10\n    }],\n    dropHintStyle: {\n      display: 'inline-block',\n      position: 'absolute'\n    }\n  };\n};","import \"core-js/modules/es6.string.small\";\nimport { getGlobalClassNames, getFocusStyle } from '../../Styling';\nimport { DEFAULT_ROW_HEIGHTS } from './DetailsRow.styles';\nimport { HEADER_HEIGHT } from './DetailsHeader.styles';\nimport { CheckGlobalClassNames } from '../Check/Check.styles';\nvar GlobalClassNames = {\n  root: 'ms-DetailsRow-check',\n  isDisabled: 'ms-DetailsRow-check--isDisabled',\n  isHeader: 'ms-DetailsRow-check--isHeader'\n};\nexport var CHECK_CELL_WIDTH = 48;\nexport var getStyles = function getStyles(props) {\n  var theme = props.theme,\n      className = props.className,\n      isHeader = props.isHeader,\n      selected = props.selected,\n      anySelected = props.anySelected,\n      canSelect = props.canSelect,\n      compact = props.compact,\n      isVisible = props.isVisible;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var rowHeight = DEFAULT_ROW_HEIGHTS.rowHeight,\n      compactRowHeight = DEFAULT_ROW_HEIGHTS.compactRowHeight;\n  var height = isHeader ? HEADER_HEIGHT : compact ? compactRowHeight : rowHeight;\n  var isCheckVisible = isVisible || selected || anySelected;\n  return {\n    root: [classNames.root, className],\n    check: [!canSelect && classNames.isDisabled, isHeader && classNames.isHeader, getFocusStyle(theme), theme.fonts.small, CheckGlobalClassNames.checkHost, {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'default',\n      boxSizing: 'border-box',\n      verticalAlign: 'top',\n      background: 'none',\n      backgroundColor: 'transparent',\n      border: 'none',\n      opacity: isCheckVisible ? 1 : 0,\n      height: height,\n      width: CHECK_CELL_WIDTH,\n      padding: 0,\n      margin: 0\n    }],\n    isDisabled: []\n  };\n};","import { createMemoizer } from '../memoize';\n\nfunction createComposedRenderFunction(outer) {\n  var outerMemoizer = createMemoizer(function (inner) {\n    var innerMemoizer = createMemoizer(function (defaultRender) {\n      return function (innerProps) {\n        return inner(innerProps, defaultRender);\n      };\n    });\n    return function (outerProps, defaultRender) {\n      return outer(outerProps, defaultRender ? innerMemoizer(defaultRender) : inner);\n    };\n  });\n  return outerMemoizer;\n}\n\nvar memoizer = createMemoizer(createComposedRenderFunction);\n/**\n * Composes two 'render functions' to produce a final render function that renders\n * the outer function, passing the inner function as 'default render'. The inner function\n * is then passed the original 'default render' prop.\n * @public\n */\n\nexport function composeRenderFunction(outer, inner) {\n  return memoizer(outer)(inner);\n}","import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css, styled, classNamesFunction } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { composeRenderFunction } from '@uifabric/utilities';\nvar getClassNames = classNamesFunction();\n\nvar DetailsRowCheckBase = function DetailsRowCheckBase(props) {\n  var _a = props.isVisible,\n      isVisible = _a === void 0 ? false : _a,\n      _b = props.canSelect,\n      canSelect = _b === void 0 ? false : _b,\n      _c = props.anySelected,\n      anySelected = _c === void 0 ? false : _c,\n      _d = props.selected,\n      selected = _d === void 0 ? false : _d,\n      _e = props.isHeader,\n      isHeader = _e === void 0 ? false : _e,\n      className = props.className,\n      checkClassName = props.checkClassName,\n      styles = props.styles,\n      theme = props.theme,\n      compact = props.compact,\n      onRenderDetailsCheckbox = props.onRenderDetailsCheckbox,\n      _f = props.useFastIcons,\n      useFastIcons = _f === void 0 ? true : _f,\n      // must be removed from buttonProps\n  buttonProps = __rest(props, [\"isVisible\", \"canSelect\", \"anySelected\", \"selected\", \"isHeader\", \"className\", \"checkClassName\", \"styles\", \"theme\", \"compact\", \"onRenderDetailsCheckbox\", \"useFastIcons\"]);\n\n  var defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n  var onRenderCheckbox = onRenderDetailsCheckbox ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender) : defaultCheckboxRender;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    canSelect: canSelect,\n    selected: selected,\n    anySelected: anySelected,\n    className: className,\n    isHeader: isHeader,\n    isVisible: isVisible,\n    compact: compact\n  });\n  var detailsCheckboxProps = {\n    checked: selected,\n    theme: theme\n  };\n  return canSelect ? React.createElement(\"div\", __assign({}, buttonProps, {\n    role: \"checkbox\",\n    // eslint-disable-next-line deprecation/deprecation\n    className: css(classNames.root, classNames.check),\n    \"aria-checked\": selected,\n    \"data-selection-toggle\": true,\n    \"data-automationid\": \"DetailsRowCheck\"\n  }), onRenderCheckbox(detailsCheckboxProps)) : // eslint-disable-next-line deprecation/deprecation\n  React.createElement(\"div\", __assign({}, buttonProps, {\n    className: css(classNames.root, classNames.check)\n  }));\n};\n\nvar FastCheck = React.memo(function (props) {\n  return React.createElement(Check, {\n    theme: props.theme,\n    checked: props.checked,\n    className: props.className,\n    useFastIcons: true\n  });\n});\n\nfunction _defaultCheckboxRender(checkboxProps) {\n  return React.createElement(Check, {\n    checked: checkboxProps.checked\n  });\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps) {\n  return React.createElement(FastCheck, {\n    theme: checkboxProps.theme,\n    checked: checkboxProps.checked\n  });\n}\n\nexport var DetailsRowCheck = styled(DetailsRowCheckBase, getStyles, undefined, {\n  scope: 'DetailsRowCheck'\n}, true);","/**\n * {@docCategory DetailsList}\n */\nexport var SelectAllVisibility;\n\n(function (SelectAllVisibility) {\n  SelectAllVisibility[SelectAllVisibility[\"none\"] = 0] = \"none\";\n  SelectAllVisibility[SelectAllVisibility[\"hidden\"] = 1] = \"hidden\";\n  SelectAllVisibility[SelectAllVisibility[\"visible\"] = 2] = \"visible\";\n})(SelectAllVisibility || (SelectAllVisibility = {}));","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.bind\";\nimport { EventGroup, getDocument } from '../../Utilities';\nvar MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nvar MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\n\nvar DragDropHelper =\n/** @class */\nfunction () {\n  function DragDropHelper(params) {\n    this._selection = params.selection;\n    this._dragEnterCounts = {};\n    this._activeTargets = {};\n    this._lastId = 0; // To make this class cheap to create, which allows simplifying some logic elsewhere,\n    // only initialize the event group and global event handlers as needed.\n\n    this._initialized = false;\n  }\n\n  DragDropHelper.prototype.dispose = function () {\n    if (this._events) {\n      this._events.dispose();\n    }\n  };\n\n  DragDropHelper.prototype.subscribe = function (root, events, dragDropOptions) {\n    var _this = this;\n\n    if (!this._initialized) {\n      this._events = new EventGroup(this);\n      var doc = getDocument(); // clear drag data when mouse up, use capture event to ensure it will be run\n\n      if (doc) {\n        this._events.on(doc.body, 'mouseup', this._onMouseUp.bind(this), true);\n\n        this._events.on(doc, 'mouseup', this._onDocumentMouseUp.bind(this), true);\n      }\n\n      this._initialized = true;\n    }\n\n    var _a = dragDropOptions.key,\n        key = _a === void 0 ? \"\" + ++this._lastId : _a;\n    var handlers = [];\n    var onDragStart;\n    var onDragLeave;\n    var onDragEnter;\n    var onDragEnd;\n    var onDrop;\n    var onDragOver;\n    var onMouseDown;\n    var isDraggable;\n    var isDroppable;\n    var activeTarget;\n\n    if (dragDropOptions && root) {\n      var eventMap = dragDropOptions.eventMap,\n          context = dragDropOptions.context,\n          updateDropState_1 = dragDropOptions.updateDropState;\n      var dragDropTarget = {\n        root: root,\n        options: dragDropOptions,\n        key: key\n      };\n      isDraggable = this._isDraggable(dragDropTarget);\n      isDroppable = this._isDroppable(dragDropTarget);\n\n      if (isDraggable || isDroppable) {\n        if (eventMap) {\n          for (var _i = 0, eventMap_1 = eventMap; _i < eventMap_1.length; _i++) {\n            var event_1 = eventMap_1[_i];\n            var handler = {\n              callback: event_1.callback.bind(null, context),\n              eventName: event_1.eventName\n            };\n            handlers.push(handler);\n\n            this._events.on(root, handler.eventName, handler.callback);\n          }\n        }\n      }\n\n      if (isDroppable) {\n        // If the target is droppable, wire up global event listeners to track drop-related events.\n        onDragLeave = function onDragLeave(event) {\n          if (!event.isHandled) {\n            event.isHandled = true;\n            _this._dragEnterCounts[key]--;\n\n            if (_this._dragEnterCounts[key] === 0) {\n              updateDropState_1(false\n              /* isDropping */\n              , event);\n            }\n          }\n        };\n\n        onDragEnter = function onDragEnter(event) {\n          event.preventDefault(); // needed for IE\n\n          if (!event.isHandled) {\n            event.isHandled = true;\n            _this._dragEnterCounts[key]++;\n\n            if (_this._dragEnterCounts[key] === 1) {\n              updateDropState_1(true\n              /* isDropping */\n              , event);\n            }\n          }\n        };\n\n        onDragEnd = function onDragEnd(event) {\n          _this._dragEnterCounts[key] = 0;\n          updateDropState_1(false\n          /* isDropping */\n          , event);\n        };\n\n        onDrop = function onDrop(event) {\n          _this._dragEnterCounts[key] = 0;\n          updateDropState_1(false\n          /* isDropping */\n          , event);\n\n          if (dragDropOptions.onDrop) {\n            dragDropOptions.onDrop(dragDropOptions.context.data, event);\n          }\n        };\n\n        onDragOver = function onDragOver(event) {\n          event.preventDefault();\n\n          if (dragDropOptions.onDragOver) {\n            dragDropOptions.onDragOver(dragDropOptions.context.data, event);\n          }\n        };\n\n        this._dragEnterCounts[key] = 0; // dragenter and dragleave will be fired when hover to the child element\n        // but we only want to change state when enter or leave the current element\n        // use the count to ensure it.\n\n        events.on(root, 'dragenter', onDragEnter);\n        events.on(root, 'dragleave', onDragLeave);\n        events.on(root, 'dragend', onDragEnd);\n        events.on(root, 'drop', onDrop);\n        events.on(root, 'dragover', onDragOver);\n      }\n\n      if (isDraggable) {\n        // If the target is draggable, wire up local event listeners for mouse events.\n        onMouseDown = this._onMouseDown.bind(this, dragDropTarget);\n        onDragEnd = this._onDragEnd.bind(this, dragDropTarget); // We need to add in data so that on Firefox we show the ghost element when dragging\n\n        onDragStart = function onDragStart(event) {\n          var options = dragDropOptions;\n\n          if (options && options.onDragStart) {\n            options.onDragStart(options.context.data, options.context.index, _this._selection.getSelection(), event);\n          }\n\n          _this._isDragging = true;\n\n          if (event.dataTransfer) {\n            event.dataTransfer.setData('id', root.id);\n          }\n        };\n\n        events.on(root, 'dragstart', onDragStart);\n        events.on(root, 'mousedown', onMouseDown);\n        events.on(root, 'dragend', onDragEnd);\n      }\n\n      activeTarget = {\n        target: dragDropTarget,\n        dispose: function dispose() {\n          if (_this._activeTargets[key] === activeTarget) {\n            delete _this._activeTargets[key];\n          }\n\n          if (root) {\n            for (var _i = 0, handlers_1 = handlers; _i < handlers_1.length; _i++) {\n              var handler = handlers_1[_i];\n\n              _this._events.off(root, handler.eventName, handler.callback);\n            }\n\n            if (isDroppable) {\n              events.off(root, 'dragenter', onDragEnter);\n              events.off(root, 'dragleave', onDragLeave);\n              events.off(root, 'dragend', onDragEnd);\n              events.off(root, 'dragover', onDragOver);\n              events.off(root, 'drop', onDrop);\n            }\n\n            if (isDraggable) {\n              events.off(root, 'dragstart', onDragStart);\n              events.off(root, 'mousedown', onMouseDown);\n              events.off(root, 'dragend', onDragEnd);\n            }\n          }\n        }\n      };\n      this._activeTargets[key] = activeTarget;\n    }\n\n    return {\n      key: key,\n      dispose: function dispose() {\n        if (activeTarget) {\n          activeTarget.dispose();\n        }\n      }\n    };\n  };\n\n  DragDropHelper.prototype.unsubscribe = function (root, key) {\n    var activeTarget = this._activeTargets[key];\n\n    if (activeTarget) {\n      activeTarget.dispose();\n    }\n  };\n\n  DragDropHelper.prototype._onDragEnd = function (target, event) {\n    var options = target.options;\n\n    if (options.onDragEnd) {\n      options.onDragEnd(options.context.data, event);\n    }\n  };\n  /**\n   * clear drag data when mouse up on body\n   */\n\n\n  DragDropHelper.prototype._onMouseUp = function (event) {\n    this._isDragging = false;\n\n    if (this._dragData) {\n      for (var _i = 0, _a = Object.keys(this._activeTargets); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var activeTarget = this._activeTargets[key];\n\n        if (activeTarget.target.root) {\n          this._events.off(activeTarget.target.root, 'mousemove');\n\n          this._events.off(activeTarget.target.root, 'mouseleave');\n        }\n      }\n\n      if (this._dragData.dropTarget) {\n        // raise dragleave event to let dropTarget know it need to remove dropping style\n        EventGroup.raise(this._dragData.dropTarget.root, 'dragleave');\n        EventGroup.raise(this._dragData.dropTarget.root, 'drop');\n      }\n    }\n\n    this._dragData = null;\n  };\n  /**\n   * clear drag data when mouse up outside of the document\n   */\n\n\n  DragDropHelper.prototype._onDocumentMouseUp = function (event) {\n    var doc = getDocument();\n\n    if (doc && event.target === doc.documentElement) {\n      this._onMouseUp(event);\n    }\n  };\n  /**\n   * when mouse move over a new drop target while dragging some items,\n   * fire dragleave on the old target and fire dragenter to the new target\n   * The target will handle style change on dragenter and dragleave events.\n   */\n\n\n  DragDropHelper.prototype._onMouseMove = function (target, event) {\n    var // use buttons property here since ev.button in some edge case is not updating well during the move.\n    // but firefox doesn't support it, so we set the default value when it is not defined.\n    _a = event.buttons,\n        // use buttons property here since ev.button in some edge case is not updating well during the move.\n    // but firefox doesn't support it, so we set the default value when it is not defined.\n    buttons = _a === void 0 ? MOUSEMOVE_PRIMARY_BUTTON : _a;\n\n    if (this._dragData && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\n      // cancel mouse down event and return early when the primary button is not pressed\n      this._onMouseUp(event);\n\n      return;\n    }\n\n    var root = target.root,\n        key = target.key;\n\n    if (this._isDragging) {\n      if (this._isDroppable(target)) {\n        // we can have nested drop targets in the DOM, like a folder inside a group. In that case, when we drag into\n        // the inner target (folder), we first set dropTarget to the inner element. But the same event is bubbled to the\n        // outer target too, and we need to prevent the outer one from taking over.\n        // So, check if the last dropTarget is not a child of the current.\n        if (this._dragData) {\n          if (this._dragData.dropTarget && this._dragData.dropTarget.key !== key && !this._isChild(root, this._dragData.dropTarget.root)) {\n            if (this._dragEnterCounts[this._dragData.dropTarget.key] > 0) {\n              EventGroup.raise(this._dragData.dropTarget.root, 'dragleave');\n              EventGroup.raise(root, 'dragenter');\n              this._dragData.dropTarget = target;\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * when mouse leave a target while dragging some items, fire dragleave to the target\n   */\n\n\n  DragDropHelper.prototype._onMouseLeave = function (target, event) {\n    if (this._isDragging) {\n      if (this._dragData && this._dragData.dropTarget && this._dragData.dropTarget.key === target.key) {\n        EventGroup.raise(target.root, 'dragleave');\n        this._dragData.dropTarget = undefined;\n      }\n    }\n  };\n  /**\n   * when mouse down on a draggable item, we start to track dragdata.\n   */\n\n\n  DragDropHelper.prototype._onMouseDown = function (target, event) {\n    if (event.button !== MOUSEDOWN_PRIMARY_BUTTON) {\n      // Ignore anything except the primary button.\n      return;\n    }\n\n    if (this._isDraggable(target)) {\n      this._dragData = {\n        clientX: event.clientX,\n        clientY: event.clientY,\n        eventTarget: event.target,\n        dragTarget: target\n      };\n\n      for (var _i = 0, _a = Object.keys(this._activeTargets); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var activeTarget = this._activeTargets[key];\n\n        if (activeTarget.target.root) {\n          this._events.on(activeTarget.target.root, 'mousemove', this._onMouseMove.bind(this, activeTarget.target));\n\n          this._events.on(activeTarget.target.root, 'mouseleave', this._onMouseLeave.bind(this, activeTarget.target));\n        }\n      }\n    } else {\n      this._dragData = null;\n    }\n  };\n  /**\n   * determine whether the child target is a descendant of the parent\n   */\n\n\n  DragDropHelper.prototype._isChild = function (parentElement, childElement) {\n    while (childElement && childElement.parentElement) {\n      if (childElement.parentElement === parentElement) {\n        return true;\n      }\n\n      childElement = childElement.parentElement;\n    }\n\n    return false;\n  };\n\n  DragDropHelper.prototype._isDraggable = function (target) {\n    var options = target.options;\n    return !!(options.canDrag && options.canDrag(options.context.data));\n  };\n\n  DragDropHelper.prototype._isDroppable = function (target) {\n    // TODO: take the drag item into consideration to prevent dragging an item into the same group\n    var options = target.options;\n    var dragContext = this._dragData && this._dragData.dragTarget ? this._dragData.dragTarget.options.context : undefined;\n    return !!(options.canDrop && options.canDrop(options.context, dragContext));\n  };\n\n  return DragDropHelper;\n}();\n\nexport { DragDropHelper };","import \"core-js/modules/es6.function.name\";\nimport { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { initializeComponentRef, EventGroup, Async, classNamesFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nvar MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nvar getClassNames = classNamesFunction();\nvar TRANSITION_DURATION_DRAG = 200; // ms\n\nvar TRANSITION_DURATION_DROP = 1500; // ms\n\nvar CLASSNAME_ADD_INTERVAL = 20; // ms\n\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\n\nvar DetailsColumnBase =\n/** @class */\nfunction (_super) {\n  __extends(DetailsColumnBase, _super);\n\n  function DetailsColumnBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._root = React.createRef();\n\n    _this._onRenderColumnHeaderTooltip = function (tooltipHostProps) {\n      return React.createElement(\"span\", {\n        className: tooltipHostProps.hostClassName\n      }, tooltipHostProps.children);\n    };\n\n    _this._onColumnClick = function (ev) {\n      var _a = _this.props,\n          onColumnClick = _a.onColumnClick,\n          column = _a.column;\n\n      if (column.columnActionsMode === ColumnActionsMode.disabled) {\n        return;\n      }\n\n      if (column.onColumnClick) {\n        column.onColumnClick(ev, column);\n      }\n\n      if (onColumnClick) {\n        onColumnClick(ev, column);\n      }\n    };\n\n    _this._onDragStart = function (item, itemIndex, selectedItems, event) {\n      var classNames = _this._classNames;\n\n      if (itemIndex) {\n        _this._updateHeaderDragInfo(itemIndex);\n\n        _this._root.current.classList.add(classNames.borderWhileDragging);\n\n        _this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderWhileDragging);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n    };\n\n    _this._onDragEnd = function (item, event) {\n      var classNames = _this._classNames;\n\n      if (event) {\n        _this._updateHeaderDragInfo(-1, event);\n      }\n\n      _this._root.current.classList.remove(classNames.borderWhileDragging);\n\n      _this._root.current.classList.remove(classNames.noBorderWhileDragging);\n    };\n\n    _this._updateHeaderDragInfo = function (itemIndex, event) {\n      /* eslint-disable deprecation/deprecation */\n      if (_this.props.setDraggedItemIndex) {\n        _this.props.setDraggedItemIndex(itemIndex);\n      }\n      /* eslint-enable deprecation/deprecation */\n\n\n      if (_this.props.updateDragInfo) {\n        _this.props.updateDragInfo({\n          itemIndex: itemIndex\n        }, event);\n      }\n    };\n\n    _this._onColumnContextMenu = function (ev) {\n      var _a = _this.props,\n          onColumnContextMenu = _a.onColumnContextMenu,\n          column = _a.column;\n\n      if (column.onColumnContextMenu) {\n        column.onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n\n      if (onColumnContextMenu) {\n        onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n    };\n\n    _this._onRootMouseDown = function (ev) {\n      var isDraggable = _this.props.isDraggable; // Ignore anything except the primary button.\n\n      if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n        ev.stopPropagation();\n      }\n    };\n\n    initializeComponentRef(_this);\n    _this._async = new Async(_this);\n    _this._events = new EventGroup(_this);\n    return _this;\n  }\n\n  DetailsColumnBase.prototype.render = function () {\n    var _a = this.props,\n        column = _a.column,\n        columnIndex = _a.columnIndex,\n        parentId = _a.parentId,\n        isDraggable = _a.isDraggable,\n        styles = _a.styles,\n        theme = _a.theme,\n        _b = _a.cellStyleProps,\n        cellStyleProps = _b === void 0 ? DEFAULT_CELL_STYLE_PROPS : _b,\n        _c = _a.useFastIcons,\n        useFastIcons = _c === void 0 ? true : _c;\n    var _d = this.props.onRenderColumnHeaderTooltip,\n        onRenderColumnHeaderTooltip = _d === void 0 ? this._onRenderColumnHeaderTooltip : _d;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps: cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP\n    });\n    var classNames = this._classNames;\n    var IconComponent = useFastIcons ? FontIcon : Icon;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      key: column.key,\n      ref: this._root,\n      role: 'columnheader',\n      \"aria-sort\": column.isSorted ? column.isSortedDescending ? 'descending' : 'ascending' : 'none',\n      \"aria-colindex\": columnIndex,\n      className: classNames.root,\n      \"data-is-draggable\": isDraggable,\n      draggable: isDraggable,\n      style: {\n        width: column.calculatedWidth + cellStyleProps.cellLeftPadding + cellStyleProps.cellRightPadding + (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0)\n      },\n      \"data-automationid\": 'ColumnsHeaderColumn',\n      \"data-item-key\": column.key\n    }, isDraggable && React.createElement(IconComponent, {\n      iconName: \"GripperBarVertical\",\n      className: classNames.gripperBarVerticalStyle\n    }), onRenderColumnHeaderTooltip({\n      hostClassName: classNames.cellTooltip,\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      setAriaDescribedBy: false,\n      column: column,\n      content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n      children: React.createElement(\"span\", {\n        id: parentId + \"-\" + column.key,\n        \"aria-label\": column.isIconOnly ? column.name : undefined,\n        \"aria-labelledby\": column.isIconOnly ? undefined : parentId + \"-\" + column.key + \"-name\",\n        className: classNames.cellTitle,\n        \"data-is-focusable\": column.columnActionsMode !== ColumnActionsMode.disabled,\n        role: column.columnActionsMode !== ColumnActionsMode.disabled && (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined) ? 'button' : undefined,\n        \"aria-describedby\": !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleLabel() ? parentId + \"-\" + column.key + \"-tooltip\" : undefined,\n        onContextMenu: this._onColumnContextMenu,\n        onClick: this._onColumnClick,\n        \"aria-haspopup\": column.columnActionsMode === ColumnActionsMode.hasDropdown,\n        \"aria-expanded\": column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n      }, React.createElement(\"span\", {\n        id: parentId + \"-\" + column.key + \"-name\",\n        className: classNames.cellName\n      }, (column.iconName || column.iconClassName) && React.createElement(IconComponent, {\n        className: classNames.iconClassName,\n        iconName: column.iconName\n      }), column.isIconOnly ? React.createElement(\"span\", {\n        className: classNames.accessibleLabel\n      }, column.name) : column.name), column.isFiltered && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"Filter\"\n      }), column.isSorted && React.createElement(IconComponent, {\n        className: classNames.sortIcon,\n        iconName: column.isSortedDescending ? 'SortDown' : 'SortUp'\n      }), column.isGrouped && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"GroupedDescending\"\n      }), column.columnActionsMode === ColumnActionsMode.hasDropdown && !column.isIconOnly && React.createElement(IconComponent, {\n        \"aria-hidden\": true,\n        className: classNames.filterChevron,\n        iconName: \"ChevronDown\"\n      }))\n    }, this._onRenderColumnHeaderTooltip)), !this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleLabel() : null);\n  };\n\n  DetailsColumnBase.prototype.componentDidMount = function () {\n    var _this = this;\n\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    var classNames = this._classNames;\n\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n\n        this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n\n      this._async.setTimeout(function () {\n        if (_this._root.current) {\n          _this._root.current.classList.remove(classNames.borderAfterDropping);\n\n          _this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  };\n\n  DetailsColumnBase.prototype.componentWillUnmount = function () {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n\n      delete this._dragDropSubscription;\n    }\n\n    this._async.dispose();\n\n    this._events.dispose();\n  };\n\n  DetailsColumnBase.prototype.componentDidUpdate = function () {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n\n      this._events.off(this._root.current, 'mousedown');\n\n      delete this._dragDropSubscription;\n    }\n  };\n\n  DetailsColumnBase.prototype._getColumnDragDropOptions = function () {\n    var _this = this;\n\n    var columnIndex = this.props.columnIndex;\n    var options = {\n      selectionIndex: columnIndex,\n      context: {\n        data: columnIndex,\n        index: columnIndex\n      },\n      canDrag: function canDrag() {\n        return _this.props.isDraggable;\n      },\n      canDrop: function canDrop() {\n        return false;\n      },\n      onDragStart: this._onDragStart,\n      updateDropState: function updateDropState() {\n        return undefined;\n      },\n      onDrop: function onDrop() {\n        return undefined;\n      },\n      onDragEnd: this._onDragEnd\n    };\n    return options;\n  };\n\n  DetailsColumnBase.prototype._hasAccessibleLabel = function () {\n    var column = this.props.column;\n    return !!(column.ariaLabel || column.filterAriaLabel || column.sortAscendingAriaLabel || column.sortDescendingAriaLabel || column.groupAriaLabel);\n  };\n\n  DetailsColumnBase.prototype._renderAccessibleLabel = function () {\n    var _a = this.props,\n        column = _a.column,\n        parentId = _a.parentId;\n    var classNames = this._classNames;\n    return this._hasAccessibleLabel() && !this.props.onRenderColumnHeaderTooltip ? React.createElement(\"label\", {\n      key: column.key + \"_label\",\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      className: classNames.accessibleLabel\n    }, column.ariaLabel, column.isFiltered && column.filterAriaLabel || null, column.isSorted && (column.isSortedDescending ? column.sortDescendingAriaLabel : column.sortAscendingAriaLabel) || null, column.isGrouped && column.groupAriaLabel || null) : null;\n  };\n\n  DetailsColumnBase.prototype._addDragDropHandling = function () {\n    this._dragDropSubscription = this.props.dragDropHelper.subscribe(this._root.current, this._events, this._getColumnDragDropOptions()); // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  };\n\n  return DetailsColumnBase;\n}(React.Component);\n\nexport { DetailsColumnBase };","import \"core-js/modules/es6.string.small\";\nimport { __assign } from \"tslib\";\nimport { getFocusStyle, getGlobalClassNames, hiddenContentStyle, FontWeights } from '../../Styling';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { getCellStyles } from './DetailsHeader.styles';\nvar GlobalClassNames = {\n  isActionable: 'is-actionable',\n  cellIsCheck: 'ms-DetailsHeader-cellIsCheck',\n  collapseButton: 'ms-DetailsHeader-collapseButton',\n  isCollapsed: 'is-collapsed',\n  isAllSelected: 'is-allSelected',\n  isSelectAllHidden: 'is-selectAllHidden',\n  isResizingColumn: 'is-resizingColumn',\n  isEmpty: 'is-empty',\n  isIconVisible: 'is-icon-visible',\n  cellSizer: 'ms-DetailsHeader-cellSizer',\n  isResizing: 'is-resizing',\n  dropHintCircleStyle: 'ms-DetailsHeader-dropHintCircleStyle',\n  dropHintLineStyle: 'ms-DetailsHeader-dropHintLineStyle',\n  cellTitle: 'ms-DetailsHeader-cellTitle',\n  cellName: 'ms-DetailsHeader-cellName',\n  filterChevron: 'ms-DetailsHeader-filterChevron',\n  gripperBarVerticalStyle: 'ms-DetailsColumn-gripperBar',\n  nearIcon: 'ms-DetailsColumn-nearIcon'\n};\nexport var getStyles = function getStyles(props) {\n  var _a;\n\n  var theme = props.theme,\n      headerClassName = props.headerClassName,\n      iconClassName = props.iconClassName,\n      isActionable = props.isActionable,\n      isEmpty = props.isEmpty,\n      isIconVisible = props.isIconVisible,\n      isPadded = props.isPadded,\n      isIconOnly = props.isIconOnly,\n      _b = props.cellStyleProps,\n      cellStyleProps = _b === void 0 ? DEFAULT_CELL_STYLE_PROPS : _b,\n      transitionDurationDrag = props.transitionDurationDrag,\n      transitionDurationDrop = props.transitionDurationDrop;\n  var semanticColors = theme.semanticColors,\n      palette = theme.palette,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var colors = {\n    iconForegroundColor: semanticColors.bodySubtext,\n    headerForegroundColor: semanticColors.bodyText,\n    headerBackgroundColor: semanticColors.bodyBackground,\n    dropdownChevronForegroundColor: palette.neutralTertiary,\n    resizerColor: palette.neutralTertiaryAlt\n  };\n  var nearIconStyle = {\n    color: colors.iconForegroundColor,\n    opacity: 1,\n    paddingLeft: 8\n  };\n  var borderWhileDragging = {\n    outline: \"1px solid \" + palette.themePrimary\n  };\n  var borderAfterDragOrDrop = {\n    outlineColor: 'transparent'\n  };\n  return {\n    root: [getCellStyles(props), fonts.small, isActionable && [classNames.isActionable, {\n      selectors: {\n        ':hover': {\n          color: semanticColors.bodyText,\n          background: semanticColors.listHeaderBackgroundHovered\n        },\n        ':active': {\n          background: semanticColors.listHeaderBackgroundPressed\n        }\n      }\n    }], isEmpty && [classNames.isEmpty, {\n      textOverflow: 'clip'\n    }], isIconVisible && classNames.isIconVisible, isPadded && {\n      paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding\n    }, {\n      selectors: {\n        ':hover i[data-icon-name=\"GripperBarVertical\"]': {\n          display: 'block'\n        }\n      }\n    }, headerClassName],\n    gripperBarVerticalStyle: {\n      display: 'none',\n      position: 'absolute',\n      textAlign: 'left',\n      color: palette.neutralTertiary,\n      left: 1\n    },\n    nearIcon: [classNames.nearIcon, nearIconStyle],\n    sortIcon: [nearIconStyle, {\n      paddingLeft: 4,\n      position: 'relative',\n      top: 1\n    }],\n    iconClassName: [{\n      color: colors.iconForegroundColor,\n      opacity: 1\n    }, iconClassName],\n    filterChevron: [classNames.filterChevron, {\n      color: colors.dropdownChevronForegroundColor,\n      paddingLeft: 6,\n      verticalAlign: 'middle',\n      fontSize: fonts.small.fontSize\n    }],\n    cellTitle: [classNames.cellTitle, getFocusStyle(theme), __assign({\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      boxSizing: 'border-box',\n      overflow: 'hidden',\n      padding: \"0 \" + cellStyleProps.cellRightPadding + \"px 0 \" + cellStyleProps.cellLeftPadding + \"px\"\n    }, isIconOnly ? {\n      alignContent: 'flex-end',\n      maxHeight: '100%',\n      flexWrap: 'wrap-reverse'\n    } : {})],\n    cellName: [classNames.cellName, {\n      flex: '0 1 auto',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      fontWeight: FontWeights.semibold,\n      fontSize: fonts.medium.fontSize\n    }, isIconOnly && {\n      selectors: (_a = {}, _a[\".\" + classNames.nearIcon] = {\n        paddingLeft: 0\n      }, _a)\n    }],\n    cellTooltip: {\n      display: 'block',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    },\n    accessibleLabel: hiddenContentStyle,\n    borderWhileDragging: borderWhileDragging,\n    noBorderWhileDragging: [borderAfterDragOrDrop, {\n      transition: \"outline \" + transitionDurationDrag + \"ms ease\"\n    }],\n    borderAfterDropping: borderWhileDragging,\n    noBorderAfterDropping: [borderAfterDragOrDrop, {\n      transition: \"outline  \" + transitionDurationDrop + \"ms ease\"\n    }]\n  };\n};","import { styled } from '../../Utilities';\nimport { DetailsColumnBase } from './DetailsColumn.base';\nimport { getStyles } from './DetailsColumn.styles';\nexport var DetailsColumn = styled(DetailsColumnBase, getStyles, undefined, {\n  scope: 'DetailsColumn'\n});","import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.function.bind\";\nimport { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { initializeComponentRef, EventGroup, css, getRTL, getId, KeyCodes, classNamesFunction } from '../../Utilities';\nimport { ColumnDragEndLocation, CheckboxVisibility } from './DetailsList.types';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Icon, FontIcon } from '../../Icon';\nimport { Layer } from '../../Layer';\nimport { GroupSpacer } from '../GroupedList/GroupSpacer';\nimport { CollapseAllVisibility } from '../../GroupedList';\nimport { DetailsRowCheck } from './DetailsRowCheck';\nimport { SelectionMode, SELECTION_CHANGE } from '../../utilities/selection/interfaces';\nimport { DragDropHelper } from '../../utilities/dragdrop/index';\nimport { DetailsColumn } from '../../components/DetailsList/DetailsColumn';\nimport { SelectAllVisibility } from './DetailsHeader.types';\nvar getClassNames = classNamesFunction();\nvar MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nvar MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\n\nvar NO_COLUMNS = [];\n\nvar DetailsHeaderBase =\n/** @class */\nfunction (_super) {\n  __extends(DetailsHeaderBase, _super);\n\n  function DetailsHeaderBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._rootComponent = React.createRef();\n    _this._draggedColumnIndex = -1;\n    _this._dropHintDetails = {};\n\n    _this._updateDroppingState = function (newValue, event) {\n      if (_this._draggedColumnIndex >= 0 && event.type !== 'drop' && !newValue) {\n        _this._resetDropHints();\n      }\n    };\n\n    _this._onDragOver = function (item, event) {\n      if (_this._draggedColumnIndex >= 0) {\n        event.stopPropagation();\n\n        _this._computeDropHintToBeShown(event.clientX);\n      }\n    };\n\n    _this._onDrop = function (item, event) {\n      // Safe to assume this is defined since we're handling a drop event\n      var columnReorderProps = _this._getColumnReorderProps(); // Target index will not get changed if draggeditem is after target item.\n\n\n      if (_this._draggedColumnIndex >= 0 && event) {\n        var targetIndex = _this._draggedColumnIndex > _this._currentDropHintIndex ? _this._currentDropHintIndex : _this._currentDropHintIndex - 1;\n\n        var isValidDrop = _this._isValidCurrentDropHintIndex();\n\n        event.stopPropagation();\n\n        if (isValidDrop) {\n          _this._onDropIndexInfo.sourceIndex = _this._draggedColumnIndex;\n          _this._onDropIndexInfo.targetIndex = targetIndex;\n\n          if (columnReorderProps.onColumnDrop) {\n            var dragDropDetails = {\n              draggedIndex: _this._draggedColumnIndex,\n              targetIndex: targetIndex\n            };\n            columnReorderProps.onColumnDrop(dragDropDetails);\n            /* eslint-disable deprecation/deprecation */\n          } else if (columnReorderProps.handleColumnReorder) {\n            columnReorderProps.handleColumnReorder(_this._draggedColumnIndex, targetIndex);\n            /* eslint-enable deprecation/deprecation */\n          }\n        }\n      }\n\n      _this._resetDropHints();\n\n      _this._dropHintDetails = {};\n      _this._draggedColumnIndex = -1;\n    };\n\n    _this._updateDragInfo = function (props, event) {\n      // Safe to assume this is defined since we're handling a drag event\n      var columnReorderProps = _this._getColumnReorderProps();\n\n      var itemIndex = props.itemIndex;\n\n      if (itemIndex >= 0) {\n        // Column index is set based on the checkbox\n        _this._draggedColumnIndex = _this._isCheckboxColumnHidden() ? itemIndex - 1 : itemIndex - 2;\n\n        _this._getDropHintPositions();\n\n        if (columnReorderProps.onColumnDragStart) {\n          columnReorderProps.onColumnDragStart(true);\n        }\n      } else if (event && _this._draggedColumnIndex >= 0) {\n        _this._resetDropHints();\n\n        _this._draggedColumnIndex = -1;\n        _this._dropHintDetails = {};\n\n        if (columnReorderProps.onColumnDragEnd) {\n          var columnDragEndLocation = _this._isEventOnHeader(event);\n\n          columnReorderProps.onColumnDragEnd({\n            dropLocation: columnDragEndLocation\n          }, event);\n        }\n      }\n    };\n\n    _this._getDropHintPositions = function () {\n      var _a = _this.props.columns,\n          columns = _a === void 0 ? NO_COLUMNS : _a; // Safe to assume this is defined since we're handling a drag/drop event\n\n      var columnReorderProps = _this._getColumnReorderProps();\n\n      var prevX = 0;\n      var prevMid = 0;\n      var prevRef;\n      var frozenColumnCountFromStart = columnReorderProps.frozenColumnCountFromStart || 0;\n      var frozenColumnCountFromEnd = columnReorderProps.frozenColumnCountFromEnd || 0;\n\n      for (var i = frozenColumnCountFromStart; i < columns.length - frozenColumnCountFromEnd + 1; i++) {\n        if (_this._rootElement) {\n          var dropHintElement = _this._rootElement.querySelectorAll('#columnDropHint_' + i)[0];\n\n          if (dropHintElement) {\n            if (i === frozenColumnCountFromStart) {\n              prevX = dropHintElement.offsetLeft;\n              prevMid = dropHintElement.offsetLeft;\n              prevRef = dropHintElement;\n            } else {\n              var newMid = (dropHintElement.offsetLeft + prevX) / 2;\n              _this._dropHintDetails[i - 1] = {\n                originX: prevX,\n                startX: prevMid,\n                endX: newMid,\n                dropHintElementRef: prevRef\n              };\n              prevMid = newMid;\n              prevRef = dropHintElement;\n              prevX = dropHintElement.offsetLeft;\n\n              if (i === columns.length - frozenColumnCountFromEnd) {\n                _this._dropHintDetails[i] = {\n                  originX: prevX,\n                  startX: prevMid,\n                  endX: dropHintElement.offsetLeft,\n                  dropHintElementRef: prevRef\n                };\n              }\n            }\n          }\n        }\n      }\n    };\n    /**\n     * Based on the given cursor position, finds the nearest drop hint and updates the state to make it visible\n     */\n\n\n    _this._computeDropHintToBeShown = function (clientX) {\n      var isRtl = getRTL(_this.props.theme);\n\n      if (_this._rootElement) {\n        var clientRect = _this._rootElement.getBoundingClientRect();\n\n        var headerOriginX = clientRect.left;\n        var eventXRelativePosition = clientX - headerOriginX;\n        var currentDropHintIndex = _this._currentDropHintIndex;\n\n        if (_this._isValidCurrentDropHintIndex()) {\n          if (_liesBetween(isRtl, eventXRelativePosition, _this._dropHintDetails[currentDropHintIndex].startX, _this._dropHintDetails[currentDropHintIndex].endX)) {\n            return;\n          }\n        }\n\n        var _a = _this.props.columns,\n            columns = _a === void 0 ? NO_COLUMNS : _a; // Safe to assume this is defined since we're handling a drag/drop event\n\n        var columnReorderProps = _this._getColumnReorderProps();\n\n        var frozenColumnCountFromStart = columnReorderProps.frozenColumnCountFromStart || 0;\n        var frozenColumnCountFromEnd = columnReorderProps.frozenColumnCountFromEnd || 0;\n        var currentIndex = frozenColumnCountFromStart;\n        var lastValidColumn = columns.length - frozenColumnCountFromEnd;\n        var indexToUpdate = -1;\n\n        if (_isBefore(isRtl, eventXRelativePosition, _this._dropHintDetails[currentIndex].endX)) {\n          indexToUpdate = currentIndex;\n        } else if (_isAfter(isRtl, eventXRelativePosition, _this._dropHintDetails[lastValidColumn].startX)) {\n          indexToUpdate = lastValidColumn;\n        } else if (_this._isValidCurrentDropHintIndex()) {\n          if (_this._dropHintDetails[currentDropHintIndex + 1] && _liesBetween(isRtl, eventXRelativePosition, _this._dropHintDetails[currentDropHintIndex + 1].startX, _this._dropHintDetails[currentDropHintIndex + 1].endX)) {\n            indexToUpdate = currentDropHintIndex + 1;\n          } else if (_this._dropHintDetails[currentDropHintIndex - 1] && _liesBetween(isRtl, eventXRelativePosition, _this._dropHintDetails[currentDropHintIndex - 1].startX, _this._dropHintDetails[currentDropHintIndex - 1].endX)) {\n            indexToUpdate = currentDropHintIndex - 1;\n          }\n        }\n\n        if (indexToUpdate === -1) {\n          var startIndex = frozenColumnCountFromStart;\n          var endIndex = lastValidColumn;\n\n          while (startIndex < endIndex) {\n            var middleIndex = Math.ceil((endIndex + startIndex) / 2);\n\n            if (_liesBetween(isRtl, eventXRelativePosition, _this._dropHintDetails[middleIndex].startX, _this._dropHintDetails[middleIndex].endX)) {\n              indexToUpdate = middleIndex;\n              break;\n            } else if (_isBefore(isRtl, eventXRelativePosition, _this._dropHintDetails[middleIndex].originX)) {\n              endIndex = middleIndex;\n            } else if (_isAfter(isRtl, eventXRelativePosition, _this._dropHintDetails[middleIndex].originX)) {\n              startIndex = middleIndex;\n            }\n          }\n        }\n\n        if (indexToUpdate === _this._draggedColumnIndex || indexToUpdate === _this._draggedColumnIndex + 1) {\n          if (_this._isValidCurrentDropHintIndex()) {\n            _this._resetDropHints();\n          }\n        } else if (currentDropHintIndex !== indexToUpdate && indexToUpdate >= 0) {\n          _this._resetDropHints();\n\n          _this._updateDropHintElement(_this._dropHintDetails[indexToUpdate].dropHintElementRef, 'inline-block');\n\n          _this._currentDropHintIndex = indexToUpdate;\n        }\n      }\n    };\n\n    _this._renderColumnSizer = function (_a) {\n      var _b;\n\n      var columnIndex = _a.columnIndex;\n      var _c = _this.props.columns,\n          columns = _c === void 0 ? NO_COLUMNS : _c;\n      var column = columns[columnIndex];\n      var columnResizeDetails = _this.state.columnResizeDetails;\n      var classNames = _this._classNames;\n      return column.isResizable ? React.createElement(\"div\", {\n        key: column.key + \"_sizer\",\n        \"aria-hidden\": true,\n        role: \"button\",\n        \"data-is-focusable\": false,\n        onClick: _stopPropagation,\n        \"data-sizer-index\": columnIndex,\n        onBlur: _this._onSizerBlur,\n        className: css(classNames.cellSizer, columnIndex < columns.length - 1 ? classNames.cellSizerStart : classNames.cellSizerEnd, (_b = {}, _b[classNames.cellIsResizing] = columnResizeDetails && columnResizeDetails.columnIndex === columnIndex, _b)),\n        // eslint-disable-next-line react/jsx-no-bind\n        onDoubleClick: _this._onSizerDoubleClick.bind(_this, columnIndex)\n      }) : null;\n    };\n\n    _this._onRenderColumnHeaderTooltip = function (tooltipHostProps) {\n      return React.createElement(\"span\", {\n        className: tooltipHostProps.hostClassName\n      }, tooltipHostProps.children);\n    };\n    /**\n     * Called when the select all toggle is clicked.\n     */\n\n\n    _this._onSelectAllClicked = function () {\n      var selection = _this.props.selection;\n\n      if (selection) {\n        selection.toggleAllSelected();\n      }\n    };\n\n    _this._onRootMouseDown = function (ev) {\n      var columnIndexAttr = ev.target.getAttribute('data-sizer-index');\n      var columnIndex = Number(columnIndexAttr);\n      var _a = _this.props.columns,\n          columns = _a === void 0 ? NO_COLUMNS : _a;\n\n      if (columnIndexAttr === null || ev.button !== MOUSEDOWN_PRIMARY_BUTTON) {\n        // Ignore anything except the primary button.\n        return;\n      }\n\n      _this.setState({\n        columnResizeDetails: {\n          columnIndex: columnIndex,\n          columnMinWidth: columns[columnIndex].calculatedWidth,\n          originX: ev.clientX\n        }\n      });\n\n      ev.preventDefault();\n      ev.stopPropagation();\n    };\n\n    _this._onRootMouseMove = function (ev) {\n      var _a = _this.state,\n          columnResizeDetails = _a.columnResizeDetails,\n          isSizing = _a.isSizing;\n\n      if (columnResizeDetails && !isSizing && ev.clientX !== columnResizeDetails.originX) {\n        _this.setState({\n          isSizing: true\n        });\n      }\n    };\n\n    _this._onRootRef = function (focusZone) {\n      if (focusZone) {\n        // Need to resolve the actual DOM node, not the component.\n        // The element itself will be used for drag/drop and focusing.\n        _this._rootElement = findDOMNode(focusZone);\n      } else {\n        _this._rootElement = undefined;\n      }\n    };\n\n    _this._onRootKeyDown = function (ev) {\n      var _a = _this.state,\n          columnResizeDetails = _a.columnResizeDetails,\n          isSizing = _a.isSizing;\n      var _b = _this.props,\n          _c = _b.columns,\n          columns = _c === void 0 ? NO_COLUMNS : _c,\n          onColumnResized = _b.onColumnResized;\n      var columnIndexAttr = ev.target.getAttribute('data-sizer-index');\n\n      if (!columnIndexAttr || isSizing) {\n        return;\n      }\n\n      var columnIndex = Number(columnIndexAttr);\n\n      if (!columnResizeDetails) {\n        // eslint-disable-next-line deprecation/deprecation\n        if (ev.which === KeyCodes.enter) {\n          _this.setState({\n            columnResizeDetails: {\n              columnIndex: columnIndex,\n              columnMinWidth: columns[columnIndex].calculatedWidth\n            }\n          });\n\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      } else {\n        var increment = void 0; // eslint-disable-next-line deprecation/deprecation\n\n        if (ev.which === KeyCodes.enter) {\n          _this.setState({\n            columnResizeDetails: undefined\n          });\n\n          ev.preventDefault();\n          ev.stopPropagation(); // eslint-disable-next-line deprecation/deprecation\n        } else if (ev.which === KeyCodes.left) {\n          increment = getRTL(_this.props.theme) ? 1 : -1; // eslint-disable-next-line deprecation/deprecation\n        } else if (ev.which === KeyCodes.right) {\n          increment = getRTL(_this.props.theme) ? -1 : 1;\n        }\n\n        if (increment) {\n          if (!ev.shiftKey) {\n            increment *= 10;\n          }\n\n          _this.setState({\n            columnResizeDetails: __assign(__assign({}, columnResizeDetails), {\n              columnMinWidth: columnResizeDetails.columnMinWidth + increment\n            })\n          });\n\n          if (onColumnResized) {\n            onColumnResized(columns[columnIndex], columnResizeDetails.columnMinWidth + increment, columnIndex);\n          }\n\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      }\n    };\n    /**\n     * mouse move event handler in the header\n     * it will set isSizing state to true when user clicked on the sizer and move the mouse.\n     *\n     * @param ev - mouse move event\n     */\n\n\n    _this._onSizerMouseMove = function (ev) {\n      var // use buttons property here since ev.button in some edge case is not upding well during the move.\n      // but firefox doesn't support it, so we set the default value when it is not defined.\n      buttons = ev.buttons;\n      var _a = _this.props,\n          onColumnIsSizingChanged = _a.onColumnIsSizingChanged,\n          onColumnResized = _a.onColumnResized,\n          _b = _a.columns,\n          columns = _b === void 0 ? NO_COLUMNS : _b;\n      var columnResizeDetails = _this.state.columnResizeDetails;\n\n      if (buttons !== undefined && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\n        // cancel mouse down event and return early when the primary button is not pressed\n        _this._onSizerMouseUp(ev);\n\n        return;\n      }\n\n      if (ev.clientX !== columnResizeDetails.originX) {\n        if (onColumnIsSizingChanged) {\n          onColumnIsSizingChanged(columns[columnResizeDetails.columnIndex], true);\n        }\n      }\n\n      if (onColumnResized) {\n        var movement = ev.clientX - columnResizeDetails.originX;\n\n        if (getRTL(_this.props.theme)) {\n          movement = -movement;\n        }\n\n        onColumnResized(columns[columnResizeDetails.columnIndex], columnResizeDetails.columnMinWidth + movement, columnResizeDetails.columnIndex);\n      }\n    };\n\n    _this._onSizerBlur = function (ev) {\n      var columnResizeDetails = _this.state.columnResizeDetails;\n\n      if (columnResizeDetails) {\n        _this.setState({\n          columnResizeDetails: undefined,\n          isSizing: false\n        });\n      }\n    };\n    /**\n     * mouse up event handler in the header\n     * clear the resize related state.\n     * This is to ensure we can catch double click event\n     *\n     * @param ev - mouse up event\n     */\n\n\n    _this._onSizerMouseUp = function (ev) {\n      var _a = _this.props,\n          _b = _a.columns,\n          columns = _b === void 0 ? NO_COLUMNS : _b,\n          onColumnIsSizingChanged = _a.onColumnIsSizingChanged;\n      var columnResizeDetails = _this.state.columnResizeDetails;\n\n      _this.setState({\n        columnResizeDetails: undefined,\n        isSizing: false\n      });\n\n      if (onColumnIsSizingChanged) {\n        onColumnIsSizingChanged(columns[columnResizeDetails.columnIndex], false);\n      }\n    };\n\n    _this._onToggleCollapseAll = function () {\n      var onToggleCollapseAll = _this.props.onToggleCollapseAll;\n      var newCollapsed = !_this.state.isAllCollapsed;\n\n      _this.setState({\n        isAllCollapsed: newCollapsed\n      });\n\n      if (onToggleCollapseAll) {\n        onToggleCollapseAll(newCollapsed);\n      }\n    };\n\n    initializeComponentRef(_this);\n    _this._events = new EventGroup(_this);\n    _this.state = {\n      columnResizeDetails: undefined,\n      isAllCollapsed: _this.props.isAllCollapsed,\n      isAllSelected: !!_this.props.selection && _this.props.selection.isAllSelected()\n    };\n    _this._onDropIndexInfo = {\n      sourceIndex: -1,\n      targetIndex: -1\n    };\n    _this._id = getId('header');\n    _this._currentDropHintIndex = -1; // The drag drop handler won't do any work until subscribe() is called,\n    // so always set it up for convenience\n\n    _this._dragDropHelper = new DragDropHelper({\n      selection: {\n        getSelection: function getSelection() {\n          return;\n        }\n      },\n      minimumPixelsForDrag: _this.props.minimumPixelsForDrag\n    });\n    return _this;\n  }\n\n  DetailsHeaderBase.prototype.componentDidMount = function () {\n    var selection = this.props.selection;\n\n    this._events.on(selection, SELECTION_CHANGE, this._onSelectionChanged); // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n\n\n    this._events.on(this._rootElement, 'mousedown', this._onRootMouseDown);\n\n    this._events.on(this._rootElement, 'keydown', this._onRootKeyDown);\n\n    if (this._getColumnReorderProps()) {\n      this._subscriptionObject = this._dragDropHelper.subscribe(this._rootElement, this._events, this._getHeaderDragDropOptions());\n    }\n  };\n\n  DetailsHeaderBase.prototype.componentDidUpdate = function (prevProps) {\n    if (this._getColumnReorderProps()) {\n      if (!this._subscriptionObject) {\n        this._subscriptionObject = this._dragDropHelper.subscribe(this._rootElement, this._events, this._getHeaderDragDropOptions());\n      }\n    } else if (this._subscriptionObject) {\n      this._subscriptionObject.dispose();\n\n      delete this._subscriptionObject;\n    }\n\n    if (this.props !== prevProps && this._onDropIndexInfo.sourceIndex >= 0 && this._onDropIndexInfo.targetIndex >= 0) {\n      var _a = prevProps.columns,\n          previousColumns = _a === void 0 ? NO_COLUMNS : _a;\n      var _b = this.props.columns,\n          columns = _b === void 0 ? NO_COLUMNS : _b;\n\n      if (previousColumns[this._onDropIndexInfo.sourceIndex].key === columns[this._onDropIndexInfo.targetIndex].key) {\n        this._onDropIndexInfo = {\n          sourceIndex: -1,\n          targetIndex: -1\n        };\n      }\n    }\n\n    if (this.props.isAllCollapsed !== prevProps.isAllCollapsed) {\n      this.setState({\n        isAllCollapsed: this.props.isAllCollapsed\n      });\n    }\n  };\n\n  DetailsHeaderBase.prototype.componentWillUnmount = function () {\n    if (this._subscriptionObject) {\n      this._subscriptionObject.dispose();\n\n      delete this._subscriptionObject;\n    }\n\n    this._dragDropHelper.dispose();\n\n    this._events.dispose();\n  };\n\n  DetailsHeaderBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        _b = _a.columns,\n        columns = _b === void 0 ? NO_COLUMNS : _b,\n        ariaLabel = _a.ariaLabel,\n        ariaLabelForToggleAllGroupsButton = _a.ariaLabelForToggleAllGroupsButton,\n        ariaLabelForSelectAllCheckbox = _a.ariaLabelForSelectAllCheckbox,\n        selectAllVisibility = _a.selectAllVisibility,\n        ariaLabelForSelectionColumn = _a.ariaLabelForSelectionColumn,\n        indentWidth = _a.indentWidth,\n        onColumnClick = _a.onColumnClick,\n        onColumnContextMenu = _a.onColumnContextMenu,\n        _c = _a.onRenderColumnHeaderTooltip,\n        onRenderColumnHeaderTooltip = _c === void 0 ? this._onRenderColumnHeaderTooltip : _c,\n        styles = _a.styles,\n        selectionMode = _a.selectionMode,\n        theme = _a.theme,\n        onRenderDetailsCheckbox = _a.onRenderDetailsCheckbox,\n        groupNestingDepth = _a.groupNestingDepth,\n        useFastIcons = _a.useFastIcons,\n        checkboxVisibility = _a.checkboxVisibility,\n        className = _a.className;\n    var _d = this.state,\n        isAllSelected = _d.isAllSelected,\n        columnResizeDetails = _d.columnResizeDetails,\n        isSizing = _d.isSizing,\n        isAllCollapsed = _d.isAllCollapsed;\n    var showCheckbox = selectAllVisibility !== SelectAllVisibility.none;\n    var isCheckboxHidden = selectAllVisibility === SelectAllVisibility.hidden;\n    var isCheckboxAlwaysVisible = checkboxVisibility === CheckboxVisibility.always;\n\n    var columnReorderProps = this._getColumnReorderProps();\n\n    var frozenColumnCountFromStart = columnReorderProps && columnReorderProps.frozenColumnCountFromStart ? columnReorderProps.frozenColumnCountFromStart : 0;\n    var frozenColumnCountFromEnd = columnReorderProps && columnReorderProps.frozenColumnCountFromEnd ? columnReorderProps.frozenColumnCountFromEnd : 0;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      isAllSelected: isAllSelected,\n      isSelectAllHidden: selectAllVisibility === SelectAllVisibility.hidden,\n      isResizingColumn: !!columnResizeDetails && isSizing,\n      isSizing: isSizing,\n      isAllCollapsed: isAllCollapsed,\n      isCheckboxHidden: isCheckboxHidden,\n      className: className\n    });\n    var classNames = this._classNames;\n    var IconComponent = useFastIcons ? FontIcon : Icon;\n    var isRTL = getRTL(theme);\n    return React.createElement(FocusZone, {\n      role: \"row\",\n      \"aria-label\": ariaLabel,\n      className: classNames.root,\n      componentRef: this._rootComponent,\n      ref: this._onRootRef,\n      onMouseMove: this._onRootMouseMove,\n      \"data-automationid\": \"DetailsHeader\",\n      direction: FocusZoneDirection.horizontal\n    }, showCheckbox ? [React.createElement(\"div\", {\n      key: \"__checkbox\",\n      className: classNames.cellIsCheck,\n      \"aria-labelledby\": this._id + \"-check\",\n      onClick: !isCheckboxHidden ? this._onSelectAllClicked : undefined,\n      \"aria-colindex\": 1,\n      role: 'columnheader'\n    }, onRenderColumnHeaderTooltip({\n      hostClassName: classNames.checkTooltip,\n      id: this._id + \"-checkTooltip\",\n      setAriaDescribedBy: false,\n      content: ariaLabelForSelectAllCheckbox,\n      children: React.createElement(DetailsRowCheck, {\n        id: this._id + \"-check\",\n        \"aria-label\": selectionMode === SelectionMode.multiple ? ariaLabelForSelectAllCheckbox : ariaLabelForSelectionColumn,\n        \"aria-describedby\": !isCheckboxHidden ? ariaLabelForSelectAllCheckbox && !this.props.onRenderColumnHeaderTooltip ? this._id + \"-checkTooltip\" : undefined : ariaLabelForSelectionColumn && !this.props.onRenderColumnHeaderTooltip ? this._id + \"-checkTooltip\" : undefined,\n        \"data-is-focusable\": !isCheckboxHidden || undefined,\n        isHeader: true,\n        selected: isAllSelected,\n        anySelected: false,\n        canSelect: !isCheckboxHidden,\n        className: classNames.check,\n        onRenderDetailsCheckbox: onRenderDetailsCheckbox,\n        useFastIcons: useFastIcons,\n        isVisible: isCheckboxAlwaysVisible\n      })\n    }, this._onRenderColumnHeaderTooltip)), !this.props.onRenderColumnHeaderTooltip ? ariaLabelForSelectAllCheckbox && !isCheckboxHidden ? React.createElement(\"label\", {\n      key: \"__checkboxLabel\",\n      id: this._id + \"-checkTooltip\",\n      className: classNames.accessibleLabel,\n      \"aria-hidden\": true\n    }, ariaLabelForSelectAllCheckbox) : ariaLabelForSelectionColumn && isCheckboxHidden ? React.createElement(\"label\", {\n      key: \"__checkboxLabel\",\n      id: this._id + \"-checkTooltip\",\n      className: classNames.accessibleLabel,\n      \"aria-hidden\": true\n    }, ariaLabelForSelectionColumn) : null : null] : null, groupNestingDepth > 0 && this.props.collapseAllVisibility === CollapseAllVisibility.visible ? React.createElement(\"div\", {\n      className: classNames.cellIsGroupExpander,\n      onClick: this._onToggleCollapseAll,\n      \"data-is-focusable\": true,\n      \"aria-label\": ariaLabelForToggleAllGroupsButton,\n      \"aria-expanded\": !isAllCollapsed,\n      role: ariaLabelForToggleAllGroupsButton ? 'button' : undefined\n    }, React.createElement(IconComponent, {\n      className: classNames.collapseButton,\n      iconName: isRTL ? 'ChevronLeftMed' : 'ChevronRightMed'\n    })) : null, React.createElement(GroupSpacer, {\n      indentWidth: indentWidth,\n      count: groupNestingDepth - 1\n    }), columns.map(function (column, columnIndex) {\n      var _isDraggable = columnReorderProps ? columnIndex >= frozenColumnCountFromStart && columnIndex < columns.length - frozenColumnCountFromEnd : false;\n\n      return [columnReorderProps && (_isDraggable || columnIndex === columns.length - frozenColumnCountFromEnd) && _this._renderDropHint(columnIndex), React.createElement(DetailsColumn, {\n        column: column,\n        styles: column.styles,\n        key: column.key,\n        columnIndex: (showCheckbox ? 2 : 1) + columnIndex,\n        parentId: _this._id,\n        isDraggable: _isDraggable,\n        updateDragInfo: _this._updateDragInfo,\n        dragDropHelper: _this._dragDropHelper,\n        onColumnClick: onColumnClick,\n        onColumnContextMenu: onColumnContextMenu,\n        // Do not render tooltips by default, but allow for override via props.\n        onRenderColumnHeaderTooltip: _this.props.onRenderColumnHeaderTooltip,\n        isDropped: _this._onDropIndexInfo.targetIndex === columnIndex,\n        cellStyleProps: _this.props.cellStyleProps,\n        useFastIcons: useFastIcons\n      }), _this._renderColumnDivider(columnIndex)];\n    }), columnReorderProps && frozenColumnCountFromEnd === 0 && this._renderDropHint(columns.length), isSizing && React.createElement(Layer, null, React.createElement(\"div\", {\n      className: classNames.sizingOverlay,\n      onMouseMove: this._onSizerMouseMove,\n      onMouseUp: this._onSizerMouseUp\n    })));\n  };\n  /** Set focus to the active thing in the focus area. */\n\n\n  DetailsHeaderBase.prototype.focus = function () {\n    return Boolean(this._rootComponent.current && this._rootComponent.current.focus());\n  };\n  /**\n   * Gets column reorder props from this.props. If the calling code is part of setting up or\n   * handling drag/drop events, it's safe to assume that this method's return value is defined\n   * (because drag/drop handling will only be set up if reorder props are given).\n   */\n\n\n  DetailsHeaderBase.prototype._getColumnReorderProps = function () {\n    var _a = this.props,\n        columnReorderOptions = _a.columnReorderOptions,\n        columnReorderProps = _a.columnReorderProps;\n    return columnReorderProps || columnReorderOptions && __assign(__assign({}, columnReorderOptions), {\n      onColumnDragEnd: undefined\n    });\n  };\n\n  DetailsHeaderBase.prototype._getHeaderDragDropOptions = function () {\n    var options = {\n      selectionIndex: 1,\n      context: {\n        data: this,\n        index: 0\n      },\n      canDrag: function canDrag() {\n        return false;\n      },\n      canDrop: function canDrop() {\n        return true;\n      },\n      onDragStart: function onDragStart() {\n        return undefined;\n      },\n      updateDropState: this._updateDroppingState,\n      onDrop: this._onDrop,\n      onDragEnd: function onDragEnd() {\n        return undefined;\n      },\n      onDragOver: this._onDragOver\n    };\n    return options;\n  };\n\n  DetailsHeaderBase.prototype._isValidCurrentDropHintIndex = function () {\n    return this._currentDropHintIndex >= 0;\n  };\n  /**\n   * @returns whether or not the \"Select All\" checkbox column is hidden.\n   */\n\n\n  DetailsHeaderBase.prototype._isCheckboxColumnHidden = function () {\n    var _a = this.props,\n        selectionMode = _a.selectionMode,\n        checkboxVisibility = _a.checkboxVisibility;\n    return selectionMode === SelectionMode.none || checkboxVisibility === CheckboxVisibility.hidden;\n  };\n\n  DetailsHeaderBase.prototype._resetDropHints = function () {\n    if (this._currentDropHintIndex >= 0) {\n      this._updateDropHintElement(this._dropHintDetails[this._currentDropHintIndex].dropHintElementRef, 'none');\n\n      this._currentDropHintIndex = -1;\n    }\n  };\n\n  DetailsHeaderBase.prototype._updateDropHintElement = function (element, displayProperty) {\n    element.childNodes[1].style.display = displayProperty;\n    element.childNodes[0].style.display = displayProperty;\n  };\n\n  DetailsHeaderBase.prototype._isEventOnHeader = function (event) {\n    if (this._rootElement) {\n      var clientRect = this._rootElement.getBoundingClientRect();\n\n      if (event.clientX > clientRect.left && event.clientX < clientRect.right && event.clientY > clientRect.top && event.clientY < clientRect.bottom) {\n        return ColumnDragEndLocation.header;\n      }\n    }\n  };\n\n  DetailsHeaderBase.prototype._renderColumnDivider = function (columnIndex) {\n    var _a = this.props.columns,\n        columns = _a === void 0 ? NO_COLUMNS : _a;\n    var column = columns[columnIndex];\n    var onRenderDivider = column.onRenderDivider;\n    return onRenderDivider ? onRenderDivider({\n      column: column,\n      columnIndex: columnIndex\n    }, this._renderColumnSizer) : this._renderColumnSizer({\n      column: column,\n      columnIndex: columnIndex\n    });\n  };\n\n  DetailsHeaderBase.prototype._renderDropHint = function (dropHintIndex) {\n    var classNames = this._classNames;\n    var IconComponent = this.props.useFastIcons ? FontIcon : Icon;\n    return React.createElement(\"div\", {\n      key: 'dropHintKey',\n      className: classNames.dropHintStyle,\n      id: \"columnDropHint_\" + dropHintIndex\n    }, React.createElement(IconComponent, {\n      key: \"dropHintCircleKey\",\n      \"aria-hidden\": true,\n      \"data-is-focusable\": false,\n      \"data-sizer-index\": dropHintIndex,\n      className: classNames.dropHintCaretStyle,\n      iconName: 'CircleShapeSolid'\n    }), React.createElement(\"div\", {\n      key: \"dropHintLineKey\",\n      \"aria-hidden\": true,\n      \"data-is-focusable\": false,\n      \"data-sizer-index\": dropHintIndex,\n      className: classNames.dropHintLineStyle\n    }));\n  };\n  /**\n   * double click on the column sizer will auto ajust column width\n   * to fit the longest content among current rendered rows.\n   *\n   * @param columnIndex - index of the column user double clicked\n   * @param ev - mouse double click event\n   */\n\n\n  DetailsHeaderBase.prototype._onSizerDoubleClick = function (columnIndex, ev) {\n    var _a = this.props,\n        onColumnAutoResized = _a.onColumnAutoResized,\n        _b = _a.columns,\n        columns = _b === void 0 ? NO_COLUMNS : _b;\n\n    if (onColumnAutoResized) {\n      onColumnAutoResized(columns[columnIndex], columnIndex);\n    }\n  };\n\n  DetailsHeaderBase.prototype._onSelectionChanged = function () {\n    var isAllSelected = !!this.props.selection && this.props.selection.isAllSelected();\n\n    if (this.state.isAllSelected !== isAllSelected) {\n      this.setState({\n        isAllSelected: isAllSelected\n      });\n    }\n  };\n\n  DetailsHeaderBase.defaultProps = {\n    selectAllVisibility: SelectAllVisibility.visible,\n    collapseAllVisibility: CollapseAllVisibility.visible,\n    useFastIcons: true\n  };\n  return DetailsHeaderBase;\n}(React.Component);\n\nexport { DetailsHeaderBase };\n\nfunction _liesBetween(rtl, target, left, right) {\n  return rtl ? target <= left && target >= right : target >= left && target <= right;\n}\n\nfunction _isBefore(rtl, a, b) {\n  return rtl ? a >= b : a <= b;\n}\n\nfunction _isAfter(rtl, a, b) {\n  return rtl ? a <= b : a >= b;\n}\n\nfunction _stopPropagation(ev) {\n  ev.stopPropagation();\n}","import { styled } from '../../Utilities';\nimport { DetailsHeaderBase } from './DetailsHeader.base';\nimport { getStyles } from './DetailsHeader.styles';\nexport var DetailsHeader = styled(DetailsHeaderBase, getStyles, undefined, {\n  scope: 'DetailsHeader'\n});","import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport * as React from 'react';\nimport { css } from '../../Utilities';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\n\nvar getCellText = function getCellText(item, column) {\n  var value = item && column && column.fieldName ? item[column.fieldName] : '';\n\n  if (value === null || value === undefined) {\n    value = '';\n  }\n\n  if (typeof value === 'boolean') {\n    return value.toString();\n  }\n\n  return value;\n};\n/**\n * Component for rendering a row's cells in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\n\n\nexport var DetailsRowFields = function DetailsRowFields(props) {\n  var columns = props.columns,\n      columnStartIndex = props.columnStartIndex,\n      rowClassNames = props.rowClassNames,\n      _a = props.cellStyleProps,\n      cellStyleProps = _a === void 0 ? DEFAULT_CELL_STYLE_PROPS : _a,\n      item = props.item,\n      itemIndex = props.itemIndex,\n      onRenderItemColumn = props.onRenderItemColumn,\n      getCellValueKey = props.getCellValueKey,\n      cellsByColumn = props.cellsByColumn,\n      enableUpdateAnimations = props.enableUpdateAnimations;\n  var cellValueKeysRef = React.useRef();\n  var cellValueKeys = cellValueKeysRef.current || (cellValueKeysRef.current = {});\n  return React.createElement(\"div\", {\n    className: rowClassNames.fields,\n    \"data-automationid\": \"DetailsRowFields\",\n    role: \"presentation\"\n  }, columns.map(function (column, columnIndex) {\n    var width = typeof column.calculatedWidth === 'undefined' ? 'auto' : column.calculatedWidth + cellStyleProps.cellLeftPadding + cellStyleProps.cellRightPadding + (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0);\n    var _a = column.onRender,\n        onRender = _a === void 0 ? onRenderItemColumn : _a,\n        _b = column.getValueKey,\n        getValueKey = _b === void 0 ? getCellValueKey : _b;\n    var cellContentsRender = cellsByColumn && column.key in cellsByColumn ? cellsByColumn[column.key] : onRender ? onRender(item, itemIndex, column) : getCellText(item, column);\n    var previousValueKey = cellValueKeys[column.key];\n    var cellValueKey = enableUpdateAnimations && getValueKey ? getValueKey(item, itemIndex, column) : undefined;\n    var showAnimation = false;\n\n    if (cellValueKey !== undefined && previousValueKey !== undefined && cellValueKey !== previousValueKey) {\n      showAnimation = true;\n    }\n\n    cellValueKeys[column.key] = cellValueKey; // generate a key that auto-dirties when content changes, to force the container to re-render,\n    // to trigger animation\n\n    var key = \"\" + column.key + (cellValueKey !== undefined ? \"-\" + cellValueKey : '');\n    return React.createElement(\"div\", {\n      key: key,\n      role: column.isRowHeader ? 'rowheader' : 'gridcell',\n      \"aria-readonly\": true,\n      \"aria-colindex\": columnIndex + columnStartIndex + 1,\n      className: css(column.className, column.isMultiline && rowClassNames.isMultiline, column.isRowHeader && rowClassNames.isRowHeader, rowClassNames.cell, column.isPadded ? rowClassNames.cellPadded : rowClassNames.cellUnpadded, showAnimation && rowClassNames.cellAnimation),\n      style: {\n        width: width\n      },\n      \"data-automationid\": \"DetailsRowCell\",\n      \"data-automation-key\": column.key\n    }, cellContentsRender);\n  }));\n};","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { initializeComponentRef, EventGroup, css, shallowCompare, getNativeProps, divProperties } from '../../Utilities';\nimport { CheckboxVisibility } from './DetailsList.types';\nimport { DetailsRowCheck } from './DetailsRowCheck';\nimport { GroupSpacer } from '../GroupedList/GroupSpacer';\nimport { DetailsRowFields } from './DetailsRowFields';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { SelectionMode, SELECTION_CHANGE } from '../../utilities/selection/interfaces';\nimport { CollapseAllVisibility } from '../../GroupedList';\nimport { classNamesFunction } from '../../Utilities';\nvar getClassNames = classNamesFunction();\nvar DEFAULT_DROPPING_CSS_CLASS = 'is-dropping';\nvar NO_COLUMNS = [];\n\nvar DetailsRowBase =\n/** @class */\nfunction (_super) {\n  __extends(DetailsRowBase, _super);\n\n  function DetailsRowBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._cellMeasurer = React.createRef();\n    _this._focusZone = React.createRef();\n\n    _this._onSelectionChanged = function () {\n      var selectionState = _this._getSelectionState(_this.props);\n\n      if (!shallowCompare(selectionState, _this.state.selectionState)) {\n        _this.setState({\n          selectionState: selectionState\n        });\n      }\n    };\n\n    _this._onRootRef = function (focusZone) {\n      if (focusZone) {\n        // Need to resolve the actual DOM node, not the component.\n        // The element itself will be used for drag/drop and focusing.\n        _this._root = ReactDOM.findDOMNode(focusZone);\n      } else {\n        _this._root = undefined;\n      }\n    };\n    /**\n     * update isDropping state based on the input value, which is used to change style during drag and drop\n     *\n     * when change to true, that means drag enter. we will add default dropping class name\n     * or the custom dropping class name (return result from onDragEnter) to the root elemet.\n     *\n     * when change to false, that means drag leave. we will remove the dropping class name from root element.\n     *\n     * @param newValue - New isDropping state value\n     * @param event - The event trigger dropping state change which can be dragenter, dragleave etc\n     */\n\n\n    _this._updateDroppingState = function (newValue, event) {\n      var isDropping = _this.state.isDropping;\n      var _a = _this.props,\n          dragDropEvents = _a.dragDropEvents,\n          item = _a.item;\n\n      if (!newValue) {\n        if (dragDropEvents.onDragLeave) {\n          dragDropEvents.onDragLeave(item, event);\n        }\n      } else if (dragDropEvents.onDragEnter) {\n        _this._droppingClassNames = dragDropEvents.onDragEnter(item, event);\n      }\n\n      if (isDropping !== newValue) {\n        _this.setState({\n          isDropping: newValue\n        });\n      }\n    };\n\n    initializeComponentRef(_this);\n    _this._events = new EventGroup(_this);\n    _this.state = {\n      selectionState: _this._getSelectionState(props),\n      columnMeasureInfo: undefined,\n      isDropping: false\n    };\n    _this._droppingClassNames = '';\n    return _this;\n  }\n\n  DetailsRowBase.prototype.componentDidMount = function () {\n    var _a = this.props,\n        dragDropHelper = _a.dragDropHelper,\n        selection = _a.selection,\n        item = _a.item,\n        onDidMount = _a.onDidMount;\n\n    if (dragDropHelper) {\n      this._dragDropSubscription = dragDropHelper.subscribe(this._root, this._events, this._getRowDragDropOptions());\n    }\n\n    if (selection) {\n      this._events.on(selection, SELECTION_CHANGE, this._onSelectionChanged);\n    }\n\n    if (onDidMount && item) {\n      // If the item appears later, we should wait for it before calling this method.\n      this._onDidMountCalled = true;\n      onDidMount(this);\n    }\n  };\n\n  DetailsRowBase.prototype.componentDidUpdate = function (previousProps) {\n    var state = this.state;\n    var _a = this.props,\n        item = _a.item,\n        onDidMount = _a.onDidMount;\n    var columnMeasureInfo = state.columnMeasureInfo;\n\n    if (this.props.itemIndex !== previousProps.itemIndex || this.props.item !== previousProps.item || this.props.dragDropHelper !== previousProps.dragDropHelper) {\n      if (this._dragDropSubscription) {\n        this._dragDropSubscription.dispose();\n\n        delete this._dragDropSubscription;\n      }\n\n      if (this.props.dragDropHelper) {\n        this._dragDropSubscription = this.props.dragDropHelper.subscribe(this._root, this._events, this._getRowDragDropOptions());\n      }\n    }\n\n    if (columnMeasureInfo && columnMeasureInfo.index >= 0 && this._cellMeasurer.current) {\n      var newWidth = this._cellMeasurer.current.getBoundingClientRect().width;\n\n      columnMeasureInfo.onMeasureDone(newWidth);\n      this.setState({\n        columnMeasureInfo: undefined\n      });\n    }\n\n    if (item && onDidMount && !this._onDidMountCalled) {\n      this._onDidMountCalled = true;\n      onDidMount(this);\n    }\n  };\n\n  DetailsRowBase.prototype.componentWillUnmount = function () {\n    var _a = this.props,\n        item = _a.item,\n        onWillUnmount = _a.onWillUnmount; // Only call the onWillUnmount callback if we have an item.\n\n    if (onWillUnmount && item) {\n      onWillUnmount(this);\n    }\n\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n\n      delete this._dragDropSubscription;\n    }\n\n    this._events.dispose();\n  };\n\n  DetailsRowBase.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    this.setState({\n      selectionState: this._getSelectionState(newProps)\n    });\n  };\n\n  DetailsRowBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    if (this.props.useReducedRowRenderer) {\n      var newSelectionState = this._getSelectionState(nextProps);\n\n      if (this.state.selectionState.isSelected !== newSelectionState.isSelected) {\n        return true;\n      }\n\n      return !shallowCompare(this.props, nextProps);\n    } else {\n      return true;\n    }\n  };\n\n  DetailsRowBase.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        _b = _a.columns,\n        columns = _b === void 0 ? NO_COLUMNS : _b,\n        dragDropEvents = _a.dragDropEvents,\n        item = _a.item,\n        itemIndex = _a.itemIndex,\n        _c = _a.onRenderCheck,\n        onRenderCheck = _c === void 0 ? this._onRenderCheck : _c,\n        onRenderDetailsCheckbox = _a.onRenderDetailsCheckbox,\n        onRenderItemColumn = _a.onRenderItemColumn,\n        getCellValueKey = _a.getCellValueKey,\n        selectionMode = _a.selectionMode,\n        _d = _a.rowWidth,\n        rowWidth = _d === void 0 ? 0 : _d,\n        checkboxVisibility = _a.checkboxVisibility,\n        getRowAriaLabel = _a.getRowAriaLabel,\n        getRowAriaDescribedBy = _a.getRowAriaDescribedBy,\n        checkButtonAriaLabel = _a.checkButtonAriaLabel,\n        checkboxCellClassName = _a.checkboxCellClassName,\n\n    /** Alias rowFieldsAs as RowFields and default to DetailsRowFields if rowFieldsAs does not exist */\n    _e = _a.rowFieldsAs,\n\n    /** Alias rowFieldsAs as RowFields and default to DetailsRowFields if rowFieldsAs does not exist */\n    RowFields = _e === void 0 ? DetailsRowFields : _e,\n        selection = _a.selection,\n        indentWidth = _a.indentWidth,\n        enableUpdateAnimations = _a.enableUpdateAnimations,\n        compact = _a.compact,\n        theme = _a.theme,\n        styles = _a.styles,\n        cellsByColumn = _a.cellsByColumn,\n        groupNestingDepth = _a.groupNestingDepth,\n        _f = _a.useFastIcons,\n        useFastIcons = _f === void 0 ? true : _f,\n        cellStyleProps = _a.cellStyleProps;\n    var _g = this.state,\n        columnMeasureInfo = _g.columnMeasureInfo,\n        isDropping = _g.isDropping;\n    var _h = this.state.selectionState,\n        _j = _h.isSelected,\n        isSelected = _j === void 0 ? false : _j,\n        _k = _h.isSelectionModal,\n        isSelectionModal = _k === void 0 ? false : _k;\n    var isDraggable = dragDropEvents ? !!(dragDropEvents.canDrag && dragDropEvents.canDrag(item)) : undefined;\n    var droppingClassName = isDropping ? this._droppingClassNames || DEFAULT_DROPPING_CSS_CLASS : '';\n    var ariaLabel = getRowAriaLabel ? getRowAriaLabel(item) : undefined;\n    var ariaDescribedBy = getRowAriaDescribedBy ? getRowAriaDescribedBy(item) : undefined;\n    var canSelect = !!selection && selection.canSelectItem(item, itemIndex);\n    var isContentUnselectable = selectionMode === SelectionMode.multiple;\n    var showCheckbox = selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden;\n    var ariaSelected = selectionMode === SelectionMode.none ? undefined : isSelected;\n    this._classNames = __assign(__assign({}, this._classNames), getClassNames(styles, {\n      theme: theme,\n      isSelected: isSelected,\n      canSelect: !isContentUnselectable,\n      anySelected: isSelectionModal,\n      checkboxCellClassName: checkboxCellClassName,\n      droppingClassName: droppingClassName,\n      className: className,\n      compact: compact,\n      enableUpdateAnimations: enableUpdateAnimations,\n      cellStyleProps: cellStyleProps\n    }));\n    var rowClassNames = {\n      isMultiline: this._classNames.isMultiline,\n      isRowHeader: this._classNames.isRowHeader,\n      cell: this._classNames.cell,\n      cellAnimation: this._classNames.cellAnimation,\n      cellPadded: this._classNames.cellPadded,\n      cellUnpadded: this._classNames.cellUnpadded,\n      fields: this._classNames.fields\n    }; // Only re-assign rowClassNames when classNames have changed.\n    // Otherwise, they will cause DetailsRowFields to unnecessarily\n    // re-render, see https://github.com/microsoft/fluentui/pull/8799.\n    // Refactor DetailsRowFields to generate own styles to remove need for this.\n\n    if (!shallowCompare(this._rowClassNames || {}, rowClassNames)) {\n      this._rowClassNames = rowClassNames;\n    }\n\n    var rowFields = React.createElement(RowFields, {\n      rowClassNames: this._rowClassNames,\n      cellsByColumn: cellsByColumn,\n      columns: columns,\n      item: item,\n      itemIndex: itemIndex,\n      columnStartIndex: showCheckbox ? 1 : 0,\n      onRenderItemColumn: onRenderItemColumn,\n      getCellValueKey: getCellValueKey,\n      enableUpdateAnimations: enableUpdateAnimations,\n      cellStyleProps: cellStyleProps\n    });\n    return React.createElement(FocusZone, __assign({\n      \"data-is-focusable\": true\n    }, getNativeProps(this.props, divProperties), typeof isDraggable === 'boolean' ? {\n      'data-is-draggable': isDraggable,\n      draggable: isDraggable\n    } : {}, {\n      direction: FocusZoneDirection.horizontal,\n      ref: this._onRootRef,\n      componentRef: this._focusZone,\n      role: \"row\",\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescribedBy,\n      className: this._classNames.root,\n      \"data-selection-index\": itemIndex,\n      \"data-selection-touch-invoke\": true,\n      \"data-item-index\": itemIndex,\n      \"aria-rowindex\": itemIndex + 1,\n      \"data-automationid\": \"DetailsRow\",\n      style: {\n        minWidth: rowWidth\n      },\n      \"aria-selected\": ariaSelected,\n      allowFocusRoot: true\n    }), showCheckbox && React.createElement(\"div\", {\n      role: \"gridcell\",\n      \"aria-colindex\": 1,\n      \"data-selection-toggle\": true,\n      className: this._classNames.checkCell\n    }, onRenderCheck({\n      selected: isSelected,\n      anySelected: isSelectionModal,\n      'aria-label': checkButtonAriaLabel,\n      canSelect: canSelect,\n      compact: compact,\n      className: this._classNames.check,\n      theme: theme,\n      isVisible: checkboxVisibility === CheckboxVisibility.always,\n      onRenderDetailsCheckbox: onRenderDetailsCheckbox,\n      useFastIcons: useFastIcons\n    })), React.createElement(GroupSpacer, {\n      indentWidth: indentWidth,\n      count: groupNestingDepth - (this.props.collapseAllVisibility === CollapseAllVisibility.hidden ? 1 : 0)\n    }), item && rowFields, columnMeasureInfo && React.createElement(\"span\", {\n      role: \"presentation\",\n      className: css(this._classNames.cellMeasurer, this._classNames.cell),\n      ref: this._cellMeasurer\n    }, React.createElement(RowFields, {\n      rowClassNames: this._rowClassNames,\n      columns: [columnMeasureInfo.column],\n      item: item,\n      itemIndex: itemIndex,\n      columnStartIndex: (showCheckbox ? 1 : 0) + columns.length,\n      onRenderItemColumn: onRenderItemColumn,\n      getCellValueKey: getCellValueKey\n    })), React.createElement(\"span\", {\n      role: \"checkbox\",\n      className: this._classNames.checkCover,\n      \"aria-checked\": isSelected,\n      \"data-selection-toggle\": true\n    }));\n  };\n  /**\n   * measure cell at index. and call the call back with the measured cell width when finish measure\n   *\n   * @param index - The cell index\n   * @param onMeasureDone - The call back function when finish measure\n   */\n\n\n  DetailsRowBase.prototype.measureCell = function (index, onMeasureDone) {\n    var _a = this.props.columns,\n        columns = _a === void 0 ? NO_COLUMNS : _a;\n\n    var column = __assign({}, columns[index]);\n\n    column.minWidth = 0;\n    column.maxWidth = 999999;\n    delete column.calculatedWidth;\n    this.setState({\n      columnMeasureInfo: {\n        index: index,\n        column: column,\n        onMeasureDone: onMeasureDone\n      }\n    });\n  };\n\n  DetailsRowBase.prototype.focus = function (forceIntoFirstElement) {\n    if (forceIntoFirstElement === void 0) {\n      forceIntoFirstElement = false;\n    }\n\n    return !!this._focusZone.current && this._focusZone.current.focus(forceIntoFirstElement);\n  };\n\n  DetailsRowBase.prototype._onRenderCheck = function (props) {\n    return React.createElement(DetailsRowCheck, __assign({}, props));\n  };\n\n  DetailsRowBase.prototype._getSelectionState = function (props) {\n    var itemIndex = props.itemIndex,\n        selection = props.selection;\n    return {\n      isSelected: !!selection && selection.isIndexSelected(itemIndex),\n      isSelectionModal: !!selection && !!selection.isModal && selection.isModal()\n    };\n  };\n\n  DetailsRowBase.prototype._getRowDragDropOptions = function () {\n    var _a = this.props,\n        item = _a.item,\n        itemIndex = _a.itemIndex,\n        dragDropEvents = _a.dragDropEvents,\n        eventsToRegister = _a.eventsToRegister;\n    var options = {\n      eventMap: eventsToRegister,\n      selectionIndex: itemIndex,\n      context: {\n        data: item,\n        index: itemIndex\n      },\n      canDrag: dragDropEvents.canDrag,\n      canDrop: dragDropEvents.canDrop,\n      onDragStart: dragDropEvents.onDragStart,\n      updateDropState: this._updateDroppingState,\n      onDrop: dragDropEvents.onDrop,\n      onDragEnd: dragDropEvents.onDragEnd,\n      onDragOver: dragDropEvents.onDragOver\n    };\n    return options;\n  };\n\n  return DetailsRowBase;\n}(React.Component);\n\nexport { DetailsRowBase };","import { styled } from '../../Utilities';\nimport { DetailsRowBase } from './DetailsRow.base';\nimport { getStyles } from './DetailsRow.styles';\nexport var DetailsRow = styled(DetailsRowBase, getStyles, undefined, {\n  scope: 'DetailsRow'\n});","import \"core-js/modules/es6.number.constructor\";\nimport { SELECTION_CHANGE, SelectionMode } from './Selection.types';\nimport { EventGroup } from '../EventGroup';\n/**\n * {@docCategory Selection}\n */\n\nvar Selection =\n/** @class */\nfunction () {\n  /**\n   * Create a new Selection. If `TItem` does not have a `key` property, you must provide an options\n   * object with a `getKey` implementation. Providing options is optional otherwise.\n   * (At most one `options` object is accepted.)\n   */\n  function Selection() {\n    var options = []; // Otherwise, arguments require options with `getKey`.\n\n    for (var _i = 0 // Otherwise, arguments require options with `getKey`.\n    ; _i < arguments.length // Otherwise, arguments require options with `getKey`.\n    ; _i++ // Otherwise, arguments require options with `getKey`.\n    ) {\n      options[_i] = arguments[_i]; // Otherwise, arguments require options with `getKey`.\n    }\n\n    var _a = options[0] || {},\n        onSelectionChanged = _a.onSelectionChanged,\n        getKey = _a.getKey,\n        _b = _a.canSelectItem,\n        canSelectItem = _b === void 0 ? function () {\n      return true;\n    } : _b,\n        items = _a.items,\n        _c = _a.selectionMode,\n        selectionMode = _c === void 0 ? SelectionMode.multiple : _c;\n\n    this.mode = selectionMode;\n    this._getKey = getKey || defaultGetKey;\n    this._changeEventSuppressionCount = 0;\n    this._exemptedCount = 0;\n    this._anchoredIndex = 0;\n    this._unselectableCount = 0;\n    this._onSelectionChanged = onSelectionChanged;\n    this._canSelectItem = canSelectItem;\n    this._isModal = false;\n    this.setItems(items || [], true);\n    this.count = this.getSelectedCount();\n  }\n\n  Selection.prototype.canSelectItem = function (item, index) {\n    if (typeof index === 'number' && index < 0) {\n      return false;\n    }\n\n    return this._canSelectItem(item, index);\n  };\n\n  Selection.prototype.getKey = function (item, index) {\n    var key = this._getKey(item, index);\n\n    return typeof key === 'number' || key ? \"\" + key : '';\n  };\n\n  Selection.prototype.setChangeEvents = function (isEnabled, suppressChange) {\n    this._changeEventSuppressionCount += isEnabled ? -1 : 1;\n\n    if (this._changeEventSuppressionCount === 0 && this._hasChanged) {\n      this._hasChanged = false;\n\n      if (!suppressChange) {\n        this._change();\n      }\n    }\n  };\n\n  Selection.prototype.isModal = function () {\n    return this._isModal;\n  };\n\n  Selection.prototype.setModal = function (isModal) {\n    if (this._isModal !== isModal) {\n      this.setChangeEvents(false);\n      this._isModal = isModal;\n\n      if (!isModal) {\n        this.setAllSelected(false);\n      }\n\n      this._change();\n\n      this.setChangeEvents(true);\n    }\n  };\n  /**\n   * Selection needs the items, call this method to set them. If the set\n   * of items is the same, this will re-evaluate selection and index maps.\n   * Otherwise, shouldClear should be set to true, so that selection is\n   * cleared.\n   */\n\n\n  Selection.prototype.setItems = function (items, shouldClear) {\n    if (shouldClear === void 0) {\n      shouldClear = true;\n    }\n\n    var newKeyToIndexMap = {};\n    var newUnselectableIndices = {};\n    var hasSelectionChanged = false;\n    this.setChangeEvents(false); // Reset the unselectable count.\n\n    this._unselectableCount = 0; // Build lookup table for quick selection evaluation.\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (item) {\n        var key = this.getKey(item, i);\n\n        if (key) {\n          newKeyToIndexMap[key] = i;\n        }\n      }\n\n      newUnselectableIndices[i] = item && !this.canSelectItem(item);\n\n      if (newUnselectableIndices[i]) {\n        this._unselectableCount++;\n      }\n    }\n\n    if (shouldClear || items.length === 0) {\n      this._setAllSelected(false, true);\n    } // Check the exemption list for discrepencies.\n\n\n    var newExemptedIndicies = {};\n    var newExemptedCount = 0;\n\n    for (var indexProperty in this._exemptedIndices) {\n      if (this._exemptedIndices.hasOwnProperty(indexProperty)) {\n        var index = Number(indexProperty);\n        var item = this._items[index];\n        var exemptKey = item ? this.getKey(item, Number(index)) : undefined;\n        var newIndex = exemptKey ? newKeyToIndexMap[exemptKey] : index;\n\n        if (newIndex === undefined) {\n          // The item has likely been replaced or removed.\n          hasSelectionChanged = true;\n        } else {\n          // We know the new index of the item. update the existing exemption table.\n          newExemptedIndicies[newIndex] = true;\n          newExemptedCount++;\n          hasSelectionChanged = hasSelectionChanged || newIndex !== index;\n        }\n      }\n    }\n\n    if (this._items && this._exemptedCount === 0 && items.length !== this._items.length && this._isAllSelected) {\n      // If everything was selected but the number of items has changed, selection has changed.\n      hasSelectionChanged = true;\n    }\n\n    this._exemptedIndices = newExemptedIndicies;\n    this._exemptedCount = newExemptedCount;\n    this._keyToIndexMap = newKeyToIndexMap;\n    this._unselectableIndices = newUnselectableIndices;\n    this._items = items;\n    this._selectedItems = null;\n\n    if (hasSelectionChanged) {\n      this._updateCount();\n\n      this._change();\n    }\n\n    this.setChangeEvents(true);\n  };\n\n  Selection.prototype.getItems = function () {\n    return this._items;\n  };\n\n  Selection.prototype.getSelection = function () {\n    if (!this._selectedItems) {\n      this._selectedItems = [];\n      var items = this._items;\n\n      if (items) {\n        for (var i = 0; i < items.length; i++) {\n          if (this.isIndexSelected(i)) {\n            this._selectedItems.push(items[i]);\n          }\n        }\n      }\n    }\n\n    return this._selectedItems;\n  };\n\n  Selection.prototype.getSelectedCount = function () {\n    return this._isAllSelected ? this._items.length - this._exemptedCount - this._unselectableCount : this._exemptedCount;\n  };\n\n  Selection.prototype.getSelectedIndices = function () {\n    if (!this._selectedIndices) {\n      this._selectedIndices = [];\n      var items = this._items;\n\n      if (items) {\n        for (var i = 0; i < items.length; i++) {\n          if (this.isIndexSelected(i)) {\n            this._selectedIndices.push(i);\n          }\n        }\n      }\n    }\n\n    return this._selectedIndices;\n  };\n\n  Selection.prototype.isRangeSelected = function (fromIndex, count) {\n    if (count === 0) {\n      return false;\n    }\n\n    var endIndex = fromIndex + count;\n\n    for (var i = fromIndex; i < endIndex; i++) {\n      if (!this.isIndexSelected(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  Selection.prototype.isAllSelected = function () {\n    var selectableCount = this._items.length - this._unselectableCount; // In single mode, we can only have a max of 1 item.\n\n    if (this.mode === SelectionMode.single) {\n      selectableCount = Math.min(selectableCount, 1);\n    }\n\n    return this.count > 0 && this._isAllSelected && this._exemptedCount === 0 || !this._isAllSelected && this._exemptedCount === selectableCount && selectableCount > 0;\n  };\n\n  Selection.prototype.isKeySelected = function (key) {\n    var index = this._keyToIndexMap[key];\n    return this.isIndexSelected(index);\n  };\n\n  Selection.prototype.isIndexSelected = function (index) {\n    return !!(this.count > 0 && this._isAllSelected && !this._exemptedIndices[index] && !this._unselectableIndices[index] || !this._isAllSelected && this._exemptedIndices[index]);\n  };\n\n  Selection.prototype.setAllSelected = function (isAllSelected) {\n    if (isAllSelected && this.mode !== SelectionMode.multiple) {\n      return;\n    }\n\n    var selectableCount = this._items ? this._items.length - this._unselectableCount : 0;\n    this.setChangeEvents(false);\n\n    if (selectableCount > 0 && (this._exemptedCount > 0 || isAllSelected !== this._isAllSelected)) {\n      this._exemptedIndices = {};\n\n      if (isAllSelected !== this._isAllSelected || this._exemptedCount > 0) {\n        this._exemptedCount = 0;\n        this._isAllSelected = isAllSelected;\n\n        this._change();\n      }\n\n      this._updateCount();\n    }\n\n    this.setChangeEvents(true);\n  };\n\n  Selection.prototype.setKeySelected = function (key, isSelected, shouldAnchor) {\n    var index = this._keyToIndexMap[key];\n\n    if (index >= 0) {\n      this.setIndexSelected(index, isSelected, shouldAnchor);\n    }\n  };\n\n  Selection.prototype.setIndexSelected = function (index, isSelected, shouldAnchor) {\n    if (this.mode === SelectionMode.none) {\n      return;\n    } // Clamp the index.\n\n\n    index = Math.min(Math.max(0, index), this._items.length - 1); // No-op on out of bounds selections.\n\n    if (index < 0 || index >= this._items.length) {\n      return;\n    }\n\n    this.setChangeEvents(false);\n    var isExempt = this._exemptedIndices[index];\n    var canSelect = !this._unselectableIndices[index];\n\n    if (canSelect) {\n      if (isSelected && this.mode === SelectionMode.single) {\n        // If this is single-select, the previous selection should be removed.\n        this._setAllSelected(false, true);\n      } // Determine if we need to remove the exemption.\n\n\n      if (isExempt && (isSelected && this._isAllSelected || !isSelected && !this._isAllSelected)) {\n        delete this._exemptedIndices[index];\n        this._exemptedCount--;\n      } // Determine if we need to add the exemption.\n\n\n      if (!isExempt && (isSelected && !this._isAllSelected || !isSelected && this._isAllSelected)) {\n        this._exemptedIndices[index] = true;\n        this._exemptedCount++;\n      }\n\n      if (shouldAnchor) {\n        this._anchoredIndex = index;\n      }\n    }\n\n    this._updateCount();\n\n    this.setChangeEvents(true);\n  };\n\n  Selection.prototype.selectToKey = function (key, clearSelection) {\n    this.selectToIndex(this._keyToIndexMap[key], clearSelection);\n  };\n\n  Selection.prototype.selectToIndex = function (index, clearSelection) {\n    if (this.mode === SelectionMode.none) {\n      return;\n    }\n\n    if (this.mode === SelectionMode.single) {\n      this.setIndexSelected(index, true, true);\n      return;\n    }\n\n    var anchorIndex = this._anchoredIndex || 0;\n    var startIndex = Math.min(index, anchorIndex);\n    var endIndex = Math.max(index, anchorIndex);\n    this.setChangeEvents(false);\n\n    if (clearSelection) {\n      this._setAllSelected(false, true);\n    }\n\n    for (; startIndex <= endIndex; startIndex++) {\n      this.setIndexSelected(startIndex, true, false);\n    }\n\n    this.setChangeEvents(true);\n  };\n\n  Selection.prototype.toggleAllSelected = function () {\n    this.setAllSelected(!this.isAllSelected());\n  };\n\n  Selection.prototype.toggleKeySelected = function (key) {\n    this.setKeySelected(key, !this.isKeySelected(key), true);\n  };\n\n  Selection.prototype.toggleIndexSelected = function (index) {\n    this.setIndexSelected(index, !this.isIndexSelected(index), true);\n  };\n\n  Selection.prototype.toggleRangeSelected = function (fromIndex, count) {\n    if (this.mode === SelectionMode.none) {\n      return;\n    }\n\n    var isRangeSelected = this.isRangeSelected(fromIndex, count);\n    var endIndex = fromIndex + count;\n\n    if (this.mode === SelectionMode.single && count > 1) {\n      return;\n    }\n\n    this.setChangeEvents(false);\n\n    for (var i = fromIndex; i < endIndex; i++) {\n      this.setIndexSelected(i, !isRangeSelected, false);\n    }\n\n    this.setChangeEvents(true);\n  };\n\n  Selection.prototype._updateCount = function (preserveModalState) {\n    if (preserveModalState === void 0) {\n      preserveModalState = false;\n    }\n\n    var count = this.getSelectedCount();\n\n    if (count !== this.count) {\n      this.count = count;\n\n      this._change();\n    }\n\n    if (!this.count && !preserveModalState) {\n      this.setModal(false);\n    }\n  };\n\n  Selection.prototype._setAllSelected = function (isAllSelected, preserveModalState) {\n    if (preserveModalState === void 0) {\n      preserveModalState = false;\n    }\n\n    if (isAllSelected && this.mode !== SelectionMode.multiple) {\n      return;\n    }\n\n    var selectableCount = this._items ? this._items.length - this._unselectableCount : 0;\n    this.setChangeEvents(false);\n\n    if (selectableCount > 0 && (this._exemptedCount > 0 || isAllSelected !== this._isAllSelected)) {\n      this._exemptedIndices = {};\n\n      if (isAllSelected !== this._isAllSelected || this._exemptedCount > 0) {\n        this._exemptedCount = 0;\n        this._isAllSelected = isAllSelected;\n\n        this._change();\n      }\n\n      this._updateCount(preserveModalState);\n    }\n\n    this.setChangeEvents(true);\n  };\n\n  Selection.prototype._change = function () {\n    if (this._changeEventSuppressionCount === 0) {\n      this._selectedItems = null;\n      this._selectedIndices = undefined;\n      EventGroup.raise(this, SELECTION_CHANGE);\n\n      if (this._onSelectionChanged) {\n        this._onSelectionChanged();\n      }\n    } else {\n      this._hasChanged = true;\n    }\n  };\n\n  return Selection;\n}();\n\nexport { Selection };\n\nfunction defaultGetKey(item, index) {\n  // 0 may be used as a key\n  var _a = (item || {}).key,\n      key = _a === void 0 ? \"\" + index : _a;\n  return key;\n}","import \"core-js/modules/es6.string.small\";\n\n/**\n * Possible variations of the spinner circle size.\n * {@docCategory Spinner}\n */\nexport var SpinnerSize;\n\n(function (SpinnerSize) {\n  /**\n   * 12px Spinner diameter\n   */\n  SpinnerSize[SpinnerSize[\"xSmall\"] = 0] = \"xSmall\";\n  /**\n   * 16px Spinner diameter\n   */\n\n  SpinnerSize[SpinnerSize[\"small\"] = 1] = \"small\";\n  /**\n   * 20px Spinner diameter\n   */\n\n  SpinnerSize[SpinnerSize[\"medium\"] = 2] = \"medium\";\n  /**\n   * 28px Spinner diameter\n   */\n\n  SpinnerSize[SpinnerSize[\"large\"] = 3] = \"large\";\n})(SpinnerSize || (SpinnerSize = {}));\n/**\n * Deprecated at v2.0.0, use `SpinnerSize` instead.\n * @deprecated Use `SpinnerSize` instead.\n * {@docCategory Spinner}\n */\n\n\nexport var SpinnerType;\n\n(function (SpinnerType) {\n  /**\n   * Deprecated and will be removed at \\>= 2.0.0. Use `SpinnerSize.medium` instead.\n   * @deprecated Use `SpinnerSize.medium` instead.\n   */\n  SpinnerType[SpinnerType[\"normal\"] = 0] = \"normal\";\n  /**\n   * Deprecated and will be removed at \\>= 2.0.0. Use `SpinnerSize.large` instead.\n   * @deprecated Use `SpinnerSize.large` instead.\n   */\n\n  SpinnerType[SpinnerType[\"large\"] = 1] = \"large\";\n})(SpinnerType || (SpinnerType = {}));","import \"core-js/modules/es6.number.constructor\";\nimport { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Async, EventGroup, KeyCodes, elementContains, findScrollableParent, getParent, getDocument, getWindow, isElementTabbable, css, initializeComponentRef, FocusRects } from '../../Utilities';\nimport { SelectionMode } from './interfaces'; // Selection definitions:\n//\n// Anchor index: the point from which a range selection starts.\n// Focus index: the point from which layout movement originates from.\n//\n// These two can differ. Tests:\n//\n// If you start at index 5\n// Shift click to index 10\n//    The focus is 10, the anchor is 5.\n// If you shift click at index 0\n//    The anchor remains at 5, the items between 0 and 5 are selected and everything else is cleared.\n// If you click index 8\n//    The anchor and focus are set to 8.\n\nvar SELECTION_DISABLED_ATTRIBUTE_NAME = 'data-selection-disabled';\nvar SELECTION_INDEX_ATTRIBUTE_NAME = 'data-selection-index';\nvar SELECTION_TOGGLE_ATTRIBUTE_NAME = 'data-selection-toggle';\nvar SELECTION_INVOKE_ATTRIBUTE_NAME = 'data-selection-invoke';\nvar SELECTION_INVOKE_TOUCH_ATTRIBUTE_NAME = 'data-selection-touch-invoke';\nvar SELECTALL_TOGGLE_ALL_ATTRIBUTE_NAME = 'data-selection-all-toggle';\nvar SELECTION_SELECT_ATTRIBUTE_NAME = 'data-selection-select';\n/**\n * {@docCategory Selection}\n */\n\nvar SelectionZone =\n/** @class */\nfunction (_super) {\n  __extends(SelectionZone, _super);\n\n  function SelectionZone(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._root = React.createRef();\n    /**\n     * In some cases, the consuming scenario requires to set focus on a row without having SelectionZone\n     * react to the event. Note that focus events in IE \\<= 11 will occur asynchronously after .focus() has\n     * been called on an element, so we need a flag to store the idea that we will bypass the \"next\"\n     * focus event that occurs. This method does that.\n     */\n\n    _this.ignoreNextFocus = function () {\n      _this._handleNextFocus(false);\n    };\n\n    _this._onSelectionChange = function () {\n      var selection = _this.props.selection;\n      var isModal = selection.isModal && selection.isModal();\n\n      _this.setState({\n        isModal: isModal\n      });\n    };\n\n    _this._onMouseDownCapture = function (ev) {\n      var target = ev.target;\n\n      if (document.activeElement !== target && !elementContains(document.activeElement, target)) {\n        _this.ignoreNextFocus();\n\n        return;\n      }\n\n      if (!elementContains(target, _this._root.current)) {\n        return;\n      }\n\n      while (target !== _this._root.current) {\n        if (_this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\n          _this.ignoreNextFocus();\n\n          break;\n        }\n\n        target = getParent(target);\n      }\n    };\n    /**\n     * When we focus an item, for single/multi select scenarios, we should try to select it immediately\n     * as long as the focus did not originate from a mouse down/touch event. For those cases, we handle them\n     * specially.\n     */\n\n\n    _this._onFocus = function (ev) {\n      var target = ev.target;\n      var selection = _this.props.selection;\n      var isToggleModifierPressed = _this._isCtrlPressed || _this._isMetaPressed;\n\n      var selectionMode = _this._getSelectionMode();\n\n      if (_this._shouldHandleFocus && selectionMode !== SelectionMode.none) {\n        var isToggle = _this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME);\n\n        var itemRoot = _this._findItemRoot(target);\n\n        if (!isToggle && itemRoot) {\n          var index = _this._getItemIndex(itemRoot);\n\n          if (isToggleModifierPressed) {\n            // set anchor only.\n            selection.setIndexSelected(index, selection.isIndexSelected(index), true);\n\n            if (_this.props.enterModalOnTouch && _this._isTouch && selection.setModal) {\n              selection.setModal(true);\n\n              _this._setIsTouch(false);\n            }\n          } else {\n            if (_this.props.isSelectedOnFocus) {\n              _this._onItemSurfaceClick(ev, index);\n            }\n          }\n        }\n      }\n\n      _this._handleNextFocus(false);\n    };\n\n    _this._onMouseDown = function (ev) {\n      _this._updateModifiers(ev);\n\n      var target = ev.target;\n\n      var itemRoot = _this._findItemRoot(target); // No-op if selection is disabled\n\n\n      if (_this._isSelectionDisabled(target)) {\n        return;\n      }\n\n      while (target !== _this._root.current) {\n        if (_this._hasAttribute(target, SELECTALL_TOGGLE_ALL_ATTRIBUTE_NAME)) {\n          break;\n        } else if (itemRoot) {\n          if (_this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME)) {\n            break;\n          } else if (_this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\n            break;\n          } else if ((target === itemRoot || _this._shouldAutoSelect(target)) && !_this._isShiftPressed && !_this._isCtrlPressed && !_this._isMetaPressed) {\n            _this._onInvokeMouseDown(ev, _this._getItemIndex(itemRoot));\n\n            break;\n          } else if (_this.props.disableAutoSelectOnInputElements && (target.tagName === 'A' || target.tagName === 'BUTTON' || target.tagName === 'INPUT')) {\n            return;\n          }\n        }\n\n        target = getParent(target);\n      }\n    };\n\n    _this._onTouchStartCapture = function (ev) {\n      _this._setIsTouch(true);\n    };\n\n    _this._onClick = function (ev) {\n      var _a = _this.props.enableTouchInvocationTarget,\n          enableTouchInvocationTarget = _a === void 0 ? false : _a;\n\n      _this._updateModifiers(ev);\n\n      var target = ev.target;\n\n      var itemRoot = _this._findItemRoot(target);\n\n      var isSelectionDisabled = _this._isSelectionDisabled(target);\n\n      while (target !== _this._root.current) {\n        if (_this._hasAttribute(target, SELECTALL_TOGGLE_ALL_ATTRIBUTE_NAME)) {\n          if (!isSelectionDisabled) {\n            _this._onToggleAllClick(ev);\n          }\n\n          break;\n        } else if (itemRoot) {\n          var index = _this._getItemIndex(itemRoot);\n\n          if (_this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME)) {\n            if (!isSelectionDisabled) {\n              if (_this._isShiftPressed) {\n                _this._onItemSurfaceClick(ev, index);\n              } else {\n                _this._onToggleClick(ev, index);\n              }\n            }\n\n            break;\n          } else if (_this._isTouch && enableTouchInvocationTarget && _this._hasAttribute(target, SELECTION_INVOKE_TOUCH_ATTRIBUTE_NAME) || _this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\n            // Items should be invokable even if selection is disabled.\n            _this._onInvokeClick(ev, index);\n\n            break;\n          } else if (target === itemRoot) {\n            if (!isSelectionDisabled) {\n              _this._onItemSurfaceClick(ev, index);\n            }\n\n            break;\n          } else if (target.tagName === 'A' || target.tagName === 'BUTTON' || target.tagName === 'INPUT') {\n            return;\n          }\n        }\n\n        target = getParent(target);\n      }\n    };\n\n    _this._onContextMenu = function (ev) {\n      var target = ev.target;\n      var _a = _this.props,\n          onItemContextMenu = _a.onItemContextMenu,\n          selection = _a.selection;\n\n      if (onItemContextMenu) {\n        var itemRoot = _this._findItemRoot(target);\n\n        if (itemRoot) {\n          var index = _this._getItemIndex(itemRoot);\n\n          _this._onInvokeMouseDown(ev, index);\n\n          var skipPreventDefault = onItemContextMenu(selection.getItems()[index], index, ev.nativeEvent); // In order to keep back compat, if the value here is undefined, then we should still\n          // call preventDefault(). Only in the case where true is explicitly returned should\n          // the call be skipped.\n\n          if (!skipPreventDefault) {\n            ev.preventDefault();\n          }\n        }\n      }\n    };\n    /**\n     * In multi selection, if you double click within an item's root (but not within the invoke element or\n     * input elements), we should execute the invoke handler.\n     */\n\n\n    _this._onDoubleClick = function (ev) {\n      var target = ev.target;\n      var onItemInvoked = _this.props.onItemInvoked;\n\n      var itemRoot = _this._findItemRoot(target);\n\n      if (itemRoot && onItemInvoked && !_this._isInputElement(target)) {\n        var index = _this._getItemIndex(itemRoot);\n\n        while (target !== _this._root.current) {\n          if (_this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME) || _this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\n            break;\n          } else if (target === itemRoot) {\n            _this._onInvokeClick(ev, index);\n\n            break;\n          }\n\n          target = getParent(target);\n        }\n\n        target = getParent(target);\n      }\n    };\n\n    _this._onKeyDownCapture = function (ev) {\n      _this._updateModifiers(ev);\n\n      _this._handleNextFocus(true);\n    };\n\n    _this._onKeyDown = function (ev) {\n      _this._updateModifiers(ev);\n\n      var target = ev.target;\n\n      var isSelectionDisabled = _this._isSelectionDisabled(target);\n\n      var selection = _this.props.selection;\n      var isSelectAllKey = ev.which === KeyCodes.a && (_this._isCtrlPressed || _this._isMetaPressed);\n      var isClearSelectionKey = ev.which === KeyCodes.escape; // Ignore key downs from input elements.\n\n      if (_this._isInputElement(target)) {\n        // A key was pressed while an item in this zone was focused.\n        return;\n      }\n\n      var selectionMode = _this._getSelectionMode(); // If ctrl-a is pressed, select all (if all are not already selected.)\n\n\n      if (isSelectAllKey && selectionMode === SelectionMode.multiple && !selection.isAllSelected()) {\n        if (!isSelectionDisabled) {\n          selection.setAllSelected(true);\n        }\n\n        ev.stopPropagation();\n        ev.preventDefault();\n        return;\n      } // If escape is pressed, clear selection (if any are selected.)\n\n\n      if (isClearSelectionKey && selection.getSelectedCount() > 0) {\n        if (!isSelectionDisabled) {\n          selection.setAllSelected(false);\n        }\n\n        ev.stopPropagation();\n        ev.preventDefault();\n        return;\n      }\n\n      var itemRoot = _this._findItemRoot(target); // If a key was pressed within an item, we should treat \"enters\" as invokes and \"space\" as toggle\n\n\n      if (itemRoot) {\n        var index = _this._getItemIndex(itemRoot);\n\n        while (target !== _this._root.current) {\n          if (_this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME)) {\n            // For toggle elements, assuming they are rendered as buttons, they will generate a click event,\n            // so we can no-op for any keydowns in this case.\n            break;\n          } else if (_this._shouldAutoSelect(target)) {\n            if (!isSelectionDisabled) {\n              // If the event went to an element which should trigger auto-select, select it and then let\n              // the default behavior kick in.\n              _this._onInvokeMouseDown(ev, index);\n            }\n\n            break;\n          } else if ((ev.which === KeyCodes.enter || ev.which === KeyCodes.space) && (target.tagName === 'BUTTON' || target.tagName === 'A' || target.tagName === 'INPUT')) {\n            return false;\n          } else if (target === itemRoot) {\n            if (ev.which === KeyCodes.enter) {\n              // Items should be invokable even if selection is disabled.\n              _this._onInvokeClick(ev, index);\n\n              ev.preventDefault();\n              return;\n            } else if (ev.which === KeyCodes.space) {\n              if (!isSelectionDisabled) {\n                _this._onToggleClick(ev, index);\n              }\n\n              ev.preventDefault();\n              return;\n            }\n\n            break;\n          }\n\n          target = getParent(target);\n        }\n      }\n    };\n\n    _this._events = new EventGroup(_this);\n    _this._async = new Async(_this);\n    initializeComponentRef(_this);\n    var selection = _this.props.selection; // Reflect the initial modal state of selection into the state.\n\n    var isModal = selection.isModal && selection.isModal();\n    _this.state = {\n      isModal: isModal\n    };\n    return _this;\n  }\n\n  SelectionZone.getDerivedStateFromProps = function (nextProps, prevState) {\n    var isModal = nextProps.selection.isModal && nextProps.selection.isModal();\n    return __assign(__assign({}, prevState), {\n      isModal: isModal\n    });\n  };\n\n  SelectionZone.prototype.componentDidMount = function () {\n    var win = getWindow(this._root.current); // Track the latest modifier keys globally.\n\n    this._events.on(win, 'keydown, keyup', this._updateModifiers, true);\n\n    this._events.on(document, 'click', this._findScrollParentAndTryClearOnEmptyClick);\n\n    this._events.on(document.body, 'touchstart', this._onTouchStartCapture, true);\n\n    this._events.on(document.body, 'touchend', this._onTouchStartCapture, true); // Subscribe to the selection to keep modal state updated.\n\n\n    this._events.on(this.props.selection, 'change', this._onSelectionChange);\n  };\n\n  SelectionZone.prototype.render = function () {\n    var isModal = this.state.isModal;\n    return React.createElement(\"div\", {\n      className: css('ms-SelectionZone', {\n        'ms-SelectionZone--modal': !!isModal\n      }),\n      ref: this._root,\n      onKeyDown: this._onKeyDown,\n      onMouseDown: this._onMouseDown,\n      onKeyDownCapture: this._onKeyDownCapture,\n      onClick: this._onClick,\n      role: \"presentation\",\n      onDoubleClick: this._onDoubleClick,\n      onContextMenu: this._onContextMenu,\n      onMouseDownCapture: this._onMouseDownCapture,\n      onFocusCapture: this._onFocus,\n      \"data-selection-is-modal\": isModal ? true : undefined\n    }, this.props.children, React.createElement(FocusRects, null));\n  };\n\n  SelectionZone.prototype.componentDidUpdate = function (previousProps) {\n    var selection = this.props.selection;\n\n    if (selection !== previousProps.selection) {\n      // Whenever selection changes, update the subscripton to keep modal state updated.\n      this._events.off(previousProps.selection);\n\n      this._events.on(selection, 'change', this._onSelectionChange);\n    }\n  };\n\n  SelectionZone.prototype.componentWillUnmount = function () {\n    this._events.dispose();\n\n    this._async.dispose();\n  };\n\n  SelectionZone.prototype._isSelectionDisabled = function (target) {\n    if (this._getSelectionMode() === SelectionMode.none) {\n      return true;\n    }\n\n    while (target !== this._root.current) {\n      if (this._hasAttribute(target, SELECTION_DISABLED_ATTRIBUTE_NAME)) {\n        return true;\n      }\n\n      target = getParent(target);\n    }\n\n    return false;\n  };\n\n  SelectionZone.prototype._onToggleAllClick = function (ev) {\n    var selection = this.props.selection;\n\n    var selectionMode = this._getSelectionMode();\n\n    if (selectionMode === SelectionMode.multiple) {\n      selection.toggleAllSelected();\n      ev.stopPropagation();\n      ev.preventDefault();\n    }\n  };\n\n  SelectionZone.prototype._onToggleClick = function (ev, index) {\n    var selection = this.props.selection;\n\n    var selectionMode = this._getSelectionMode();\n\n    selection.setChangeEvents(false);\n\n    if (this.props.enterModalOnTouch && this._isTouch && !selection.isIndexSelected(index) && selection.setModal) {\n      selection.setModal(true);\n\n      this._setIsTouch(false);\n    }\n\n    if (selectionMode === SelectionMode.multiple) {\n      selection.toggleIndexSelected(index);\n    } else if (selectionMode === SelectionMode.single) {\n      var isSelected = selection.isIndexSelected(index);\n      var isModal = selection.isModal && selection.isModal();\n      selection.setAllSelected(false);\n      selection.setIndexSelected(index, !isSelected, true);\n\n      if (isModal && selection.setModal) {\n        // Since the above call to setAllSelected(false) clears modal state,\n        // restore it. This occurs because the SelectionMode of the Selection\n        // may differ from the SelectionZone.\n        selection.setModal(true);\n      }\n    } else {\n      selection.setChangeEvents(true);\n      return;\n    }\n\n    selection.setChangeEvents(true);\n    ev.stopPropagation(); // NOTE: ev.preventDefault is not called for toggle clicks, because this will kill the browser behavior\n    // for checkboxes if you use a checkbox for the toggle.\n  };\n\n  SelectionZone.prototype._onInvokeClick = function (ev, index) {\n    var _a = this.props,\n        selection = _a.selection,\n        onItemInvoked = _a.onItemInvoked;\n\n    if (onItemInvoked) {\n      onItemInvoked(selection.getItems()[index], index, ev.nativeEvent);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n\n  SelectionZone.prototype._onItemSurfaceClick = function (ev, index) {\n    var selection = this.props.selection;\n    var isToggleModifierPressed = this._isCtrlPressed || this._isMetaPressed;\n\n    var selectionMode = this._getSelectionMode();\n\n    if (selectionMode === SelectionMode.multiple) {\n      if (this._isShiftPressed && !this._isTabPressed) {\n        selection.selectToIndex(index, !isToggleModifierPressed);\n      } else if (isToggleModifierPressed) {\n        selection.toggleIndexSelected(index);\n      } else {\n        this._clearAndSelectIndex(index);\n      }\n    } else if (selectionMode === SelectionMode.single) {\n      this._clearAndSelectIndex(index);\n    }\n  };\n\n  SelectionZone.prototype._onInvokeMouseDown = function (ev, index) {\n    var selection = this.props.selection; // Only do work if item is not selected.\n\n    if (selection.isIndexSelected(index)) {\n      return;\n    }\n\n    this._clearAndSelectIndex(index);\n  };\n  /**\n   * To avoid high startup cost of traversing the DOM on component mount,\n   * defer finding the scrollable parent until a click interaction.\n   *\n   * The styles will probably already calculated since we're running in a click handler,\n   * so this is less likely to cause layout thrashing then doing it in mount.\n   */\n\n\n  SelectionZone.prototype._findScrollParentAndTryClearOnEmptyClick = function (ev) {\n    var scrollParent = findScrollableParent(this._root.current); // unbind this handler and replace binding with a binding on the actual scrollable parent\n\n    this._events.off(document, 'click', this._findScrollParentAndTryClearOnEmptyClick);\n\n    this._events.on(scrollParent, 'click', this._tryClearOnEmptyClick); // If we clicked inside the scrollable parent, call through to the handler on this click.\n\n\n    if (scrollParent && ev.target instanceof Node && scrollParent.contains(ev.target) || scrollParent === ev.target) {\n      this._tryClearOnEmptyClick(ev);\n    }\n  };\n\n  SelectionZone.prototype._tryClearOnEmptyClick = function (ev) {\n    if (!this.props.selectionPreservedOnEmptyClick && this._isNonHandledClick(ev.target)) {\n      this.props.selection.setAllSelected(false);\n    }\n  };\n\n  SelectionZone.prototype._clearAndSelectIndex = function (index) {\n    var selection = this.props.selection;\n    var isAlreadySingleSelected = selection.getSelectedCount() === 1 && selection.isIndexSelected(index);\n\n    if (!isAlreadySingleSelected) {\n      var isModal = selection.isModal && selection.isModal();\n      selection.setChangeEvents(false);\n      selection.setAllSelected(false);\n      selection.setIndexSelected(index, true, true);\n\n      if (isModal || this.props.enterModalOnTouch && this._isTouch) {\n        if (selection.setModal) {\n          selection.setModal(true);\n        }\n\n        if (this._isTouch) {\n          this._setIsTouch(false);\n        }\n      }\n\n      selection.setChangeEvents(true);\n    }\n  };\n  /**\n   * We need to track the modifier key states so that when focus events occur, which do not contain\n   * modifier states in the Event object, we know how to behave.\n   */\n\n\n  SelectionZone.prototype._updateModifiers = function (ev) {\n    this._isShiftPressed = ev.shiftKey;\n    this._isCtrlPressed = ev.ctrlKey;\n    this._isMetaPressed = ev.metaKey;\n    var keyCode = ev.keyCode;\n    this._isTabPressed = keyCode ? keyCode === KeyCodes.tab : false;\n  };\n\n  SelectionZone.prototype._findItemRoot = function (target) {\n    var selection = this.props.selection;\n\n    while (target !== this._root.current) {\n      var indexValue = target.getAttribute(SELECTION_INDEX_ATTRIBUTE_NAME);\n      var index = Number(indexValue);\n\n      if (indexValue !== null && index >= 0 && index < selection.getItems().length) {\n        break;\n      }\n\n      target = getParent(target);\n    }\n\n    if (target === this._root.current) {\n      return undefined;\n    }\n\n    return target;\n  };\n\n  SelectionZone.prototype._getItemIndex = function (itemRoot) {\n    return Number(itemRoot.getAttribute(SELECTION_INDEX_ATTRIBUTE_NAME));\n  };\n\n  SelectionZone.prototype._shouldAutoSelect = function (element) {\n    return this._hasAttribute(element, SELECTION_SELECT_ATTRIBUTE_NAME);\n  };\n\n  SelectionZone.prototype._hasAttribute = function (element, attributeName) {\n    var isToggle = false;\n\n    while (!isToggle && element !== this._root.current) {\n      isToggle = element.getAttribute(attributeName) === 'true';\n      element = getParent(element);\n    }\n\n    return isToggle;\n  };\n\n  SelectionZone.prototype._isInputElement = function (element) {\n    return element.tagName === 'INPUT' || element.tagName === 'TEXTAREA';\n  };\n\n  SelectionZone.prototype._isNonHandledClick = function (element) {\n    var doc = getDocument();\n\n    if (doc && element) {\n      while (element && element !== doc.documentElement) {\n        if (isElementTabbable(element)) {\n          return false;\n        }\n\n        element = getParent(element);\n      }\n    }\n\n    return true;\n  };\n\n  SelectionZone.prototype._handleNextFocus = function (handleFocus) {\n    var _this = this;\n\n    if (this._shouldHandleFocusTimeoutId) {\n      this._async.clearTimeout(this._shouldHandleFocusTimeoutId);\n\n      this._shouldHandleFocusTimeoutId = undefined;\n    }\n\n    this._shouldHandleFocus = handleFocus;\n\n    if (handleFocus) {\n      this._async.setTimeout(function () {\n        _this._shouldHandleFocus = false;\n      }, 100);\n    }\n  };\n\n  SelectionZone.prototype._setIsTouch = function (isTouch) {\n    var _this = this;\n\n    if (this._isTouchTimeoutId) {\n      this._async.clearTimeout(this._isTouchTimeoutId);\n\n      this._isTouchTimeoutId = undefined;\n    }\n\n    this._isTouch = true;\n\n    if (isTouch) {\n      this._async.setTimeout(function () {\n        _this._isTouch = false;\n      }, 300);\n    }\n  };\n\n  SelectionZone.prototype._getSelectionMode = function () {\n    var selection = this.props.selection;\n    var _a = this.props.selectionMode,\n        selectionMode = _a === void 0 ? selection ? selection.mode : SelectionMode.none : _a;\n    return selectionMode;\n  };\n\n  SelectionZone.defaultProps = {\n    isSelectedOnFocus: true,\n    selectionMode: SelectionMode.multiple\n  };\n  return SelectionZone;\n}(React.Component);\n\nexport { SelectionZone };","import \"core-js/modules/es6.string.small\";\nimport { getGlobalClassNames, AnimationVariables } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-GroupedList',\n  compact: 'ms-GroupedList--Compact',\n  group: 'ms-GroupedList-group',\n  link: 'ms-Link',\n  listCell: 'ms-List-cell'\n};\nvar beziers = {\n  easeInOutSine: 'cubic-bezier(0.445, 0.050, 0.550, 0.950)'\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b;\n\n  var theme = props.theme,\n      className = props.className,\n      compact = props.compact;\n  var palette = theme.palette;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.small, {\n      position: 'relative',\n      selectors: (_a = {}, _a[\".\" + classNames.listCell] = {\n        minHeight: 38\n      }, _a)\n    }, compact && [classNames.compact, {\n      selectors: (_b = {}, _b[\".\" + classNames.listCell] = {\n        minHeight: 32\n      }, _b)\n    }], className],\n    group: [classNames.group, {\n      transition: \"background-color \" + AnimationVariables.durationValue2 + \" \" + beziers.easeInOutSine\n    }],\n    groupIsDropping: {\n      backgroundColor: palette.neutralLight\n    }\n  };\n};","import \"core-js/modules/es6.string.small\";\nimport { getGlobalClassNames, getFocusStyle, AnimationVariables, FontWeights, IconFontSizes } from '../../Styling';\nimport { getRTL, IsFocusVisibleClassName } from '../../Utilities';\nimport { DEFAULT_CELL_STYLE_PROPS } from '../DetailsList/DetailsRow.styles';\nimport { CHECK_CELL_WIDTH } from '../DetailsList/DetailsRowCheck.styles'; // For every group level there is a GroupSpacer added. Importing this const to have the source value in one place.\n\nimport { SPACER_WIDTH as EXPAND_BUTTON_WIDTH } from './GroupSpacer';\nvar GlobalClassNames = {\n  root: 'ms-GroupHeader',\n  compact: 'ms-GroupHeader--compact',\n  check: 'ms-GroupHeader-check',\n  dropIcon: 'ms-GroupHeader-dropIcon',\n  expand: 'ms-GroupHeader-expand',\n  isCollapsed: 'is-collapsed',\n  title: 'ms-GroupHeader-title',\n  isSelected: 'is-selected',\n  iconTag: 'ms-Icon--Tag',\n  group: 'ms-GroupedList-group',\n  isDropping: 'is-dropping'\n};\nvar beziers = {\n  easeOutCirc: 'cubic-bezier(0.075, 0.820, 0.165, 1.000)',\n  easeOutSine: 'cubic-bezier(0.390, 0.575, 0.565, 1.000)',\n  easeInBack: 'cubic-bezier(0.600, -0.280, 0.735, 0.045)'\n};\nvar DEFAULT_GROUP_HEADER_HEIGHT = 48;\nvar COMPACT_GROUP_HEADER_HEIGHT = 40;\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c, _d, _e;\n\n  var theme = props.theme,\n      className = props.className,\n      selected = props.selected,\n      isCollapsed = props.isCollapsed,\n      compact = props.compact; // padding from the source to align GroupHeader title with DetailsRow's first cell.\n\n  var cellLeftPadding = DEFAULT_CELL_STYLE_PROPS.cellLeftPadding;\n  var finalRowHeight = compact ? COMPACT_GROUP_HEADER_HEIGHT : DEFAULT_GROUP_HEADER_HEIGHT;\n  var semanticColors = theme.semanticColors,\n      palette = theme.palette,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var checkExpandResetStyles = [getFocusStyle(theme), {\n    cursor: 'default',\n    background: 'none',\n    backgroundColor: 'transparent',\n    border: 'none',\n    padding: 0\n  }];\n  return {\n    root: [classNames.root, getFocusStyle(theme), theme.fonts.medium, {\n      // keep the border for height but color it so it's invisible.\n      borderBottom: \"1px solid \" + semanticColors.listBackground,\n      cursor: 'default',\n      userSelect: 'none',\n      selectors: (_a = {\n        ':hover': {\n          background: semanticColors.listItemBackgroundHovered,\n          color: semanticColors.actionLinkHovered\n        }\n      }, _a[\"&:hover .\" + classNames.check] = {\n        opacity: 1\n      }, _a[\".\" + IsFocusVisibleClassName + \" &:focus .\" + classNames.check] = {\n        opacity: 1\n      }, _a[\":global(.\" + classNames.group + \".\" + classNames.isDropping + \")\"] = {\n        selectors: (_b = {}, _b[\"& > .\" + classNames.root + \" .\" + classNames.dropIcon] = {\n          transition: \"transform \" + AnimationVariables.durationValue4 + \" \" + beziers.easeOutCirc + \" \" + (\"opacity \" + AnimationVariables.durationValue1 + \" \" + beziers.easeOutSine),\n          transitionDelay: AnimationVariables.durationValue3,\n          opacity: 1,\n          transform: \"rotate(0.2deg) scale(1);\"\n        }, _b[\".\" + classNames.check] = {\n          opacity: 0\n        }, _b)\n      }, _a)\n    }, selected && [classNames.isSelected, {\n      background: semanticColors.listItemBackgroundChecked,\n      selectors: (_c = {\n        ':hover': {\n          background: semanticColors.listItemBackgroundCheckedHovered\n        }\n      }, _c[\"\" + classNames.check] = {\n        opacity: 1\n      }, _c)\n    }], compact && [classNames.compact, {\n      border: 'none'\n    }], className],\n    groupHeaderContainer: [{\n      display: 'flex',\n      alignItems: 'center',\n      height: finalRowHeight\n    }],\n    headerCount: [{\n      padding: '0px 4px'\n    }],\n    check: [classNames.check, checkExpandResetStyles, {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      // paddingTop and marginTop brought from the DetailsRow.styles.ts with explanation below.\n      // Ensure that the check cell covers the top border of the cell.\n      // This ensures the click target does not leave a spot which would\n      // cause other items to be deselected.\n      paddingTop: 1,\n      marginTop: -1,\n      opacity: 0,\n      width: CHECK_CELL_WIDTH,\n      height: finalRowHeight,\n      selectors: (_d = {}, _d[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        opacity: 1\n      }, _d)\n    }],\n    expand: [classNames.expand, checkExpandResetStyles, {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: fonts.small.fontSize,\n      width: EXPAND_BUTTON_WIDTH,\n      height: finalRowHeight,\n      color: selected ? palette.neutralPrimary : palette.neutralSecondary,\n      selectors: {\n        ':hover': {\n          backgroundColor: selected ? palette.neutralQuaternary : palette.neutralLight\n        },\n        ':active': {\n          backgroundColor: selected ? palette.neutralTertiaryAlt : palette.neutralQuaternaryAlt\n        }\n      }\n    }],\n    expandIsCollapsed: [isCollapsed ? [classNames.isCollapsed, {\n      transform: 'rotate(0deg)',\n      transformOrigin: '50% 50%',\n      transition: 'transform .1s linear'\n    }] : {\n      transform: getRTL(theme) ? 'rotate(-90deg)' : 'rotate(90deg)',\n      transformOrigin: '50% 50%',\n      transition: 'transform .1s linear'\n    }],\n    title: [classNames.title, {\n      paddingLeft: cellLeftPadding,\n      fontSize: compact ? fonts.medium.fontSize : fonts.mediumPlus.fontSize,\n      fontWeight: isCollapsed ? FontWeights.regular : FontWeights.semibold,\n      cursor: 'pointer',\n      outline: 0,\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis'\n    }],\n    dropIcon: [classNames.dropIcon, {\n      position: 'absolute',\n      left: -26,\n      fontSize: IconFontSizes.large,\n      color: palette.neutralSecondary,\n      transition: \"transform \" + AnimationVariables.durationValue2 + \" \" + beziers.easeInBack + \", \" + (\"opacity \" + AnimationVariables.durationValue4 + \" \" + beziers.easeOutSine),\n      opacity: 0,\n      transform: 'rotate(0.2deg) scale(0.65)',\n      transformOrigin: '10px 10px',\n      selectors: (_e = {}, _e[\":global(.\" + classNames.iconTag + \")\"] = {\n        position: 'absolute'\n      }, _e)\n    }]\n  };\n};","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { SpinnerType, SpinnerSize } from './Spinner.types';\nimport { classNamesFunction, DelayedRender, getNativeProps, divProperties } from '../../Utilities';\nvar getClassNames = classNamesFunction();\n\nvar SpinnerBase =\n/** @class */\nfunction (_super) {\n  __extends(SpinnerBase, _super);\n\n  function SpinnerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SpinnerBase.prototype.render = function () {\n    // eslint-disable-next-line deprecation/deprecation\n    var _a = this.props,\n        type = _a.type,\n        size = _a.size,\n        ariaLabel = _a.ariaLabel,\n        ariaLive = _a.ariaLive,\n        styles = _a.styles,\n        label = _a.label,\n        theme = _a.theme,\n        className = _a.className,\n        labelPosition = _a.labelPosition;\n    var statusMessage = ariaLabel;\n    var nativeProps = getNativeProps(this.props, divProperties, ['size']); // SpinnerType is deprecated. If someone is still using this property, rather than putting the SpinnerType into the\n    // ISpinnerStyleProps, we'll map SpinnerType to its equivalent SpinnerSize and pass that in. Once SpinnerType\n    // finally goes away we should delete this.\n\n    var styleSize = size;\n\n    if (styleSize === undefined && type !== undefined) {\n      // eslint-disable-next-line deprecation/deprecation\n      styleSize = type === SpinnerType.large ? SpinnerSize.large : SpinnerSize.medium;\n    }\n\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      size: styleSize,\n      className: className,\n      labelPosition: labelPosition\n    });\n    return React.createElement(\"div\", __assign({}, nativeProps, {\n      className: classNames.root\n    }), React.createElement(\"div\", {\n      className: classNames.circle\n    }), label && React.createElement(\"div\", {\n      className: classNames.label\n    }, label), statusMessage && React.createElement(\"div\", {\n      role: \"status\",\n      \"aria-live\": ariaLive\n    }, React.createElement(DelayedRender, null, React.createElement(\"div\", {\n      className: classNames.screenReaderText\n    }, statusMessage))));\n  };\n\n  SpinnerBase.defaultProps = {\n    size: SpinnerSize.medium,\n    ariaLive: 'polite',\n    labelPosition: 'bottom'\n  };\n  return SpinnerBase;\n}(React.Component);\n\nexport { SpinnerBase };","import \"core-js/modules/es6.string.small\";\nimport { SpinnerSize } from './Spinner.types';\nimport { hiddenContentStyle, keyframes, HighContrastSelector, getGlobalClassNames } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-Spinner',\n  circle: 'ms-Spinner-circle',\n  label: 'ms-Spinner-label'\n};\nvar spinAnimation = memoizeFunction(function () {\n  return keyframes({\n    '0%': {\n      transform: 'rotate(0deg)'\n    },\n    '100%': {\n      transform: 'rotate(360deg)'\n    }\n  });\n});\nexport var getStyles = function getStyles(props) {\n  var _a;\n\n  var theme = props.theme,\n      size = props.size,\n      className = props.className,\n      labelPosition = props.labelPosition;\n  var palette = theme.palette;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }, labelPosition === 'top' && {\n      flexDirection: 'column-reverse'\n    }, labelPosition === 'right' && {\n      flexDirection: 'row'\n    }, labelPosition === 'left' && {\n      flexDirection: 'row-reverse'\n    }, className],\n    circle: [classNames.circle, {\n      boxSizing: 'border-box',\n      borderRadius: '50%',\n      border: '1.5px solid ' + palette.themeLight,\n      borderTopColor: palette.themePrimary,\n      animationName: spinAnimation(),\n      animationDuration: '1.3s',\n      animationIterationCount: 'infinite',\n      animationTimingFunction: 'cubic-bezier(.53,.21,.29,.67)',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderTopColor: 'Highlight'\n      }, _a)\n    }, size === SpinnerSize.xSmall && ['ms-Spinner--xSmall', {\n      width: 12,\n      height: 12\n    }], size === SpinnerSize.small && ['ms-Spinner--small', {\n      width: 16,\n      height: 16\n    }], size === SpinnerSize.medium && ['ms-Spinner--medium', {\n      width: 20,\n      height: 20\n    }], size === SpinnerSize.large && ['ms-Spinner--large', {\n      width: 28,\n      height: 28\n    }]],\n    label: [classNames.label, theme.fonts.small, {\n      color: palette.themePrimary,\n      margin: '8px 0 0',\n      textAlign: 'center'\n    }, labelPosition === 'top' && {\n      margin: '0 0 8px'\n    }, labelPosition === 'right' && {\n      margin: '0 0 0 8px'\n    }, labelPosition === 'left' && {\n      margin: '0 8px 0 0'\n    }],\n    screenReaderText: hiddenContentStyle\n  };\n};","import { styled } from '../../Utilities';\nimport { SpinnerBase } from './Spinner.base';\nimport { getStyles } from './Spinner.styles';\nexport var Spinner = styled(SpinnerBase, getStyles, undefined, {\n  scope: 'Spinner'\n});","import \"core-js/modules/es6.function.name\";\nimport { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { composeRenderFunction, classNamesFunction, getRTL, getRTLSafeKeyCode, KeyCodes } from '../../Utilities';\nimport { SelectionMode } from '../../utilities/selection/index';\nimport { Check } from '../../Check';\nimport { Icon } from '../../Icon';\nimport { GroupSpacer } from './GroupSpacer';\nimport { Spinner } from '../../Spinner';\nvar getClassNames = classNamesFunction();\n\nvar GroupHeaderBase =\n/** @class */\nfunction (_super) {\n  __extends(GroupHeaderBase, _super);\n\n  function GroupHeaderBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._toggleCollapse = function () {\n      var _a = _this.props,\n          group = _a.group,\n          onToggleCollapse = _a.onToggleCollapse,\n          isGroupLoading = _a.isGroupLoading;\n      var isCollapsed = _this.state.isCollapsed;\n      var newCollapsed = !isCollapsed;\n      var newLoadingVisible = !newCollapsed && isGroupLoading && isGroupLoading(group);\n\n      _this.setState({\n        isCollapsed: newCollapsed,\n        isLoadingVisible: newLoadingVisible\n      });\n\n      if (onToggleCollapse) {\n        onToggleCollapse(group);\n      }\n    };\n\n    _this._onKeyUp = function (ev) {\n      var shouldOpen = _this.state.isCollapsed && ev.which === getRTLSafeKeyCode(KeyCodes.right, _this.props.theme);\n      var shouldClose = !_this.state.isCollapsed && ev.which === getRTLSafeKeyCode(KeyCodes.left, _this.props.theme);\n\n      if (shouldClose || shouldOpen) {\n        _this._toggleCollapse();\n\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    };\n\n    _this._onToggleClick = function (ev) {\n      _this._toggleCollapse();\n\n      ev.stopPropagation();\n      ev.preventDefault();\n    };\n\n    _this._onToggleSelectGroupClick = function (ev) {\n      var _a = _this.props,\n          onToggleSelectGroup = _a.onToggleSelectGroup,\n          group = _a.group;\n\n      if (onToggleSelectGroup) {\n        onToggleSelectGroup(group);\n      }\n\n      ev.preventDefault();\n      ev.stopPropagation();\n    };\n\n    _this._onHeaderClick = function () {\n      var _a = _this.props,\n          group = _a.group,\n          onGroupHeaderClick = _a.onGroupHeaderClick,\n          onToggleSelectGroup = _a.onToggleSelectGroup;\n\n      if (onGroupHeaderClick) {\n        onGroupHeaderClick(group);\n      } else if (onToggleSelectGroup) {\n        onToggleSelectGroup(group);\n      }\n    };\n\n    _this._onRenderTitle = function (props) {\n      var group = props.group;\n\n      if (!group) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: _this._classNames.title\n      }, React.createElement(\"span\", null, group.name), React.createElement(\"span\", {\n        className: _this._classNames.headerCount\n      }, \"(\", group.count, group.hasMoreData && '+', \")\"));\n    };\n\n    _this.state = {\n      isCollapsed: _this.props.group && _this.props.group.isCollapsed,\n      isLoadingVisible: false\n    };\n    return _this;\n  }\n\n  GroupHeaderBase.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    if (newProps.group) {\n      var newCollapsed = newProps.group.isCollapsed;\n      var isGroupLoading = newProps.isGroupLoading;\n      var newLoadingVisible = !newCollapsed && isGroupLoading && isGroupLoading(newProps.group);\n      this.setState({\n        isCollapsed: newCollapsed || false,\n        isLoadingVisible: newLoadingVisible || false\n      });\n    }\n  };\n\n  GroupHeaderBase.prototype.render = function () {\n    var _a = this.props,\n        group = _a.group,\n        _b = _a.groupLevel,\n        groupLevel = _b === void 0 ? 0 : _b,\n        viewport = _a.viewport,\n        selectionMode = _a.selectionMode,\n        loadingText = _a.loadingText,\n        // eslint-disable-next-line deprecation/deprecation\n    _c = _a.isSelected,\n        // eslint-disable-next-line deprecation/deprecation\n    isSelected = _c === void 0 ? false : _c,\n        _d = _a.selected,\n        selected = _d === void 0 ? false : _d,\n        indentWidth = _a.indentWidth,\n        _e = _a.onRenderTitle,\n        onRenderTitle = _e === void 0 ? this._onRenderTitle : _e,\n        onRenderGroupHeaderCheckbox = _a.onRenderGroupHeaderCheckbox,\n        _f = _a.isCollapsedGroupSelectVisible,\n        isCollapsedGroupSelectVisible = _f === void 0 ? true : _f,\n        expandButtonProps = _a.expandButtonProps,\n        expandButtonIcon = _a.expandButtonIcon,\n        selectAllButtonProps = _a.selectAllButtonProps,\n        theme = _a.theme,\n        styles = _a.styles,\n        className = _a.className,\n        groupedListId = _a.groupedListId,\n        compact = _a.compact,\n        ariaPosInSet = _a.ariaPosInSet,\n        ariaSetSize = _a.ariaSetSize,\n        useFastIcons = _a.useFastIcons;\n    var defaultCheckboxRender = useFastIcons ? this._fastDefaultCheckboxRender : this._defaultCheckboxRender;\n    var onRenderCheckbox = onRenderGroupHeaderCheckbox ? composeRenderFunction(onRenderGroupHeaderCheckbox, defaultCheckboxRender) : defaultCheckboxRender;\n    var _g = this.state,\n        isCollapsed = _g.isCollapsed,\n        isLoadingVisible = _g.isLoadingVisible;\n    var canSelectGroup = selectionMode === SelectionMode.multiple;\n    var isSelectionCheckVisible = canSelectGroup && (isCollapsedGroupSelectVisible || !(group && group.isCollapsed));\n    var currentlySelected = selected || isSelected;\n    var isRTL = getRTL(theme);\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      selected: currentlySelected,\n      isCollapsed: isCollapsed,\n      compact: compact\n    });\n\n    if (!group) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: this._classNames.root,\n      style: viewport ? {\n        minWidth: viewport.width\n      } : {},\n      onClick: this._onHeaderClick,\n      \"aria-label\": group.ariaLabel || group.name,\n      \"aria-setsize\": ariaSetSize,\n      \"aria-posinset\": ariaPosInSet,\n      \"data-is-focusable\": true,\n      onKeyUp: this._onKeyUp,\n      \"aria-expanded\": !this.state.isCollapsed,\n      \"aria-level\": groupLevel + 1\n    }, React.createElement(\"div\", {\n      className: this._classNames.groupHeaderContainer\n    }, isSelectionCheckVisible ? React.createElement(\"button\", __assign({\n      \"data-is-focusable\": false,\n      type: \"button\",\n      className: this._classNames.check,\n      role: \"checkbox\",\n      \"aria-checked\": currentlySelected,\n      \"data-selection-toggle\": true,\n      onClick: this._onToggleSelectGroupClick\n    }, selectAllButtonProps), onRenderCheckbox({\n      checked: currentlySelected,\n      theme: theme\n    }, onRenderCheckbox)) : selectionMode !== SelectionMode.none && React.createElement(GroupSpacer, {\n      indentWidth: indentWidth,\n      count: 1\n    }), React.createElement(GroupSpacer, {\n      indentWidth: indentWidth,\n      count: groupLevel\n    }), React.createElement(\"div\", {\n      className: this._classNames.dropIcon\n    }, React.createElement(Icon, {\n      iconName: \"Tag\"\n    })), React.createElement(\"button\", __assign({\n      \"data-is-focusable\": false,\n      type: \"button\",\n      className: this._classNames.expand,\n      onClick: this._onToggleClick,\n      \"aria-expanded\": group ? !group.isCollapsed : undefined,\n      \"aria-controls\": group && !group.isCollapsed ? groupedListId : undefined\n    }, expandButtonProps), React.createElement(Icon, {\n      className: this._classNames.expandIsCollapsed,\n      iconName: expandButtonIcon || (isRTL ? 'ChevronLeftMed' : 'ChevronRightMed')\n    })), onRenderTitle(this.props, this._onRenderTitle), isLoadingVisible && React.createElement(Spinner, {\n      label: loadingText\n    })));\n  };\n\n  GroupHeaderBase.prototype._defaultCheckboxRender = function (checkboxProps) {\n    return React.createElement(Check, {\n      checked: checkboxProps.checked\n    });\n  };\n\n  GroupHeaderBase.prototype._fastDefaultCheckboxRender = function (checkboxProps) {\n    return React.createElement(FastCheck, {\n      theme: checkboxProps.theme,\n      checked: checkboxProps.checked\n    });\n  };\n\n  GroupHeaderBase.defaultProps = {\n    expandButtonProps: {\n      'aria-label': 'expand collapse group'\n    }\n  };\n  return GroupHeaderBase;\n}(React.Component);\n\nexport { GroupHeaderBase };\nvar FastCheck = React.memo(function (props) {\n  return React.createElement(Check, {\n    theme: props.theme,\n    checked: props.checked,\n    className: props.className,\n    useFastIcons: true\n  });\n});","import { styled } from '../../Utilities';\nimport { getStyles } from './GroupHeader.styles';\nimport { GroupHeaderBase } from './GroupHeader.base';\nexport var GroupHeader = styled(GroupHeaderBase, getStyles, undefined, {\n  scope: 'GroupHeader'\n});","import \"core-js/modules/es6.string.small\";\nimport \"core-js/modules/es6.string.link\";\nimport { getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-GroupShowAll',\n  link: 'ms-Link'\n};\nexport var getStyles = function getStyles(props) {\n  var _a;\n\n  var theme = props.theme;\n  var fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, {\n      position: 'relative',\n      padding: '10px 84px',\n      cursor: 'pointer',\n      selectors: (_a = {}, _a[\".\" + classNames.link] = {\n        fontSize: fonts.small.fontSize\n      }, _a)\n    }]\n  };\n};","import * as React from 'react';\nimport { useCallback } from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { Link } from '../../Link';\nimport { GroupSpacer } from './GroupSpacer';\nvar getClassNames = classNamesFunction();\nexport var GroupShowAllBase = function GroupShowAllBase(props) {\n  var group = props.group,\n      groupLevel = props.groupLevel,\n      _a = props.showAllLinkText,\n      showAllLinkText = _a === void 0 ? 'Show All' : _a,\n      styles = props.styles,\n      theme = props.theme,\n      onToggleSummarize = props.onToggleSummarize;\n  var classNames = getClassNames(styles, {\n    theme: theme\n  });\n  var memoizedOnClick = useCallback(function (ev) {\n    onToggleSummarize(group);\n    ev.stopPropagation();\n    ev.preventDefault();\n  }, [onToggleSummarize, group]);\n\n  if (group) {\n    return React.createElement(\"div\", {\n      className: classNames.root\n    }, React.createElement(GroupSpacer, {\n      count: groupLevel\n    }), React.createElement(Link, {\n      onClick: memoizedOnClick\n    }, showAllLinkText));\n  }\n\n  return null;\n};","import { styled } from '../../Utilities';\nimport { getStyles } from './GroupShowAll.styles';\nimport { GroupShowAllBase } from './GroupShowAll.base';\nexport var GroupShowAll = styled(GroupShowAllBase, getStyles, undefined, {\n  scope: 'GroupShowAll'\n});","import { getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-groupFooter'\n};\nexport var getStyles = function getStyles(props) {\n  var theme = props.theme,\n      className = props.className;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [theme.fonts.medium, classNames.root, {\n      position: 'relative',\n      padding: '5px 38px'\n    }, className]\n  };\n};","import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { GroupSpacer } from './GroupSpacer';\nvar getClassNames = classNamesFunction();\nexport var GroupFooterBase = function GroupFooterBase(props) {\n  var group = props.group,\n      groupLevel = props.groupLevel,\n      footerText = props.footerText,\n      indentWidth = props.indentWidth,\n      styles = props.styles,\n      theme = props.theme;\n  var classNames = getClassNames(styles, {\n    theme: theme\n  });\n\n  if (group && footerText) {\n    return React.createElement(\"div\", {\n      className: classNames.root\n    }, React.createElement(GroupSpacer, {\n      indentWidth: indentWidth,\n      count: groupLevel\n    }), footerText);\n  }\n\n  return null;\n};","import { styled } from '../../Utilities';\nimport { getStyles } from './GroupFooter.styles';\nimport { GroupFooterBase } from './GroupFooter.base';\nexport var GroupFooter = styled(GroupFooterBase, getStyles, undefined, {\n  scope: 'GroupFooter'\n});","/**\n * {@docCategory List}\n */\nexport var ScrollToMode = {\n  /**\n   * Does not make any consideration to where in the viewport the item should align to.\n   */\n  auto: 0,\n\n  /**\n   * Attempts to scroll the list so the top of the desired item is aligned with the top of the viewport.\n   */\n  top: 1,\n\n  /**\n   * Attempts to scroll the list so the bottom of the desired item is aligned with the bottom of the viewport.\n   */\n  bottom: 2,\n\n  /**\n   * Attempts to scroll the list so the desired item is in the exact center of the viewport.\n   */\n  center: 3\n};","import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.object.define-property\";\nimport { __assign, __extends, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Async, EventGroup, css, divProperties, findIndex, findScrollableParent, getNativeProps, getParent, getWindow, initializeComponentRef } from '../../Utilities';\nimport { ScrollToMode } from './List.types';\nimport { composeRenderFunction } from '../../Utilities';\nvar RESIZE_DELAY = 16;\nvar MIN_SCROLL_UPDATE_DELAY = 100;\nvar MAX_SCROLL_UPDATE_DELAY = 500;\nvar IDLE_DEBOUNCE_DELAY = 200; // The amount of time to wait before declaring that the list isn't scrolling\n\nvar DONE_SCROLLING_WAIT = 500;\nvar DEFAULT_ITEMS_PER_PAGE = 10;\nvar DEFAULT_PAGE_HEIGHT = 30;\nvar DEFAULT_RENDERED_WINDOWS_BEHIND = 2;\nvar DEFAULT_RENDERED_WINDOWS_AHEAD = 2;\nvar PAGE_KEY_PREFIX = 'page-';\nvar SPACER_KEY_PREFIX = 'spacer-';\nvar EMPTY_RECT = {\n  top: -1,\n  bottom: -1,\n  left: -1,\n  right: -1,\n  width: 0,\n  height: 0\n}; // Naming expensive measures so that they're named in profiles.\n\nvar _measurePageRect = function _measurePageRect(element) {\n  return element.getBoundingClientRect();\n};\n\nvar _measureSurfaceRect = _measurePageRect;\nvar _measureScrollRect = _measurePageRect;\n/**\n * The List renders virtualized pages of items. Each page's item count is determined by the getItemCountForPage callback\n * if provided by the caller, or 10 as default. Each page's height is determined by the getPageHeight callback if\n * provided by the caller, or by cached measurements if available, or by a running average, or a default fallback.\n *\n * The algorithm for rendering pages works like this:\n *\n * 1. Predict visible pages based on \"current measure data\" (page heights, surface position, visible window)\n * 2. If changes are necessary, apply changes (add/remove pages)\n * 3. For pages that are added, measure the page heights if we need to using getBoundingClientRect\n * 4. If measurements don't match predictions, update measure data and goto step 1 asynchronously\n *\n * Measuring too frequently can pull performance down significantly. To compensate, we cache measured values so that\n * we can avoid re-measuring during operations that should not alter heights, like scrolling.\n *\n * To optimize glass rendering performance, onShouldVirtualize can be set. When onShouldVirtualize return false,\n * List will run in fast mode (not virtualized) to render all items without any measurements to improve page load time.\n * And we start doing measurements and rendering in virtualized mode when items grows larger than this threshold.\n *\n * However, certain operations can make measure data stale. For example, resizing the list, or passing in new props,\n * or forcing an update change cause pages to shrink/grow. When these operations occur, we increment a measureVersion\n * number, which we associate with cached measurements and use to determine if a remeasure should occur.\n */\n\nvar List =\n/** @class */\nfunction (_super) {\n  __extends(List, _super);\n\n  function List(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._root = React.createRef();\n    _this._surface = React.createRef();\n    _this._pageRefs = {};\n\n    _this._onRenderRoot = function (props) {\n      var rootRef = props.rootRef,\n          surfaceElement = props.surfaceElement,\n          divProps = props.divProps;\n      return React.createElement(\"div\", __assign({\n        ref: rootRef\n      }, divProps), surfaceElement);\n    };\n\n    _this._onRenderSurface = function (props) {\n      var surfaceRef = props.surfaceRef,\n          pageElements = props.pageElements,\n          divProps = props.divProps;\n      return React.createElement(\"div\", __assign({\n        ref: surfaceRef\n      }, divProps), pageElements);\n    };\n\n    _this._onRenderPage = function (pageProps, defaultRender) {\n      var _a = _this.props,\n          onRenderCell = _a.onRenderCell,\n          role = _a.role;\n\n      var _b = pageProps.page,\n          _c = _b.items,\n          items = _c === void 0 ? [] : _c,\n          startIndex = _b.startIndex,\n          divProps = __rest(pageProps, [\"page\"]); // only assign list item role if no role is assigned\n\n\n      var cellRole = role === undefined ? 'listitem' : 'presentation';\n      var cells = [];\n\n      for (var i = 0; i < items.length; i++) {\n        var index = startIndex + i;\n        var item = items[i];\n        var itemKey = _this.props.getKey ? _this.props.getKey(item, index) : item && item.key;\n\n        if (itemKey === null || itemKey === undefined) {\n          itemKey = index;\n        }\n\n        cells.push(React.createElement(\"div\", {\n          role: cellRole,\n          className: 'ms-List-cell',\n          key: itemKey,\n          \"data-list-index\": index,\n          \"data-automationid\": \"ListCell\"\n        }, onRenderCell && onRenderCell(item, index, !_this.props.ignoreScrollingState ? _this.state.isScrolling : undefined)));\n      }\n\n      return React.createElement(\"div\", __assign({}, divProps), cells);\n    };\n\n    initializeComponentRef(_this);\n    _this.state = {\n      pages: [],\n      isScrolling: false\n    };\n    _this._async = new Async(_this);\n    _this._events = new EventGroup(_this);\n    _this._estimatedPageHeight = 0;\n    _this._totalEstimates = 0;\n    _this._requiredWindowsAhead = 0;\n    _this._requiredWindowsBehind = 0; // Track the measure version for everything.\n\n    _this._measureVersion = 0; // Ensure that scrolls are lazy updated.\n\n    _this._onAsyncScroll = _this._async.debounce(_this._onAsyncScroll, MIN_SCROLL_UPDATE_DELAY, {\n      leading: false,\n      maxWait: MAX_SCROLL_UPDATE_DELAY\n    });\n    _this._onAsyncIdle = _this._async.debounce(_this._onAsyncIdle, IDLE_DEBOUNCE_DELAY, {\n      leading: false\n    });\n    _this._onAsyncResize = _this._async.debounce(_this._onAsyncResize, RESIZE_DELAY, {\n      leading: false\n    });\n    _this._onScrollingDone = _this._async.debounce(_this._onScrollingDone, DONE_SCROLLING_WAIT, {\n      leading: false\n    });\n    _this._cachedPageHeights = {};\n    _this._estimatedPageHeight = 0;\n    _this._focusedIndex = -1;\n    _this._pageCache = {};\n    return _this;\n  }\n\n  Object.defineProperty(List.prototype, \"pageRefs\", {\n    get: function get() {\n      return this._pageRefs;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Scroll to the given index. By default will bring the page the specified item is on into the view. If a callback\n   * to measure the height of an individual item is specified, will only scroll to bring the specific item into view.\n   *\n   * Note: with items of variable height and no passed in `getPageHeight` method, the list might jump after scrolling\n   * when windows before/ahead are being rendered, and the estimated height is replaced using actual elements.\n   *\n   * @param index - Index of item to scroll to\n   * @param measureItem - Optional callback to measure the height of an individual item\n   * @param scrollToMode - Optional defines where in the window the item should be positioned to when scrolling\n   */\n\n  List.prototype.scrollToIndex = function (index, measureItem, scrollToMode) {\n    if (scrollToMode === void 0) {\n      scrollToMode = ScrollToMode.auto;\n    }\n\n    var startIndex = this.props.startIndex;\n\n    var renderCount = this._getRenderCount();\n\n    var endIndex = startIndex + renderCount;\n    var allowedRect = this._allowedRect;\n    var scrollTop = 0;\n    var itemsPerPage = 1;\n\n    for (var itemIndex = startIndex; itemIndex < endIndex; itemIndex += itemsPerPage) {\n      var pageSpecification = this._getPageSpecification(itemIndex, allowedRect);\n\n      var pageHeight = pageSpecification.height;\n      itemsPerPage = pageSpecification.itemCount;\n      var requestedIndexIsInPage = itemIndex <= index && itemIndex + itemsPerPage > index;\n\n      if (requestedIndexIsInPage) {\n        // We have found the page. If the user provided a way to measure an individual item, we will try to scroll in\n        // just the given item, otherwise we'll only bring the page into view\n        if (measureItem && this._scrollElement) {\n          var scrollRect = _measureScrollRect(this._scrollElement);\n\n          var scrollWindow = {\n            top: this._scrollElement.scrollTop,\n            bottom: this._scrollElement.scrollTop + scrollRect.height\n          }; // Adjust for actual item position within page\n\n          var itemPositionWithinPage = index - itemIndex;\n\n          for (var itemIndexInPage = 0; itemIndexInPage < itemPositionWithinPage; ++itemIndexInPage) {\n            scrollTop += measureItem(itemIndex + itemIndexInPage);\n          }\n\n          var scrollBottom = scrollTop + measureItem(index); // If scrollToMode is set to something other than auto, we always want to\n          // scroll the item into a specific position on the page.\n\n          switch (scrollToMode) {\n            case ScrollToMode.top:\n              this._scrollElement.scrollTop = scrollTop;\n              return;\n\n            case ScrollToMode.bottom:\n              this._scrollElement.scrollTop = scrollBottom - scrollRect.height;\n              return;\n\n            case ScrollToMode.center:\n              this._scrollElement.scrollTop = (scrollTop + scrollBottom - scrollRect.height) / 2;\n              return;\n\n            case ScrollToMode.auto:\n            default:\n              break;\n          }\n\n          var itemIsFullyVisible = scrollTop >= scrollWindow.top && scrollBottom <= scrollWindow.bottom;\n\n          if (itemIsFullyVisible) {\n            // Item is already visible, do nothing.\n            return;\n          }\n\n          var itemIsPartiallyAbove = scrollTop < scrollWindow.top;\n          var itemIsPartiallyBelow = scrollBottom > scrollWindow.bottom;\n\n          if (itemIsPartiallyAbove) {//  We will just scroll to 'scrollTop'\n            //  .------.   - scrollTop\n            //  |Item  |\n            //  | .----|-. - scrollWindow.top\n            //  '------' |\n            //    |      |\n            //    '------'\n          } else if (itemIsPartiallyBelow) {\n            //  Adjust scrollTop position to just bring in the element\n            // .------.  - scrollTop\n            // |      |\n            // | .------.\n            // '-|----' | - scrollWindow.bottom\n            //   | Item |\n            //   '------' - scrollBottom\n            scrollTop = scrollBottom - scrollRect.height;\n          }\n        }\n\n        this._scrollElement.scrollTop = scrollTop;\n        return;\n      }\n\n      scrollTop += pageHeight;\n    }\n  };\n\n  List.prototype.getStartItemIndexInView = function (measureItem) {\n    var pages = this.state.pages || [];\n\n    for (var _i = 0, pages_1 = pages; _i < pages_1.length; _i++) {\n      var page = pages_1[_i];\n      var isPageVisible = !page.isSpacer && (this._scrollTop || 0) >= page.top && (this._scrollTop || 0) <= page.top + page.height;\n\n      if (isPageVisible) {\n        if (!measureItem) {\n          var rowHeight = Math.floor(page.height / page.itemCount);\n          return page.startIndex + Math.floor((this._scrollTop - page.top) / rowHeight);\n        } else {\n          var totalRowHeight = 0;\n\n          for (var itemIndex = page.startIndex; itemIndex < page.startIndex + page.itemCount; itemIndex++) {\n            var rowHeight = measureItem(itemIndex);\n\n            if (page.top + totalRowHeight <= this._scrollTop && this._scrollTop < page.top + totalRowHeight + rowHeight) {\n              return itemIndex;\n            } else {\n              totalRowHeight += rowHeight;\n            }\n          }\n        }\n      }\n    }\n\n    return 0;\n  };\n\n  List.prototype.componentDidMount = function () {\n    this._updatePages();\n\n    this._measureVersion++;\n    this._scrollElement = findScrollableParent(this._root.current);\n\n    this._events.on(window, 'resize', this._onAsyncResize);\n\n    if (this._root.current) {\n      this._events.on(this._root.current, 'focus', this._onFocus, true);\n    }\n\n    if (this._scrollElement) {\n      this._events.on(this._scrollElement, 'scroll', this._onScroll);\n\n      this._events.on(this._scrollElement, 'scroll', this._onAsyncScroll);\n    }\n  };\n\n  List.prototype.componentWillUnmount = function () {\n    this._async.dispose();\n\n    this._events.dispose();\n\n    delete this._scrollElement;\n  };\n\n  List.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    if (newProps.items !== this.props.items || newProps.renderCount !== this.props.renderCount || newProps.startIndex !== this.props.startIndex || newProps.version !== this.props.version) {\n      // We have received new items so we want to make sure that initially we only render a single window to\n      // fill the currently visible rect, and then later render additional windows.\n      this._resetRequiredWindows();\n\n      this._requiredRect = null;\n      this._measureVersion++;\n\n      this._invalidatePageCache();\n\n      this._updatePages(newProps);\n    }\n  };\n\n  List.prototype.shouldComponentUpdate = function (newProps, newState) {\n    var oldPages = this.state.pages;\n    var newPages = newState.pages;\n    var shouldComponentUpdate = false; // Update if the page stops scrolling\n\n    if (!newState.isScrolling && this.state.isScrolling) {\n      return true;\n    }\n\n    if (newProps.version !== this.props.version) {\n      return true;\n    }\n\n    if (newProps.items === this.props.items && oldPages.length === newPages.length) {\n      for (var i = 0; i < oldPages.length; i++) {\n        var oldPage = oldPages[i];\n        var newPage = newPages[i];\n\n        if (oldPage.key !== newPage.key || oldPage.itemCount !== newPage.itemCount) {\n          shouldComponentUpdate = true;\n          break;\n        }\n      }\n    } else {\n      shouldComponentUpdate = true;\n    }\n\n    return shouldComponentUpdate;\n  };\n\n  List.prototype.forceUpdate = function () {\n    this._invalidatePageCache(); // Ensure that when the list is force updated we update the pages first before render.\n\n\n    this._updateRenderRects(this.props, true);\n\n    this._updatePages();\n\n    this._measureVersion++;\n\n    _super.prototype.forceUpdate.call(this);\n  };\n  /**\n   * Get the current height the list and it's pages.\n   */\n\n\n  List.prototype.getTotalListHeight = function () {\n    return this._surfaceRect.height;\n  };\n\n  List.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        _b = _a.role,\n        role = _b === void 0 ? 'list' : _b,\n        onRenderSurface = _a.onRenderSurface,\n        onRenderRoot = _a.onRenderRoot;\n    var _c = this.state.pages,\n        pages = _c === void 0 ? [] : _c;\n    var pageElements = [];\n    var divProps = getNativeProps(this.props, divProperties);\n\n    for (var _i = 0, pages_2 = pages; _i < pages_2.length; _i++) {\n      var page = pages_2[_i];\n      pageElements.push(this._renderPage(page));\n    }\n\n    var finalOnRenderSurface = onRenderSurface ? composeRenderFunction(onRenderSurface, this._onRenderSurface) : this._onRenderSurface;\n    var finalOnRenderRoot = onRenderRoot ? composeRenderFunction(onRenderRoot, this._onRenderRoot) : this._onRenderRoot;\n    return finalOnRenderRoot({\n      rootRef: this._root,\n      pages: pages,\n      surfaceElement: finalOnRenderSurface({\n        surfaceRef: this._surface,\n        pages: pages,\n        pageElements: pageElements,\n        divProps: {\n          role: 'presentation',\n          className: 'ms-List-surface'\n        }\n      }),\n      divProps: __assign(__assign({}, divProps), {\n        className: css('ms-List', className),\n        role: pageElements.length > 0 ? role : undefined\n      })\n    });\n  };\n\n  List.prototype._shouldVirtualize = function (props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    var onShouldVirtualize = props.onShouldVirtualize;\n    return !onShouldVirtualize || onShouldVirtualize(props);\n  };\n  /**\n   * when props.items change or forceUpdate called, throw away cached pages\n   */\n\n\n  List.prototype._invalidatePageCache = function () {\n    this._pageCache = {};\n  };\n\n  List.prototype._renderPage = function (page) {\n    var _this = this;\n\n    var usePageCache = this.props.usePageCache;\n    var cachedPage; // if usePageCache is set and cached page element can be found, just return cached page\n\n    if (usePageCache) {\n      cachedPage = this._pageCache[page.key];\n\n      if (cachedPage && cachedPage.pageElement) {\n        return cachedPage.pageElement;\n      }\n    }\n\n    var pageStyle = this._getPageStyle(page);\n\n    var _a = this.props.onRenderPage,\n        onRenderPage = _a === void 0 ? this._onRenderPage : _a;\n    var pageElement = onRenderPage({\n      page: page,\n      className: 'ms-List-page',\n      key: page.key,\n      ref: function ref(newRef) {\n        _this._pageRefs[page.key] = newRef;\n      },\n      style: pageStyle,\n      role: 'presentation'\n    }, this._onRenderPage); // cache the first page for now since it is re-rendered a lot times unnecessarily.\n    // todo: a more aggresive caching mechanism is to cache pages constaining the items not changed.\n    // now we re-render pages too frequently, for example, props.items increased from 30 to 60, although the\n    // first 30 items did not change, we still re-rendered all of them in this props.items change.\n\n    if (usePageCache && page.startIndex === 0) {\n      this._pageCache[page.key] = {\n        page: page,\n        pageElement: pageElement\n      };\n    }\n\n    return pageElement;\n  };\n  /** Generate the style object for the page. */\n\n\n  List.prototype._getPageStyle = function (page) {\n    var getPageStyle = this.props.getPageStyle;\n    return __assign(__assign({}, getPageStyle ? getPageStyle(page) : {}), !page.items ? {\n      height: page.height\n    } : {});\n  };\n  /** Track the last item index focused so that we ensure we keep it rendered. */\n\n\n  List.prototype._onFocus = function (ev) {\n    var target = ev.target;\n\n    while (target !== this._surface.current) {\n      var indexString = target.getAttribute('data-list-index');\n\n      if (indexString) {\n        this._focusedIndex = Number(indexString);\n        break;\n      }\n\n      target = getParent(target);\n    }\n  };\n  /**\n   * Called synchronously to reset the required render range to 0 on scrolling. After async scroll has executed,\n   * we will call onAsyncIdle which will reset it back to it's correct value.\n   */\n\n\n  List.prototype._onScroll = function () {\n    if (!this.state.isScrolling && !this.props.ignoreScrollingState) {\n      this.setState({\n        isScrolling: true\n      });\n    }\n\n    this._resetRequiredWindows();\n\n    this._onScrollingDone();\n  };\n\n  List.prototype._resetRequiredWindows = function () {\n    this._requiredWindowsAhead = 0;\n    this._requiredWindowsBehind = 0;\n  };\n  /**\n   * Debounced method to asynchronously update the visible region on a scroll event.\n   */\n\n\n  List.prototype._onAsyncScroll = function () {\n    this._updateRenderRects(); // Only update pages when the visible rect falls outside of the materialized rect.\n\n\n    if (!this._materializedRect || !_isContainedWithin(this._requiredRect, this._materializedRect)) {\n      this._updatePages();\n    } else {// console.log('requiredRect contained in materialized', this._requiredRect, this._materializedRect);\n    }\n  };\n  /**\n   * This is an async debounced method that will try and increment the windows we render. If we can increment\n   * either, we increase the amount we render and re-evaluate.\n   */\n\n\n  List.prototype._onAsyncIdle = function () {\n    var _a = this.props,\n        renderedWindowsAhead = _a.renderedWindowsAhead,\n        renderedWindowsBehind = _a.renderedWindowsBehind;\n\n    var _b = this,\n        requiredWindowsAhead = _b._requiredWindowsAhead,\n        requiredWindowsBehind = _b._requiredWindowsBehind;\n\n    var windowsAhead = Math.min(renderedWindowsAhead, requiredWindowsAhead + 1);\n    var windowsBehind = Math.min(renderedWindowsBehind, requiredWindowsBehind + 1);\n\n    if (windowsAhead !== requiredWindowsAhead || windowsBehind !== requiredWindowsBehind) {\n      // console.log('idling', windowsBehind, windowsAhead);\n      this._requiredWindowsAhead = windowsAhead;\n      this._requiredWindowsBehind = windowsBehind;\n\n      this._updateRenderRects();\n\n      this._updatePages();\n    }\n\n    if (renderedWindowsAhead > windowsAhead || renderedWindowsBehind > windowsBehind) {\n      // Async increment on next tick.\n      this._onAsyncIdle();\n    }\n  };\n  /**\n   * Function to call when the list is done scrolling.\n   * This function is debounced.\n   */\n\n\n  List.prototype._onScrollingDone = function () {\n    if (!this.props.ignoreScrollingState) {\n      this.setState({\n        isScrolling: false\n      });\n    }\n  };\n\n  List.prototype._onAsyncResize = function () {\n    this.forceUpdate();\n  };\n\n  List.prototype._updatePages = function (props) {\n    // console.log('updating pages');\n    var _this = this;\n\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    if (!this._requiredRect) {\n      this._updateRenderRects(props);\n    }\n\n    var newListState = this._buildPages(props);\n\n    var oldListPages = this.state.pages;\n\n    this._notifyPageChanges(oldListPages, newListState.pages);\n\n    this.setState(newListState, function () {\n      // Multiple updates may have been queued, so the callback will reflect all of them.\n      // Re-fetch the current props and states to avoid using a stale props or state captured in the closure.\n      var finalProps = _this.props;\n      var finalState = _this.state; // If we weren't provided with the page height, measure the pages\n\n      if (!finalProps.getPageHeight) {\n        // If measured version is invalid since we've updated the DOM\n        var heightsChanged = _this._updatePageMeasurements(finalState.pages); // On first render, we should re-measure so that we don't get a visual glitch.\n\n\n        if (heightsChanged) {\n          _this._materializedRect = null;\n\n          if (!_this._hasCompletedFirstRender) {\n            _this._hasCompletedFirstRender = true;\n\n            _this._updatePages(finalProps);\n          } else {\n            _this._onAsyncScroll();\n          }\n        } else {\n          // Enqueue an idle bump.\n          _this._onAsyncIdle();\n        }\n      } else {\n        // Enqueue an idle bump\n        _this._onAsyncIdle();\n      } // Notify the caller that rendering the new pages has completed\n\n\n      if (finalProps.onPagesUpdated) {\n        finalProps.onPagesUpdated(finalState.pages);\n      }\n    });\n  };\n  /**\n   * Notify consumers that the rendered pages have changed\n   * @param oldPages - The old pages\n   * @param newPages - The new pages\n   * @param props - The props to use\n   */\n\n\n  List.prototype._notifyPageChanges = function (oldPages, newPages, props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    var onPageAdded = props.onPageAdded,\n        onPageRemoved = props.onPageRemoved;\n\n    if (onPageAdded || onPageRemoved) {\n      var renderedIndexes = {};\n\n      for (var _i = 0, oldPages_1 = oldPages; _i < oldPages_1.length; _i++) {\n        var page = oldPages_1[_i];\n\n        if (page.items) {\n          renderedIndexes[page.startIndex] = page;\n        }\n      }\n\n      for (var _a = 0, newPages_1 = newPages; _a < newPages_1.length; _a++) {\n        var page = newPages_1[_a];\n\n        if (page.items) {\n          if (!renderedIndexes[page.startIndex]) {\n            this._onPageAdded(page);\n          } else {\n            delete renderedIndexes[page.startIndex];\n          }\n        }\n      }\n\n      for (var index in renderedIndexes) {\n        if (renderedIndexes.hasOwnProperty(index)) {\n          this._onPageRemoved(renderedIndexes[index]);\n        }\n      }\n    }\n  };\n\n  List.prototype._updatePageMeasurements = function (pages) {\n    var heightChanged = false; // when not in virtualize mode, we render all the items without page measurement\n\n    if (!this._shouldVirtualize()) {\n      return heightChanged;\n    }\n\n    for (var i = 0; i < pages.length; i++) {\n      var page = pages[i];\n\n      if (page.items) {\n        heightChanged = this._measurePage(page) || heightChanged;\n      }\n    }\n\n    return heightChanged;\n  };\n  /**\n   * Given a page, measure its dimensions, update cache.\n   * @returns True if the height has changed.\n   */\n\n\n  List.prototype._measurePage = function (page) {\n    var hasChangedHeight = false;\n    var pageElement = this._pageRefs[page.key];\n    var cachedHeight = this._cachedPageHeights[page.startIndex]; // console.log('   * measure attempt', page.startIndex, cachedHeight);\n\n    if (pageElement && this._shouldVirtualize() && (!cachedHeight || cachedHeight.measureVersion !== this._measureVersion)) {\n      var newClientRect = {\n        width: pageElement.clientWidth,\n        height: pageElement.clientHeight\n      };\n\n      if (newClientRect.height || newClientRect.width) {\n        hasChangedHeight = page.height !== newClientRect.height; // console.warn(' *** expensive page measure', page.startIndex, page.height, newClientRect.height);\n\n        page.height = newClientRect.height;\n        this._cachedPageHeights[page.startIndex] = {\n          height: newClientRect.height,\n          measureVersion: this._measureVersion\n        };\n        this._estimatedPageHeight = Math.round((this._estimatedPageHeight * this._totalEstimates + newClientRect.height) / (this._totalEstimates + 1));\n        this._totalEstimates++;\n      }\n    }\n\n    return hasChangedHeight;\n  };\n  /** Called when a page has been added to the DOM. */\n\n\n  List.prototype._onPageAdded = function (page) {\n    var onPageAdded = this.props.onPageAdded; // console.log('page added', page.startIndex, this.state.pages.map(page => page.key).join(', '));\n\n    if (onPageAdded) {\n      onPageAdded(page);\n    }\n  };\n  /** Called when a page has been removed from the DOM. */\n\n\n  List.prototype._onPageRemoved = function (page) {\n    var onPageRemoved = this.props.onPageRemoved; // console.log('  --- page removed', page.startIndex, this.state.pages.map(page => page.key).join(', '));\n\n    if (onPageRemoved) {\n      onPageRemoved(page);\n    }\n  };\n  /** Build up the pages that should be rendered. */\n\n\n  List.prototype._buildPages = function (props) {\n    var renderCount = props.renderCount;\n    var items = props.items,\n        startIndex = props.startIndex,\n        getPageHeight = props.getPageHeight;\n    renderCount = this._getRenderCount(props);\n\n    var materializedRect = __assign({}, EMPTY_RECT);\n\n    var pages = [];\n    var itemsPerPage = 1;\n    var pageTop = 0;\n    var currentSpacer = null;\n    var focusedIndex = this._focusedIndex;\n    var endIndex = startIndex + renderCount;\n\n    var shouldVirtualize = this._shouldVirtualize(props); // First render is very important to track; when we render cells, we have no idea of estimated page height.\n    // So we should default to rendering only the first page so that we can get information.\n    // However if the user provides a measure function, let's just assume they know the right heights.\n\n\n    var isFirstRender = this._estimatedPageHeight === 0 && !getPageHeight;\n    var allowedRect = this._allowedRect;\n\n    var _loop_1 = function _loop_1(itemIndex) {\n      var pageSpecification = this_1._getPageSpecification(itemIndex, allowedRect);\n\n      var pageHeight = pageSpecification.height;\n      var pageData = pageSpecification.data;\n      var key = pageSpecification.key;\n      itemsPerPage = pageSpecification.itemCount;\n      var pageBottom = pageTop + pageHeight - 1;\n      var isPageRendered = findIndex(this_1.state.pages, function (page) {\n        return !!page.items && page.startIndex === itemIndex;\n      }) > -1;\n      var isPageInAllowedRange = !allowedRect || pageBottom >= allowedRect.top && pageTop <= allowedRect.bottom;\n      var isPageInRequiredRange = !this_1._requiredRect || pageBottom >= this_1._requiredRect.top && pageTop <= this_1._requiredRect.bottom;\n      var isPageVisible = !isFirstRender && (isPageInRequiredRange || isPageInAllowedRange && isPageRendered) || !shouldVirtualize;\n      var isPageFocused = focusedIndex >= itemIndex && focusedIndex < itemIndex + itemsPerPage;\n      var isFirstPage = itemIndex === startIndex; // console.log('building page', itemIndex, 'pageTop: ' + pageTop, 'inAllowed: ' +\n      // isPageInAllowedRange, 'inRequired: ' + isPageInRequiredRange);\n      // Only render whats visible, focused, or first page,\n      // or when running in fast rendering mode (not in virtualized mode), we render all current items in pages\n\n      if (isPageVisible || isPageFocused || isFirstPage) {\n        if (currentSpacer) {\n          pages.push(currentSpacer);\n          currentSpacer = null;\n        }\n\n        var itemsInPage = Math.min(itemsPerPage, endIndex - itemIndex);\n\n        var newPage = this_1._createPage(key, items.slice(itemIndex, itemIndex + itemsInPage), itemIndex, undefined, undefined, pageData);\n\n        newPage.top = pageTop;\n        newPage.height = pageHeight;\n\n        if (this_1._visibleRect && this_1._visibleRect.bottom) {\n          newPage.isVisible = pageBottom >= this_1._visibleRect.top && pageTop <= this_1._visibleRect.bottom;\n        }\n\n        pages.push(newPage);\n\n        if (isPageInRequiredRange && this_1._allowedRect) {\n          _mergeRect(materializedRect, {\n            top: pageTop,\n            bottom: pageBottom,\n            height: pageHeight,\n            left: allowedRect.left,\n            right: allowedRect.right,\n            width: allowedRect.width\n          });\n        }\n      } else {\n        if (!currentSpacer) {\n          currentSpacer = this_1._createPage(SPACER_KEY_PREFIX + itemIndex, undefined, itemIndex, 0, undefined, pageData, true\n          /*isSpacer*/\n          );\n        }\n\n        currentSpacer.height = (currentSpacer.height || 0) + (pageBottom - pageTop) + 1;\n        currentSpacer.itemCount += itemsPerPage;\n      }\n\n      pageTop += pageBottom - pageTop + 1; // in virtualized mode, we render need to render first page then break and measure,\n      // otherwise, we render all items without measurement to make rendering fast\n\n      if (isFirstRender && shouldVirtualize) {\n        return \"break\";\n      }\n    };\n\n    var this_1 = this;\n\n    for (var itemIndex = startIndex; itemIndex < endIndex; itemIndex += itemsPerPage) {\n      var state_1 = _loop_1(itemIndex);\n\n      if (state_1 === \"break\") break;\n    }\n\n    if (currentSpacer) {\n      currentSpacer.key = SPACER_KEY_PREFIX + 'end';\n      pages.push(currentSpacer);\n    }\n\n    this._materializedRect = materializedRect; // console.log('materialized: ', materializedRect);\n\n    return {\n      pages: pages,\n      measureVersion: this._measureVersion\n    };\n  };\n\n  List.prototype._getPageSpecification = function (itemIndex, visibleRect) {\n    var getPageSpecification = this.props.getPageSpecification;\n\n    if (getPageSpecification) {\n      var pageData = getPageSpecification(itemIndex, visibleRect);\n      var _a = pageData.itemCount,\n          itemCount = _a === void 0 ? this._getItemCountForPage(itemIndex, visibleRect) : _a;\n      var _b = pageData.height,\n          height = _b === void 0 ? this._getPageHeight(itemIndex, visibleRect, itemCount) : _b;\n      return {\n        itemCount: itemCount,\n        height: height,\n        data: pageData.data,\n        key: pageData.key\n      };\n    } else {\n      var itemCount = this._getItemCountForPage(itemIndex, visibleRect);\n\n      return {\n        itemCount: itemCount,\n        height: this._getPageHeight(itemIndex, visibleRect, itemCount)\n      };\n    }\n  };\n  /**\n   * Get the pixel height of a give page. Will use the props getPageHeight first, and if not provided, fallback to\n   * cached height, or estimated page height, or default page height.\n   */\n\n\n  List.prototype._getPageHeight = function (itemIndex, visibleRect, itemsPerPage) {\n    if (this.props.getPageHeight) {\n      return this.props.getPageHeight(itemIndex, visibleRect, itemsPerPage);\n    } else {\n      var cachedHeight = this._cachedPageHeights[itemIndex];\n      return cachedHeight ? cachedHeight.height : this._estimatedPageHeight || DEFAULT_PAGE_HEIGHT;\n    }\n  };\n\n  List.prototype._getItemCountForPage = function (itemIndex, visibileRect) {\n    var itemsPerPage = this.props.getItemCountForPage ? this.props.getItemCountForPage(itemIndex, visibileRect) : DEFAULT_ITEMS_PER_PAGE;\n    return itemsPerPage ? itemsPerPage : DEFAULT_ITEMS_PER_PAGE;\n  };\n\n  List.prototype._createPage = function (pageKey, items, startIndex, count, style, data, isSpacer) {\n    if (startIndex === void 0) {\n      startIndex = -1;\n    }\n\n    if (count === void 0) {\n      count = items ? items.length : 0;\n    }\n\n    if (style === void 0) {\n      style = {};\n    }\n\n    pageKey = pageKey || PAGE_KEY_PREFIX + startIndex;\n    var cachedPage = this._pageCache[pageKey];\n\n    if (cachedPage && cachedPage.page) {\n      return cachedPage.page;\n    }\n\n    return {\n      key: pageKey,\n      startIndex: startIndex,\n      itemCount: count,\n      items: items,\n      style: style,\n      top: 0,\n      height: 0,\n      data: data,\n      isSpacer: isSpacer || false\n    };\n  };\n\n  List.prototype._getRenderCount = function (props) {\n    var _a = props || this.props,\n        items = _a.items,\n        startIndex = _a.startIndex,\n        renderCount = _a.renderCount;\n\n    return renderCount === undefined ? items ? items.length - startIndex : 0 : renderCount;\n  };\n  /** Calculate the visible rect within the list where top: 0 and left: 0 is the top/left of the list. */\n\n\n  List.prototype._updateRenderRects = function (props, forceUpdate) {\n    props = props || this.props;\n    var renderedWindowsAhead = props.renderedWindowsAhead,\n        renderedWindowsBehind = props.renderedWindowsBehind;\n    var pages = this.state.pages; // when not in virtualize mode, we render all items without measurement to optimize page rendering perf\n\n    if (!this._shouldVirtualize(props)) {\n      return;\n    }\n\n    var surfaceRect = this._surfaceRect || __assign({}, EMPTY_RECT);\n\n    var scrollHeight = this._scrollElement && this._scrollElement.scrollHeight;\n    var scrollTop = this._scrollElement ? this._scrollElement.scrollTop : 0; // WARNING: EXPENSIVE CALL! We need to know the surface top relative to the window.\n    // This needs to be called to recalculate when new pages should be loaded.\n    // We check to see how far we've scrolled and if it's further than a third of a page we run it again.\n\n    if (this._surface.current && (forceUpdate || !pages || !this._surfaceRect || !scrollHeight || scrollHeight !== this._scrollHeight || Math.abs(this._scrollTop - scrollTop) > this._estimatedPageHeight / 3)) {\n      surfaceRect = this._surfaceRect = _measureSurfaceRect(this._surface.current);\n      this._scrollTop = scrollTop;\n    } // If the scroll height has changed, something in the container likely resized and\n    // we should redo the page heights incase their content resized.\n\n\n    if (forceUpdate || !scrollHeight || scrollHeight !== this._scrollHeight) {\n      this._measureVersion++;\n    }\n\n    this._scrollHeight = scrollHeight; // If the surface is above the container top or below the container bottom, or if this is not the first\n    // render return empty rect.\n    // The first time the list gets rendered we need to calculate the rectangle. The width of the list is\n    // used to calculate the width of the list items.\n\n    var visibleTop = Math.max(0, -surfaceRect.top);\n    var win = getWindow(this._root.current);\n    var visibleRect = {\n      top: visibleTop,\n      left: surfaceRect.left,\n      bottom: visibleTop + win.innerHeight,\n      right: surfaceRect.right,\n      width: surfaceRect.width,\n      height: win.innerHeight\n    }; // The required/allowed rects are adjusted versions of the visible rect.\n\n    this._requiredRect = _expandRect(visibleRect, this._requiredWindowsBehind, this._requiredWindowsAhead);\n    this._allowedRect = _expandRect(visibleRect, renderedWindowsBehind, renderedWindowsAhead); // store the visible rect for later use.\n\n    this._visibleRect = visibleRect;\n  };\n\n  List.defaultProps = {\n    startIndex: 0,\n    onRenderCell: function onRenderCell(item, index, containsFocus) {\n      return React.createElement(React.Fragment, null, item && item.name || '');\n    },\n    renderedWindowsAhead: DEFAULT_RENDERED_WINDOWS_AHEAD,\n    renderedWindowsBehind: DEFAULT_RENDERED_WINDOWS_BEHIND\n  };\n  return List;\n}(React.Component);\n\nexport { List };\n\nfunction _expandRect(rect, pagesBefore, pagesAfter) {\n  var top = rect.top - pagesBefore * rect.height;\n  var height = rect.height + (pagesBefore + pagesAfter) * rect.height;\n  return {\n    top: top,\n    bottom: top + height,\n    height: height,\n    left: rect.left,\n    right: rect.right,\n    width: rect.width\n  };\n}\n\nfunction _isContainedWithin(innerRect, outerRect) {\n  return innerRect.top >= outerRect.top && innerRect.left >= outerRect.left && innerRect.bottom <= outerRect.bottom && innerRect.right <= outerRect.right;\n}\n\nfunction _mergeRect(targetRect, newRect) {\n  targetRect.top = newRect.top < targetRect.top || targetRect.top === -1 ? newRect.top : targetRect.top;\n  targetRect.left = newRect.left < targetRect.left || targetRect.left === -1 ? newRect.left : targetRect.left;\n  targetRect.bottom = newRect.bottom > targetRect.bottom || targetRect.bottom === -1 ? newRect.bottom : targetRect.bottom;\n  targetRect.right = newRect.right > targetRect.right || targetRect.right === -1 ? newRect.right : targetRect.right;\n  targetRect.width = targetRect.right - targetRect.left + 1;\n  targetRect.height = targetRect.bottom - targetRect.top + 1;\n  return targetRect;\n}","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef, css, getId, EventGroup } from '../../Utilities';\nimport { SELECTION_CHANGE } from '../../utilities/selection/index';\nimport { GroupHeader } from './GroupHeader';\nimport { GroupShowAll } from './GroupShowAll';\nimport { GroupFooter } from './GroupFooter';\nimport { List } from '../../List';\nvar DEFAULT_DROPPING_CSS_CLASS = 'is-dropping';\n\nvar GroupedListSection =\n/** @class */\nfunction (_super) {\n  __extends(GroupedListSection, _super);\n\n  function GroupedListSection(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._root = React.createRef();\n    _this._list = React.createRef();\n    _this._subGroupRefs = {};\n    _this._droppingClassName = '';\n\n    _this._onRenderGroupHeader = function (props) {\n      return React.createElement(GroupHeader, __assign({}, props));\n    };\n\n    _this._onRenderGroupShowAll = function (props) {\n      return React.createElement(GroupShowAll, __assign({}, props));\n    };\n\n    _this._onRenderGroupFooter = function (props) {\n      return React.createElement(GroupFooter, __assign({}, props));\n    };\n\n    _this._renderSubGroup = function (subGroup, subGroupIndex) {\n      var _a = _this.props,\n          dragDropEvents = _a.dragDropEvents,\n          dragDropHelper = _a.dragDropHelper,\n          eventsToRegister = _a.eventsToRegister,\n          getGroupItemLimit = _a.getGroupItemLimit,\n          groupNestingDepth = _a.groupNestingDepth,\n          groupProps = _a.groupProps,\n          items = _a.items,\n          headerProps = _a.headerProps,\n          showAllProps = _a.showAllProps,\n          footerProps = _a.footerProps,\n          listProps = _a.listProps,\n          onRenderCell = _a.onRenderCell,\n          selection = _a.selection,\n          selectionMode = _a.selectionMode,\n          viewport = _a.viewport,\n          onRenderGroupHeader = _a.onRenderGroupHeader,\n          onRenderGroupShowAll = _a.onRenderGroupShowAll,\n          onRenderGroupFooter = _a.onRenderGroupFooter,\n          onShouldVirtualize = _a.onShouldVirtualize,\n          group = _a.group,\n          compact = _a.compact;\n      var nestingDepth = subGroup.level ? subGroup.level + 1 : groupNestingDepth;\n      return !subGroup || subGroup.count > 0 || groupProps && groupProps.showEmptyGroups ? React.createElement(GroupedListSection // eslint-disable-next-line react/jsx-no-bind\n      , {\n        // eslint-disable-next-line react/jsx-no-bind\n        ref: function ref(_ref) {\n          return _this._subGroupRefs['subGroup_' + subGroupIndex] = _ref;\n        },\n        key: _this._getGroupKey(subGroup, subGroupIndex),\n        dragDropEvents: dragDropEvents,\n        dragDropHelper: dragDropHelper,\n        eventsToRegister: eventsToRegister,\n        footerProps: footerProps,\n        getGroupItemLimit: getGroupItemLimit,\n        group: subGroup,\n        groupIndex: subGroupIndex,\n        groupNestingDepth: nestingDepth,\n        groupProps: groupProps,\n        headerProps: headerProps,\n        items: items,\n        listProps: listProps,\n        onRenderCell: onRenderCell,\n        selection: selection,\n        selectionMode: selectionMode,\n        showAllProps: showAllProps,\n        viewport: viewport,\n        onRenderGroupHeader: onRenderGroupHeader,\n        onRenderGroupShowAll: onRenderGroupShowAll,\n        onRenderGroupFooter: onRenderGroupFooter,\n        onShouldVirtualize: onShouldVirtualize,\n        groups: group ? group.children : [],\n        compact: compact\n      }) : null;\n    };\n    /**\n     * collect all the data we need to enable drag/drop for a group\n     */\n\n\n    _this._getGroupDragDropOptions = function () {\n      var _a = _this.props,\n          group = _a.group,\n          groupIndex = _a.groupIndex,\n          dragDropEvents = _a.dragDropEvents,\n          eventsToRegister = _a.eventsToRegister;\n      var options = {\n        eventMap: eventsToRegister,\n        selectionIndex: -1,\n        context: {\n          data: group,\n          index: groupIndex,\n          isGroup: true\n        },\n        updateDropState: _this._updateDroppingState,\n        canDrag: dragDropEvents.canDrag,\n        canDrop: dragDropEvents.canDrop,\n        onDrop: dragDropEvents.onDrop,\n        onDragStart: dragDropEvents.onDragStart,\n        onDragEnter: dragDropEvents.onDragEnter,\n        onDragLeave: dragDropEvents.onDragLeave,\n        onDragEnd: dragDropEvents.onDragEnd,\n        onDragOver: dragDropEvents.onDragOver\n      };\n      return options;\n    };\n    /**\n     * update groupIsDropping state based on the input value, which is used to change style during drag and drop\n     *\n     * @param newValue - new isDropping state value\n     * @param event - the event trigger dropping state change which can be dragenter, dragleave etc\n     */\n\n\n    _this._updateDroppingState = function (newIsDropping, event) {\n      var isDropping = _this.state.isDropping;\n      var _a = _this.props,\n          dragDropEvents = _a.dragDropEvents,\n          group = _a.group;\n\n      if (isDropping !== newIsDropping) {\n        if (isDropping) {\n          if (dragDropEvents && dragDropEvents.onDragLeave) {\n            dragDropEvents.onDragLeave(group, event);\n          }\n        } else {\n          if (dragDropEvents && dragDropEvents.onDragEnter) {\n            _this._droppingClassName = dragDropEvents.onDragEnter(group, event);\n          }\n        }\n\n        _this.setState({\n          isDropping: newIsDropping\n        });\n      }\n    };\n\n    var selection = props.selection,\n        group = props.group;\n    initializeComponentRef(_this);\n    _this._id = getId('GroupedListSection');\n    _this.state = {\n      isDropping: false,\n      isSelected: selection && group ? selection.isRangeSelected(group.startIndex, group.count) : false\n    };\n    _this._events = new EventGroup(_this);\n    return _this;\n  }\n\n  GroupedListSection.prototype.componentDidMount = function () {\n    var _a = this.props,\n        dragDropHelper = _a.dragDropHelper,\n        selection = _a.selection;\n\n    if (dragDropHelper && this._root.current) {\n      this._dragDropSubscription = dragDropHelper.subscribe(this._root.current, this._events, this._getGroupDragDropOptions());\n    }\n\n    if (selection) {\n      this._events.on(selection, SELECTION_CHANGE, this._onSelectionChange);\n    }\n  };\n\n  GroupedListSection.prototype.componentWillUnmount = function () {\n    this._events.dispose();\n\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n    }\n  };\n\n  GroupedListSection.prototype.componentDidUpdate = function (previousProps) {\n    if (this.props.group !== previousProps.group || this.props.groupIndex !== previousProps.groupIndex || this.props.dragDropHelper !== previousProps.dragDropHelper) {\n      if (this._dragDropSubscription) {\n        this._dragDropSubscription.dispose();\n\n        delete this._dragDropSubscription;\n      }\n\n      if (this.props.dragDropHelper && this._root.current) {\n        this._dragDropSubscription = this.props.dragDropHelper.subscribe(this._root.current, this._events, this._getGroupDragDropOptions());\n      }\n    }\n  };\n\n  GroupedListSection.prototype.render = function () {\n    var _a = this.props,\n        getGroupItemLimit = _a.getGroupItemLimit,\n        group = _a.group,\n        groupIndex = _a.groupIndex,\n        headerProps = _a.headerProps,\n        showAllProps = _a.showAllProps,\n        footerProps = _a.footerProps,\n        viewport = _a.viewport,\n        selectionMode = _a.selectionMode,\n        _b = _a.onRenderGroupHeader,\n        onRenderGroupHeader = _b === void 0 ? this._onRenderGroupHeader : _b,\n        _c = _a.onRenderGroupShowAll,\n        onRenderGroupShowAll = _c === void 0 ? this._onRenderGroupShowAll : _c,\n        _d = _a.onRenderGroupFooter,\n        onRenderGroupFooter = _d === void 0 ? this._onRenderGroupFooter : _d,\n        onShouldVirtualize = _a.onShouldVirtualize,\n        groupedListClassNames = _a.groupedListClassNames,\n        groups = _a.groups,\n        compact = _a.compact,\n        _e = _a.listProps,\n        listProps = _e === void 0 ? {} : _e;\n    var isSelected = this.state.isSelected;\n    var renderCount = group && getGroupItemLimit ? getGroupItemLimit(group) : Infinity;\n    var isShowAllVisible = group && !group.children && !group.isCollapsed && !group.isShowingAll && (group.count > renderCount || group.hasMoreData);\n    var hasNestedGroups = group && group.children && group.children.length > 0;\n    var version = listProps.version;\n    var dividerProps = {\n      group: group,\n      groupIndex: groupIndex,\n      groupLevel: group ? group.level : 0,\n      isSelected: isSelected,\n      selected: isSelected,\n      viewport: viewport,\n      selectionMode: selectionMode,\n      groups: groups,\n      compact: compact\n    };\n    var ariaControlsProps = {\n      groupedListId: this._id,\n      ariaSetSize: groups ? groups.length : undefined,\n      ariaPosInSet: groupIndex !== undefined ? groupIndex + 1 : undefined\n    };\n\n    var groupHeaderProps = __assign(__assign(__assign({}, headerProps), dividerProps), ariaControlsProps);\n\n    var groupShowAllProps = __assign(__assign({}, showAllProps), dividerProps);\n\n    var groupFooterProps = __assign(__assign({}, footerProps), dividerProps);\n\n    var isDraggable = !!this.props.dragDropHelper && this._getGroupDragDropOptions().canDrag(group) && !!this.props.dragDropEvents.canDragGroups;\n    return React.createElement(\"div\", __assign({\n      ref: this._root\n    }, isDraggable && {\n      draggable: true\n    }, {\n      className: css(groupedListClassNames && groupedListClassNames.group, this._getDroppingClassName()),\n      role: \"presentation\"\n    }), onRenderGroupHeader(groupHeaderProps, this._onRenderGroupHeader), group && group.isCollapsed ? null : hasNestedGroups ? React.createElement(List, {\n      role: \"presentation\",\n      ref: this._list,\n      items: group ? group.children : [],\n      onRenderCell: this._renderSubGroup,\n      getItemCountForPage: this._returnOne,\n      onShouldVirtualize: onShouldVirtualize,\n      version: version,\n      id: this._id\n    }) : this._onRenderGroup(renderCount), group && group.isCollapsed ? null : isShowAllVisible && onRenderGroupShowAll(groupShowAllProps, this._onRenderGroupShowAll), onRenderGroupFooter(groupFooterProps, this._onRenderGroupFooter));\n  };\n\n  GroupedListSection.prototype.forceUpdate = function () {\n    _super.prototype.forceUpdate.call(this);\n\n    this.forceListUpdate();\n  };\n\n  GroupedListSection.prototype.forceListUpdate = function () {\n    var group = this.props.group;\n\n    if (this._list.current) {\n      this._list.current.forceUpdate();\n\n      if (group && group.children && group.children.length > 0) {\n        var subGroupCount = group.children.length;\n\n        for (var i = 0; i < subGroupCount; i++) {\n          var subGroup = this._list.current.pageRefs['subGroup_' + String(i)];\n\n          if (subGroup) {\n            subGroup.forceListUpdate();\n          }\n        }\n      }\n    } else {\n      var subGroup = this._subGroupRefs['subGroup_' + String(0)];\n\n      if (subGroup) {\n        subGroup.forceListUpdate();\n      }\n    }\n  };\n\n  GroupedListSection.prototype._onSelectionChange = function () {\n    var _a = this.props,\n        group = _a.group,\n        selection = _a.selection;\n\n    if (selection && group) {\n      var isSelected = selection.isRangeSelected(group.startIndex, group.count);\n\n      if (isSelected !== this.state.isSelected) {\n        this.setState({\n          isSelected: isSelected\n        });\n      }\n    }\n  };\n\n  GroupedListSection.prototype._onRenderGroupCell = function (onRenderCell, groupNestingDepth) {\n    return function (item, itemIndex) {\n      return onRenderCell(groupNestingDepth, item, itemIndex);\n    };\n  };\n\n  GroupedListSection.prototype._onRenderGroup = function (renderCount) {\n    var _a = this.props,\n        group = _a.group,\n        items = _a.items,\n        onRenderCell = _a.onRenderCell,\n        listProps = _a.listProps,\n        groupNestingDepth = _a.groupNestingDepth,\n        onShouldVirtualize = _a.onShouldVirtualize,\n        groupProps = _a.groupProps;\n    var count = group && !group.isShowingAll ? group.count : items.length;\n    var startIndex = group ? group.startIndex : 0;\n    return React.createElement(List, __assign({\n      role: groupProps && groupProps.role ? groupProps.role : 'grid',\n      items: items,\n      onRenderCell: this._onRenderGroupCell(onRenderCell, groupNestingDepth),\n      ref: this._list,\n      renderCount: Math.min(count, renderCount),\n      startIndex: startIndex,\n      onShouldVirtualize: onShouldVirtualize,\n      id: this._id\n    }, listProps));\n  };\n\n  GroupedListSection.prototype._returnOne = function () {\n    return 1;\n  };\n\n  GroupedListSection.prototype._getGroupKey = function (group, index) {\n    return 'group-' + (group && group.key ? group.key : String(group.level) + String(index));\n  };\n  /**\n   * get the correct css class to reflect the dropping state for a given group\n   *\n   * If the group is the current drop target, return the default dropping class name\n   * Otherwise, return '';\n   *\n   */\n\n\n  GroupedListSection.prototype._getDroppingClassName = function () {\n    var isDropping = this.state.isDropping;\n    var _a = this.props,\n        group = _a.group,\n        groupedListClassNames = _a.groupedListClassNames;\n    isDropping = !!(group && isDropping);\n    return css(isDropping && this._droppingClassName, isDropping && DEFAULT_DROPPING_CSS_CLASS, isDropping && groupedListClassNames && groupedListClassNames.groupIsDropping);\n  };\n\n  return GroupedListSection;\n}(React.Component);\n\nexport { GroupedListSection };","import \"core-js/modules/es6.array.some\";\nimport { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef, classNamesFunction, KeyCodes, getRTLSafeKeyCode, css } from '../../Utilities';\nimport { GroupedListSection } from './GroupedListSection';\nimport { List } from '../../List';\nimport { SelectionMode } from '../../utilities/selection/index';\nimport { DEFAULT_ROW_HEIGHTS } from '../DetailsList/DetailsRow.styles';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nvar getClassNames = classNamesFunction();\nvar ROW_HEIGHT = DEFAULT_ROW_HEIGHTS.rowHeight,\n    COMPACT_ROW_HEIGHT = DEFAULT_ROW_HEIGHTS.compactRowHeight;\n\nvar GroupedListBase =\n/** @class */\nfunction (_super) {\n  __extends(GroupedListBase, _super);\n\n  function GroupedListBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._list = React.createRef();\n    _this._groupRefs = {};\n\n    _this._renderGroup = function (group, groupIndex) {\n      var _a = _this.props,\n          dragDropEvents = _a.dragDropEvents,\n          dragDropHelper = _a.dragDropHelper,\n          eventsToRegister = _a.eventsToRegister,\n          groupProps = _a.groupProps,\n          items = _a.items,\n          listProps = _a.listProps,\n          onRenderCell = _a.onRenderCell,\n          selectionMode = _a.selectionMode,\n          selection = _a.selection,\n          viewport = _a.viewport,\n          onShouldVirtualize = _a.onShouldVirtualize,\n          groups = _a.groups,\n          compact = _a.compact; // override group header/footer props as needed\n\n      var dividerProps = {\n        onToggleSelectGroup: _this._onToggleSelectGroup,\n        onToggleCollapse: _this._onToggleCollapse,\n        onToggleSummarize: _this._onToggleSummarize\n      };\n\n      var headerProps = __assign(__assign({}, groupProps.headerProps), dividerProps);\n\n      var showAllProps = __assign(__assign({}, groupProps.showAllProps), dividerProps);\n\n      var footerProps = __assign(__assign({}, groupProps.footerProps), dividerProps);\n\n      var groupNestingDepth = _this._getGroupNestingDepth();\n\n      if (!groupProps.showEmptyGroups && group && group.count === 0) {\n        return null;\n      }\n\n      return React.createElement(GroupedListSection // eslint-disable-next-line react/jsx-no-bind\n      , {\n        // eslint-disable-next-line react/jsx-no-bind\n        ref: function ref(_ref) {\n          return _this._groupRefs['group_' + groupIndex] = _ref;\n        },\n        key: _this._getGroupKey(group, groupIndex),\n        dragDropEvents: dragDropEvents,\n        dragDropHelper: dragDropHelper,\n        eventsToRegister: eventsToRegister,\n        footerProps: footerProps,\n        getGroupItemLimit: groupProps && groupProps.getGroupItemLimit,\n        group: group,\n        groupIndex: groupIndex,\n        groupNestingDepth: groupNestingDepth,\n        groupProps: groupProps,\n        headerProps: headerProps,\n        listProps: listProps,\n        items: items,\n        onRenderCell: onRenderCell,\n        onRenderGroupHeader: groupProps.onRenderHeader,\n        onRenderGroupShowAll: groupProps.onRenderShowAll,\n        onRenderGroupFooter: groupProps.onRenderFooter,\n        selectionMode: selectionMode,\n        selection: selection,\n        showAllProps: showAllProps,\n        viewport: viewport,\n        onShouldVirtualize: onShouldVirtualize,\n        groupedListClassNames: _this._classNames,\n        groups: groups,\n        compact: compact\n      });\n    };\n\n    _this._getDefaultGroupItemLimit = function (group) {\n      return group.count;\n    };\n\n    _this._getGroupItemLimit = function (group) {\n      var groupProps = _this.props.groupProps;\n      var getGroupItemLimit = groupProps && groupProps.getGroupItemLimit ? groupProps.getGroupItemLimit : _this._getDefaultGroupItemLimit;\n      return getGroupItemLimit(group);\n    };\n\n    _this._getGroupHeight = function (group) {\n      var rowHeight = _this.props.compact ? COMPACT_ROW_HEIGHT : ROW_HEIGHT;\n      return rowHeight + (group.isCollapsed ? 0 : rowHeight * _this._getGroupItemLimit(group));\n    };\n\n    _this._getPageHeight = function (itemIndex) {\n      var groups = _this.state.groups;\n      var _a = _this.props.getGroupHeight,\n          getGroupHeight = _a === void 0 ? _this._getGroupHeight : _a;\n      var pageGroup = groups && groups[itemIndex];\n\n      if (pageGroup) {\n        return getGroupHeight(pageGroup, itemIndex);\n      } else {\n        return 0;\n      }\n    };\n\n    _this._onToggleCollapse = function (group) {\n      var groupProps = _this.props.groupProps;\n      var onToggleCollapse = groupProps && groupProps.headerProps && groupProps.headerProps.onToggleCollapse;\n\n      if (group) {\n        if (onToggleCollapse) {\n          onToggleCollapse(group);\n        }\n\n        group.isCollapsed = !group.isCollapsed;\n\n        _this._updateIsSomeGroupExpanded();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this._onToggleSelectGroup = function (group) {\n      var _a = _this.props,\n          selection = _a.selection,\n          selectionMode = _a.selectionMode;\n\n      if (group && selection && selectionMode === SelectionMode.multiple) {\n        selection.toggleRangeSelected(group.startIndex, group.count);\n      }\n    };\n\n    _this._isInnerZoneKeystroke = function (ev) {\n      return ev.which === getRTLSafeKeyCode(KeyCodes.right);\n    };\n\n    _this._onToggleSummarize = function (group) {\n      var groupProps = _this.props.groupProps;\n      var onToggleSummarize = groupProps && groupProps.showAllProps && groupProps.showAllProps.onToggleSummarize;\n\n      if (onToggleSummarize) {\n        onToggleSummarize(group);\n      } else {\n        if (group) {\n          group.isShowingAll = !group.isShowingAll;\n        }\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this._getPageSpecification = function (itemIndex) {\n      var groups = _this.state.groups;\n      var pageGroup = groups && groups[itemIndex];\n      return {\n        key: pageGroup && pageGroup.key\n      };\n    };\n\n    initializeComponentRef(_this);\n    _this._isSomeGroupExpanded = _this._computeIsSomeGroupExpanded(props.groups);\n    _this.state = {\n      groups: props.groups\n    };\n    return _this;\n  }\n\n  GroupedListBase.prototype.scrollToIndex = function (index, measureItem, scrollToMode) {\n    if (this._list.current) {\n      this._list.current.scrollToIndex(index, measureItem, scrollToMode);\n    }\n  };\n\n  GroupedListBase.prototype.getStartItemIndexInView = function () {\n    return this._list.current.getStartItemIndexInView() || 0;\n  };\n\n  GroupedListBase.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    var _a = this.props,\n        groups = _a.groups,\n        selectionMode = _a.selectionMode,\n        compact = _a.compact;\n    var shouldForceUpdates = false;\n\n    if (newProps.groups !== groups) {\n      this.setState({\n        groups: newProps.groups\n      });\n      shouldForceUpdates = true;\n    }\n\n    if (newProps.selectionMode !== selectionMode || newProps.compact !== compact) {\n      shouldForceUpdates = true;\n    }\n\n    if (shouldForceUpdates) {\n      this._forceListUpdates();\n    }\n  };\n\n  GroupedListBase.prototype.componentDidMount = function () {\n    var _a = this.props,\n        groupProps = _a.groupProps,\n        _b = _a.groups,\n        groups = _b === void 0 ? [] : _b;\n\n    if (groupProps && groupProps.isAllGroupsCollapsed) {\n      this._setGroupsCollapsedState(groups, groupProps.isAllGroupsCollapsed);\n    }\n  };\n\n  GroupedListBase.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        usePageCache = _a.usePageCache,\n        onShouldVirtualize = _a.onShouldVirtualize,\n        theme = _a.theme,\n        styles = _a.styles,\n        compact = _a.compact,\n        _b = _a.listProps,\n        listProps = _b === void 0 ? {} : _b,\n        _c = _a.focusZoneProps,\n        focusZoneProps = _c === void 0 ? {} : _c;\n    var groups = this.state.groups;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      compact: compact\n    });\n    var version = listProps.version;\n    var _d = focusZoneProps.shouldEnterInnerZone,\n        shouldEnterInnerZone = _d === void 0 ? this._isInnerZoneKeystroke : _d;\n    return React.createElement(FocusZone, __assign({\n      direction: FocusZoneDirection.vertical,\n      \"data-automationid\": \"GroupedList\",\n      \"data-is-scrollable\": \"false\",\n      role: \"presentation\"\n    }, focusZoneProps, {\n      shouldEnterInnerZone: shouldEnterInnerZone,\n      className: css(this._classNames.root, focusZoneProps.className)\n    }), !groups ? this._renderGroup(undefined, 0) : React.createElement(List, {\n      ref: this._list,\n      role: \"presentation\",\n      items: groups,\n      onRenderCell: this._renderGroup,\n      getItemCountForPage: this._returnOne,\n      getPageHeight: this._getPageHeight,\n      getPageSpecification: this._getPageSpecification,\n      usePageCache: usePageCache,\n      onShouldVirtualize: onShouldVirtualize,\n      version: version\n    }));\n  };\n\n  GroupedListBase.prototype.forceUpdate = function () {\n    _super.prototype.forceUpdate.call(this);\n\n    this._forceListUpdates();\n  };\n\n  GroupedListBase.prototype.toggleCollapseAll = function (allCollapsed) {\n    var _a = this.state.groups,\n        groups = _a === void 0 ? [] : _a;\n    var groupProps = this.props.groupProps;\n    var onToggleCollapseAll = groupProps && groupProps.onToggleCollapseAll;\n\n    if (groups.length > 0) {\n      if (onToggleCollapseAll) {\n        onToggleCollapseAll(allCollapsed);\n      }\n\n      this._setGroupsCollapsedState(groups, allCollapsed);\n\n      this._updateIsSomeGroupExpanded();\n\n      this.forceUpdate();\n    }\n  };\n\n  GroupedListBase.prototype._setGroupsCollapsedState = function (groups, isCollapsed) {\n    for (var groupIndex = 0; groupIndex < groups.length; groupIndex++) {\n      groups[groupIndex].isCollapsed = isCollapsed;\n    }\n  };\n\n  GroupedListBase.prototype._returnOne = function () {\n    return 1;\n  };\n\n  GroupedListBase.prototype._getGroupKey = function (group, index) {\n    return 'group-' + (group && group.key ? group.key : String(index));\n  };\n\n  GroupedListBase.prototype._getGroupNestingDepth = function () {\n    var groups = this.state.groups;\n    var level = 0;\n    var groupsInLevel = groups;\n\n    while (groupsInLevel && groupsInLevel.length > 0) {\n      level++;\n      groupsInLevel = groupsInLevel[0].children;\n    }\n\n    return level;\n  };\n\n  GroupedListBase.prototype._forceListUpdates = function (groups) {\n    groups = groups || this.state.groups;\n    var groupCount = groups ? groups.length : 1;\n\n    if (this._list.current) {\n      this._list.current.forceUpdate();\n\n      for (var i = 0; i < groupCount; i++) {\n        var group = this._list.current.pageRefs['group_' + String(i)];\n\n        if (group) {\n          group.forceListUpdate();\n        }\n      }\n    } else {\n      var group = this._groupRefs['group_' + String(0)];\n\n      if (group) {\n        group.forceListUpdate();\n      }\n    }\n  };\n\n  GroupedListBase.prototype._computeIsSomeGroupExpanded = function (groups) {\n    var _this = this;\n\n    return !!(groups && groups.some(function (group) {\n      return group.children ? _this._computeIsSomeGroupExpanded(group.children) : !group.isCollapsed;\n    }));\n  };\n\n  GroupedListBase.prototype._updateIsSomeGroupExpanded = function () {\n    var groups = this.state.groups;\n    var onGroupExpandStateChanged = this.props.onGroupExpandStateChanged;\n\n    var newIsSomeGroupExpanded = this._computeIsSomeGroupExpanded(groups);\n\n    if (this._isSomeGroupExpanded !== newIsSomeGroupExpanded) {\n      if (onGroupExpandStateChanged) {\n        onGroupExpandStateChanged(newIsSomeGroupExpanded);\n      }\n\n      this._isSomeGroupExpanded = newIsSomeGroupExpanded;\n    }\n  };\n\n  GroupedListBase.defaultProps = {\n    selectionMode: SelectionMode.multiple,\n    isHeaderVisible: true,\n    groupProps: {},\n    compact: false\n  };\n  return GroupedListBase;\n}(React.Component);\n\nexport { GroupedListBase };","import { styled } from '../../Utilities';\nimport { getStyles } from './GroupedList.styles';\nimport { GroupedListBase } from './GroupedList.base';\nexport var GroupedList = styled(GroupedListBase, getStyles, undefined, {\n  scope: 'GroupedList'\n});","/**\n * Helper to get bounding client rect. Passing in window will get the window size.\n *\n * @public\n */\nexport function getRect(element) {\n  var rect;\n\n  if (element) {\n    if (element === window) {\n      rect = {\n        left: 0,\n        top: 0,\n        width: window.innerWidth,\n        height: window.innerHeight,\n        right: window.innerWidth,\n        bottom: window.innerHeight\n      };\n    } else if (element.getBoundingClientRect) {\n      rect = element.getBoundingClientRect();\n    }\n  }\n\n  return rect;\n}","import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseDecorator } from './BaseDecorator';\nimport { findScrollableParent, getRect, getWindow, Async, EventGroup } from '../../Utilities';\nvar RESIZE_DELAY = 500;\nvar MAX_RESIZE_ATTEMPTS = 3;\n/**\n * A decorator to update decorated component on viewport or window resize events.\n *\n * @param ComposedComponent decorated React component reference.\n */\n\nexport function withViewport(ComposedComponent) {\n  return (\n    /** @class */\n    function (_super) {\n      __extends(WithViewportComponent, _super);\n\n      function WithViewportComponent(props) {\n        var _this = _super.call(this, props) || this;\n\n        _this._root = React.createRef();\n\n        _this._registerResizeObserver = function () {\n          var win = getWindow(_this._root.current);\n          _this._viewportResizeObserver = new win.ResizeObserver(_this._onAsyncResize);\n\n          _this._viewportResizeObserver.observe(_this._root.current);\n        };\n\n        _this._unregisterResizeObserver = function () {\n          if (_this._viewportResizeObserver) {\n            _this._viewportResizeObserver.disconnect();\n\n            delete _this._viewportResizeObserver;\n          }\n        };\n        /* Note: using lambda here because decorators don't seem to work in decorators. */\n\n\n        _this._updateViewport = function (withForceUpdate) {\n          var viewport = _this.state.viewport;\n          var viewportElement = _this._root.current;\n          var scrollElement = findScrollableParent(viewportElement);\n          var scrollRect = getRect(scrollElement);\n          var clientRect = getRect(viewportElement);\n\n          var updateComponent = function updateComponent() {\n            if (withForceUpdate && _this._composedComponentInstance) {\n              _this._composedComponentInstance.forceUpdate();\n            }\n          };\n\n          var isSizeChanged = (clientRect && clientRect.width) !== viewport.width || (scrollRect && scrollRect.height) !== viewport.height;\n\n          if (isSizeChanged && _this._resizeAttempts < MAX_RESIZE_ATTEMPTS && clientRect && scrollRect) {\n            _this._resizeAttempts++;\n\n            _this.setState({\n              viewport: {\n                width: clientRect.width,\n                height: scrollRect.height\n              }\n            }, function () {\n              _this._updateViewport(withForceUpdate);\n            });\n          } else {\n            _this._resizeAttempts = 0;\n            updateComponent();\n          }\n        };\n\n        _this._async = new Async(_this);\n        _this._events = new EventGroup(_this);\n        _this._resizeAttempts = 0;\n        _this.state = {\n          viewport: {\n            width: 0,\n            height: 0\n          }\n        };\n        return _this;\n      }\n\n      WithViewportComponent.prototype.componentDidMount = function () {\n        var skipViewportMeasures = this.props.skipViewportMeasures;\n        var win = getWindow(this._root.current);\n        this._onAsyncResize = this._async.debounce(this._onAsyncResize, RESIZE_DELAY, {\n          leading: false\n        }); // ResizeObserver seems always fire even window is not resized. This is\n        // particularly bad when skipViewportMeasures is set when optimizing fixed layout lists.\n        // It will measure and update and re-render the entire list after list is fully rendered.\n        // So fallback to listen to resize event when skipViewportMeasures is set.\n\n        if (!skipViewportMeasures && this._isResizeObserverAvailable()) {\n          this._registerResizeObserver();\n        } else {\n          this._events.on(win, 'resize', this._onAsyncResize);\n        }\n\n        if (!skipViewportMeasures) {\n          this._updateViewport();\n        }\n      };\n\n      WithViewportComponent.prototype.componentDidUpdate = function (newProps) {\n        var oldSkipViewportMeasures = this.props.skipViewportMeasures;\n        var newSkipViewportMeasures = newProps.skipViewportMeasures;\n        var win = getWindow(this._root.current);\n\n        if (oldSkipViewportMeasures !== newSkipViewportMeasures) {\n          if (newSkipViewportMeasures) {\n            this._unregisterResizeObserver();\n\n            this._events.on(win, 'resize', this._onAsyncResize);\n          } else if (!newSkipViewportMeasures && this._isResizeObserverAvailable()) {\n            this._events.off(win, 'resize', this._onAsyncResize);\n\n            this._registerResizeObserver();\n          }\n        }\n\n        if (newSkipViewportMeasures) {\n          this._updateViewport();\n        }\n      };\n\n      WithViewportComponent.prototype.componentWillUnmount = function () {\n        this._events.dispose();\n\n        this._async.dispose();\n\n        this._unregisterResizeObserver();\n      };\n\n      WithViewportComponent.prototype.render = function () {\n        var viewport = this.state.viewport;\n        var newViewport = viewport.width > 0 && viewport.height > 0 ? viewport : undefined;\n        return React.createElement(\"div\", {\n          className: \"ms-Viewport\",\n          ref: this._root,\n          style: {\n            minWidth: 1,\n            minHeight: 1\n          }\n        }, React.createElement(ComposedComponent, __assign({\n          ref: this._updateComposedComponentRef,\n          viewport: newViewport\n        }, this.props)));\n      };\n\n      WithViewportComponent.prototype.forceUpdate = function () {\n        this._updateViewport(true);\n      };\n\n      WithViewportComponent.prototype._onAsyncResize = function () {\n        this._updateViewport();\n      };\n\n      WithViewportComponent.prototype._isResizeObserverAvailable = function () {\n        var win = getWindow(this._root.current);\n        return win && win.ResizeObserver;\n      };\n\n      return WithViewportComponent;\n    }(BaseDecorator)\n  );\n}","import { __spreadArrays } from \"tslib\";\n/**\n * Takes an array of groups and returns a count of the groups and all descendant groups.\n * @param groups - The array of groups to count.\n */\n\nexport var GetGroupCount = function GetGroupCount(groups) {\n  var total = 0;\n\n  if (groups) {\n    var remainingGroups = __spreadArrays(groups);\n\n    var currentGroup = void 0;\n\n    while (remainingGroups && remainingGroups.length > 0) {\n      ++total;\n      currentGroup = remainingGroups.pop();\n\n      if (currentGroup && currentGroup.children) {\n        remainingGroups.push.apply(remainingGroups, currentGroup.children);\n      }\n    }\n  }\n\n  return total;\n};","import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport { __assign, __decorate, __extends, __spreadArrays } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef, FocusRects, Async, KeyCodes, elementContains, getRTLSafeKeyCode, classNamesFunction, memoizeFunction } from '../../Utilities';\nimport { CheckboxVisibility, ColumnActionsMode, ConstrainMode, DetailsListLayoutMode, ColumnDragEndLocation } from '../DetailsList/DetailsList.types';\nimport { DetailsHeader } from '../DetailsList/DetailsHeader';\nimport { SelectAllVisibility } from '../DetailsList/DetailsHeader.types';\nimport { DetailsRow } from '../DetailsList/DetailsRow';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Selection, SelectionMode, SelectionZone } from '../../utilities/selection/index';\nimport { DragDropHelper } from '../../utilities/dragdrop/DragDropHelper';\nimport { GroupedList } from '../../GroupedList';\nimport { List } from '../../List';\nimport { withViewport } from '../../utilities/decorators/withViewport';\nimport { GetGroupCount } from '../../utilities/groupedList/GroupedListUtility';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { CHECK_CELL_WIDTH as CHECKBOX_WIDTH } from './DetailsRowCheck.styles'; // For every group level there is a GroupSpacer added. Importing this const to have the source value in one place.\n\nimport { SPACER_WIDTH as GROUP_EXPAND_WIDTH } from '../GroupedList/GroupSpacer';\nimport { composeRenderFunction } from '@uifabric/utilities';\nvar getClassNames = classNamesFunction();\nvar MIN_COLUMN_WIDTH = 100; // this is the global min width\n\nvar DEFAULT_RENDERED_WINDOWS_AHEAD = 2;\nvar DEFAULT_RENDERED_WINDOWS_BEHIND = 2;\n\nvar DetailsListBase =\n/** @class */\nfunction (_super) {\n  __extends(DetailsListBase, _super);\n\n  function DetailsListBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._root = React.createRef();\n    _this._header = React.createRef();\n    _this._groupedList = React.createRef();\n    _this._list = React.createRef();\n    _this._focusZone = React.createRef();\n    _this._selectionZone = React.createRef();\n    _this._sumColumnWidths = memoizeFunction(function (columns) {\n      var totalWidth = 0;\n      columns.forEach(function (column) {\n        return totalWidth += column.calculatedWidth || column.minWidth;\n      });\n      return totalWidth;\n    });\n\n    _this._onRenderRow = function (props, defaultRender) {\n      return React.createElement(DetailsRow, __assign({}, props));\n    };\n\n    _this._onRenderDetailsHeader = function (detailsHeaderProps, defaultRender) {\n      return React.createElement(DetailsHeader, __assign({}, detailsHeaderProps));\n    };\n\n    _this._onRenderDetailsFooter = function (detailsFooterProps, defaultRender) {\n      return null;\n    };\n\n    _this._onRenderListCell = function (nestingDepth) {\n      return function (item, itemIndex) {\n        return _this._onRenderCell(nestingDepth, item, itemIndex);\n      };\n    };\n\n    _this._onRenderCell = function (nestingDepth, item, index) {\n      var _a = _this.props,\n          compact = _a.compact,\n          dragDropEvents = _a.dragDropEvents,\n          eventsToRegister = _a.rowElementEventMap,\n          onRenderMissingItem = _a.onRenderMissingItem,\n          onRenderItemColumn = _a.onRenderItemColumn,\n          getCellValueKey = _a.getCellValueKey,\n          _b = _a.selectionMode,\n          selectionMode = _b === void 0 ? _this._selection.mode : _b,\n          viewport = _a.viewport,\n          checkboxVisibility = _a.checkboxVisibility,\n          getRowAriaLabel = _a.getRowAriaLabel,\n          getRowAriaDescribedBy = _a.getRowAriaDescribedBy,\n          checkButtonAriaLabel = _a.checkButtonAriaLabel,\n          checkboxCellClassName = _a.checkboxCellClassName,\n          groupProps = _a.groupProps,\n          useReducedRowRenderer = _a.useReducedRowRenderer,\n          indentWidth = _a.indentWidth,\n          _c = _a.cellStyleProps,\n          cellStyleProps = _c === void 0 ? DEFAULT_CELL_STYLE_PROPS : _c,\n          onRenderCheckbox = _a.onRenderCheckbox,\n          enableUpdateAnimations = _a.enableUpdateAnimations,\n          useFastIcons = _a.useFastIcons;\n      var onRenderRow = _this.props.onRenderRow ? composeRenderFunction(_this.props.onRenderRow, _this._onRenderRow) : _this._onRenderRow;\n      var collapseAllVisibility = groupProps && groupProps.collapseAllVisibility;\n      var selection = _this._selection;\n      var dragDropHelper = _this._dragDropHelper;\n      var columns = _this.state.adjustedColumns;\n      var rowProps = {\n        item: item,\n        itemIndex: index,\n        compact: compact,\n        columns: columns,\n        groupNestingDepth: nestingDepth,\n        selectionMode: selectionMode,\n        selection: selection,\n        onDidMount: _this._onRowDidMount,\n        onWillUnmount: _this._onRowWillUnmount,\n        onRenderItemColumn: onRenderItemColumn,\n        getCellValueKey: getCellValueKey,\n        eventsToRegister: eventsToRegister,\n        dragDropEvents: dragDropEvents,\n        dragDropHelper: dragDropHelper,\n        viewport: viewport,\n        checkboxVisibility: checkboxVisibility,\n        collapseAllVisibility: collapseAllVisibility,\n        getRowAriaLabel: getRowAriaLabel,\n        getRowAriaDescribedBy: getRowAriaDescribedBy,\n        checkButtonAriaLabel: checkButtonAriaLabel,\n        checkboxCellClassName: checkboxCellClassName,\n        useReducedRowRenderer: useReducedRowRenderer,\n        indentWidth: indentWidth,\n        cellStyleProps: cellStyleProps,\n        onRenderDetailsCheckbox: onRenderCheckbox,\n        enableUpdateAnimations: enableUpdateAnimations,\n        rowWidth: _this._sumColumnWidths(columns),\n        useFastIcons: useFastIcons\n      };\n\n      if (!item) {\n        if (onRenderMissingItem) {\n          return onRenderMissingItem(index, rowProps);\n        }\n\n        return null;\n      }\n\n      return onRenderRow(rowProps);\n    };\n\n    _this._onGroupExpandStateChanged = function (isSomeGroupExpanded) {\n      _this.setState({\n        isSomeGroupExpanded: isSomeGroupExpanded\n      });\n    };\n\n    _this._onColumnIsSizingChanged = function (column, isSizing) {\n      _this.setState({\n        isSizing: isSizing\n      });\n    };\n\n    _this._onHeaderKeyDown = function (ev) {\n      if (ev.which === KeyCodes.down) {\n        if (_this._focusZone.current && _this._focusZone.current.focus()) {\n          // select the first item in list after down arrow key event\n          // only if nothing was selected; otherwise start with the already-selected item\n          if (_this._selection.getSelectedIndices().length === 0) {\n            _this._selection.setIndexSelected(0, true, false);\n          }\n\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      }\n    };\n\n    _this._onContentKeyDown = function (ev) {\n      if (ev.which === KeyCodes.up && !ev.altKey) {\n        if (_this._header.current && _this._header.current.focus()) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      }\n    };\n\n    _this._onRowDidMount = function (row) {\n      var _a = row.props,\n          item = _a.item,\n          itemIndex = _a.itemIndex;\n\n      var itemKey = _this._getItemKey(item, itemIndex);\n\n      _this._activeRows[itemKey] = row; // this is used for column auto resize\n\n      _this._setFocusToRowIfPending(row);\n\n      var onRowDidMount = _this.props.onRowDidMount;\n\n      if (onRowDidMount) {\n        onRowDidMount(item, itemIndex);\n      }\n    };\n\n    _this._onRowWillUnmount = function (row) {\n      var onRowWillUnmount = _this.props.onRowWillUnmount;\n      var _a = row.props,\n          item = _a.item,\n          itemIndex = _a.itemIndex;\n\n      var itemKey = _this._getItemKey(item, itemIndex);\n\n      delete _this._activeRows[itemKey];\n\n      if (onRowWillUnmount) {\n        onRowWillUnmount(item, itemIndex);\n      }\n    };\n\n    _this._onToggleCollapse = function (collapsed) {\n      _this.setState({\n        isCollapsed: collapsed\n      });\n\n      if (_this._groupedList.current) {\n        _this._groupedList.current.toggleCollapseAll(collapsed);\n      }\n    };\n\n    _this._onColumnDragEnd = function (props, event) {\n      var columnReorderOptions = _this.props.columnReorderOptions;\n      var finalDropLocation = ColumnDragEndLocation.outside;\n\n      if (columnReorderOptions && columnReorderOptions.onDragEnd) {\n        if (props.dropLocation && props.dropLocation !== ColumnDragEndLocation.header) {\n          finalDropLocation = props.dropLocation;\n        } else if (_this._root.current) {\n          var clientRect = _this._root.current.getBoundingClientRect();\n\n          if (event.clientX > clientRect.left && event.clientX < clientRect.right && event.clientY > clientRect.top && event.clientY < clientRect.bottom) {\n            finalDropLocation = ColumnDragEndLocation.surface;\n          }\n        }\n\n        columnReorderOptions.onDragEnd(finalDropLocation);\n      }\n    };\n\n    _this._onColumnResized = function (resizingColumn, newWidth, resizingColumnIndex) {\n      var newCalculatedWidth = Math.max(resizingColumn.minWidth || MIN_COLUMN_WIDTH, newWidth);\n\n      if (_this.props.onColumnResize) {\n        _this.props.onColumnResize(resizingColumn, newCalculatedWidth, resizingColumnIndex);\n      }\n\n      _this._rememberCalculatedWidth(resizingColumn, newCalculatedWidth);\n\n      _this._adjustColumns(_this.props, true, resizingColumnIndex);\n\n      _this.setState({\n        version: {}\n      });\n    };\n    /**\n     * Callback function when double clicked on the details header column resizer\n     * which will measure the column cells of all the active rows and resize the\n     * column to the max cell width.\n     *\n     * @param column - double clicked column definition\n     * @param columnIndex - double clicked column index\n     * TODO: min width 100 should be changed to const value and should be consistent with the\n     * value used on _onSizerMove method in DetailsHeader\n     */\n\n\n    _this._onColumnAutoResized = function (column, columnIndex) {\n      var max = 0;\n      var count = 0;\n      var totalCount = Object.keys(_this._activeRows).length;\n\n      for (var key in _this._activeRows) {\n        if (_this._activeRows.hasOwnProperty(key)) {\n          var currentRow = _this._activeRows[key];\n          currentRow.measureCell(columnIndex, function (width) {\n            max = Math.max(max, width);\n            count++;\n\n            if (count === totalCount) {\n              _this._onColumnResized(column, max, columnIndex);\n            }\n          });\n        }\n      }\n    };\n    /**\n     * Call back function when an element in FocusZone becomes active. It will translate it into item\n     * and call onActiveItemChanged callback if specified.\n     *\n     * @param row - element that became active in Focus Zone\n     * @param focus - event from Focus Zone\n     */\n\n\n    _this._onActiveRowChanged = function (el, ev) {\n      var _a = _this.props,\n          items = _a.items,\n          onActiveItemChanged = _a.onActiveItemChanged;\n\n      if (!el) {\n        return;\n      } // Check and assign index only if the event was raised from any DetailsRow element\n\n\n      if (el.getAttribute('data-item-index')) {\n        var index = Number(el.getAttribute('data-item-index'));\n\n        if (index >= 0) {\n          if (onActiveItemChanged) {\n            onActiveItemChanged(items[index], index, ev);\n          }\n\n          _this.setState({\n            focusedItemIndex: index\n          });\n        }\n      }\n    };\n\n    _this._onBlur = function (event) {\n      _this.setState({\n        focusedItemIndex: -1\n      });\n    };\n\n    _this._isRightArrow = function (event) {\n      return event.which === getRTLSafeKeyCode(KeyCodes.right, _this.props.theme);\n    };\n\n    initializeComponentRef(_this);\n    _this._async = new Async(_this);\n    _this._activeRows = {};\n    _this._columnOverrides = {};\n    _this.state = {\n      focusedItemIndex: -1,\n      lastWidth: 0,\n      adjustedColumns: _this._getAdjustedColumns(props),\n      isSizing: false,\n      isCollapsed: props.groupProps && props.groupProps.isAllGroupsCollapsed,\n      isSomeGroupExpanded: props.groupProps && !props.groupProps.isAllGroupsCollapsed,\n      version: {}\n    };\n    _this._selection = props.selection || new Selection({\n      onSelectionChanged: undefined,\n      getKey: props.getKey,\n      selectionMode: props.selectionMode\n    });\n\n    if (!_this.props.disableSelectionZone) {\n      _this._selection.setItems(props.items, false);\n    }\n\n    _this._dragDropHelper = props.dragDropEvents ? new DragDropHelper({\n      selection: _this._selection,\n      minimumPixelsForDrag: props.minimumPixelsForDrag\n    }) : undefined;\n    _this._initialFocusedIndex = props.initialFocusedIndex;\n    return _this;\n  }\n\n  DetailsListBase.prototype.scrollToIndex = function (index, measureItem, scrollToMode) {\n    this._list.current && this._list.current.scrollToIndex(index, measureItem, scrollToMode);\n    this._groupedList.current && this._groupedList.current.scrollToIndex(index, measureItem, scrollToMode);\n  };\n\n  DetailsListBase.prototype.focusIndex = function (index, forceIntoFirstElement, measureItem, scrollToMode) {\n    if (forceIntoFirstElement === void 0) {\n      forceIntoFirstElement = false;\n    }\n\n    var item = this.props.items[index];\n\n    if (item) {\n      this.scrollToIndex(index, measureItem, scrollToMode);\n\n      var itemKey = this._getItemKey(item, index);\n\n      var row = this._activeRows[itemKey];\n\n      if (row) {\n        this._setFocusToRow(row, forceIntoFirstElement);\n      }\n    }\n  };\n\n  DetailsListBase.prototype.getStartItemIndexInView = function () {\n    if (this._list && this._list.current) {\n      return this._list.current.getStartItemIndexInView();\n    } else if (this._groupedList && this._groupedList.current) {\n      return this._groupedList.current.getStartItemIndexInView();\n    }\n\n    return 0;\n  };\n\n  DetailsListBase.prototype.componentWillUnmount = function () {\n    if (this._dragDropHelper) {\n      // TODO If the DragDropHelper was passed via props, this will dispose it, which is incorrect behavior.\n      this._dragDropHelper.dispose();\n    }\n\n    this._async.dispose();\n  };\n\n  DetailsListBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (this._initialFocusedIndex !== undefined) {\n      var item = this.props.items[this._initialFocusedIndex];\n\n      if (item) {\n        var itemKey = this._getItemKey(item, this._initialFocusedIndex);\n\n        var row = this._activeRows[itemKey];\n\n        if (row) {\n          this._setFocusToRowIfPending(row);\n        }\n      }\n    }\n\n    if (this.props.items !== prevProps.items && this.props.items.length > 0 && this.state.focusedItemIndex !== -1 && !elementContains(this._root.current, document.activeElement, false)) {\n      // Item set has changed and previously-focused item is gone.\n      // Set focus to item at index of previously-focused item if it is in range,\n      // else set focus to the last item.\n      var index = this.state.focusedItemIndex < this.props.items.length ? this.state.focusedItemIndex : this.props.items.length - 1;\n      var item = this.props.items[index];\n\n      var itemKey = this._getItemKey(item, this.state.focusedItemIndex);\n\n      var row = this._activeRows[itemKey];\n\n      if (row) {\n        this._setFocusToRow(row);\n      } else {\n        this._initialFocusedIndex = index;\n      }\n    }\n\n    if (this.props.onDidUpdate) {\n      this.props.onDidUpdate(this);\n    }\n  };\n\n  DetailsListBase.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    var _a = this.props,\n        checkboxVisibility = _a.checkboxVisibility,\n        items = _a.items,\n        setKey = _a.setKey,\n        _b = _a.selectionMode,\n        selectionMode = _b === void 0 ? this._selection.mode : _b,\n        columns = _a.columns,\n        viewport = _a.viewport,\n        compact = _a.compact,\n        dragDropEvents = _a.dragDropEvents;\n    var _c = (this.props.groupProps || {}).isAllGroupsCollapsed,\n        isAllGroupsCollapsed = _c === void 0 ? undefined : _c;\n    var newViewportWidth = newProps.viewport && newProps.viewport.width || 0;\n    var oldViewportWidth = viewport && viewport.width || 0;\n    var shouldResetSelection = newProps.setKey !== setKey || newProps.setKey === undefined;\n    var shouldForceUpdates = false;\n\n    if (newProps.layoutMode !== this.props.layoutMode) {\n      shouldForceUpdates = true;\n    }\n\n    if (shouldResetSelection) {\n      this._initialFocusedIndex = newProps.initialFocusedIndex; // reset focusedItemIndex when setKey changes\n\n      this.setState({\n        focusedItemIndex: this._initialFocusedIndex !== undefined ? this._initialFocusedIndex : -1\n      });\n    }\n\n    if (!this.props.disableSelectionZone && newProps.items !== items) {\n      this._selection.setItems(newProps.items, shouldResetSelection);\n    }\n\n    if (newProps.checkboxVisibility !== checkboxVisibility || newProps.columns !== columns || newViewportWidth !== oldViewportWidth || newProps.compact !== compact) {\n      shouldForceUpdates = true;\n    }\n\n    this._adjustColumns(newProps, true);\n\n    if (newProps.selectionMode !== selectionMode) {\n      shouldForceUpdates = true;\n    }\n\n    if (isAllGroupsCollapsed === undefined && newProps.groupProps && newProps.groupProps.isAllGroupsCollapsed !== undefined) {\n      this.setState({\n        isCollapsed: newProps.groupProps.isAllGroupsCollapsed,\n        isSomeGroupExpanded: !newProps.groupProps.isAllGroupsCollapsed\n      });\n    }\n\n    if (newProps.dragDropEvents !== dragDropEvents) {\n      this._dragDropHelper && this._dragDropHelper.dispose();\n      this._dragDropHelper = newProps.dragDropEvents ? new DragDropHelper({\n        selection: this._selection,\n        minimumPixelsForDrag: newProps.minimumPixelsForDrag\n      }) : undefined;\n      shouldForceUpdates = true;\n    }\n\n    if (shouldForceUpdates) {\n      this.setState({\n        version: {}\n      });\n    }\n  };\n\n  DetailsListBase.prototype.render = function () {\n    var _a = this.props,\n        ariaLabelForListHeader = _a.ariaLabelForListHeader,\n        ariaLabelForSelectAllCheckbox = _a.ariaLabelForSelectAllCheckbox,\n        ariaLabelForSelectionColumn = _a.ariaLabelForSelectionColumn,\n        className = _a.className,\n        checkboxVisibility = _a.checkboxVisibility,\n        compact = _a.compact,\n        constrainMode = _a.constrainMode,\n        dragDropEvents = _a.dragDropEvents,\n        groups = _a.groups,\n        groupProps = _a.groupProps,\n        indentWidth = _a.indentWidth,\n        items = _a.items,\n        isPlaceholderData = _a.isPlaceholderData,\n        isHeaderVisible = _a.isHeaderVisible,\n        layoutMode = _a.layoutMode,\n        onItemInvoked = _a.onItemInvoked,\n        onItemContextMenu = _a.onItemContextMenu,\n        onColumnHeaderClick = _a.onColumnHeaderClick,\n        onColumnHeaderContextMenu = _a.onColumnHeaderContextMenu,\n        _b = _a.selectionMode,\n        selectionMode = _b === void 0 ? this._selection.mode : _b,\n        selectionPreservedOnEmptyClick = _a.selectionPreservedOnEmptyClick,\n        selectionZoneProps = _a.selectionZoneProps,\n        ariaLabel = _a.ariaLabel,\n        ariaLabelForGrid = _a.ariaLabelForGrid,\n        rowElementEventMap = _a.rowElementEventMap,\n        _c = _a.shouldApplyApplicationRole,\n        shouldApplyApplicationRole = _c === void 0 ? false : _c,\n        getKey = _a.getKey,\n        listProps = _a.listProps,\n        usePageCache = _a.usePageCache,\n        onShouldVirtualize = _a.onShouldVirtualize,\n        viewport = _a.viewport,\n        minimumPixelsForDrag = _a.minimumPixelsForDrag,\n        getGroupHeight = _a.getGroupHeight,\n        styles = _a.styles,\n        theme = _a.theme,\n        _d = _a.cellStyleProps,\n        cellStyleProps = _d === void 0 ? DEFAULT_CELL_STYLE_PROPS : _d,\n        onRenderCheckbox = _a.onRenderCheckbox,\n        useFastIcons = _a.useFastIcons;\n    var _e = this.state,\n        adjustedColumns = _e.adjustedColumns,\n        isCollapsed = _e.isCollapsed,\n        isSizing = _e.isSizing,\n        isSomeGroupExpanded = _e.isSomeGroupExpanded;\n\n    var _f = this,\n        selection = _f._selection,\n        dragDropHelper = _f._dragDropHelper;\n\n    var groupNestingDepth = this._getGroupNestingDepth();\n\n    var additionalListProps = __assign({\n      renderedWindowsAhead: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_AHEAD,\n      renderedWindowsBehind: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_BEHIND,\n      getKey: getKey,\n      version: this.state.version\n    }, listProps);\n\n    var selectAllVisibility = SelectAllVisibility.none; // for SelectionMode.none\n\n    if (selectionMode === SelectionMode.single) {\n      selectAllVisibility = SelectAllVisibility.hidden;\n    }\n\n    if (selectionMode === SelectionMode.multiple) {\n      // if isCollapsedGroupSelectVisible is false, disable select all when the list has all collapsed groups\n      var isCollapsedGroupSelectVisible = groupProps && groupProps.headerProps && groupProps.headerProps.isCollapsedGroupSelectVisible;\n\n      if (isCollapsedGroupSelectVisible === undefined) {\n        isCollapsedGroupSelectVisible = true;\n      }\n\n      var isSelectAllVisible = isCollapsedGroupSelectVisible || !groups || isSomeGroupExpanded;\n      selectAllVisibility = isSelectAllVisible ? SelectAllVisibility.visible : SelectAllVisibility.hidden;\n    }\n\n    if (checkboxVisibility === CheckboxVisibility.hidden) {\n      selectAllVisibility = SelectAllVisibility.none;\n    }\n\n    var _g = this.props,\n        _h = _g.onRenderDetailsHeader,\n        onRenderDetailsHeader = _h === void 0 ? this._onRenderDetailsHeader : _h,\n        _j = _g.onRenderDetailsFooter,\n        onRenderDetailsFooter = _j === void 0 ? this._onRenderDetailsFooter : _j;\n\n    var detailsFooterProps = this._getDetailsFooterProps();\n\n    var columnReorderProps = this._getColumnReorderProps();\n\n    var rowCount = (isHeaderVisible ? 1 : 0) + GetGroupCount(groups) + (items ? items.length : 0);\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      compact: compact,\n      isFixed: layoutMode === DetailsListLayoutMode.fixedColumns,\n      isHorizontalConstrained: constrainMode === ConstrainMode.horizontalConstrained,\n      className: className\n    });\n    var focusZoneProps = {\n      componentRef: this._focusZone,\n      className: classNames.focusZone,\n      direction: FocusZoneDirection.vertical,\n      shouldEnterInnerZone: this._isRightArrow,\n      onActiveElementChanged: this._onActiveRowChanged,\n      onBlur: this._onBlur\n    };\n    var list = groups ? React.createElement(GroupedList, {\n      focusZoneProps: focusZoneProps,\n      componentRef: this._groupedList,\n      groups: groups,\n      groupProps: groupProps ? this._getGroupProps(groupProps) : undefined,\n      items: items,\n      onRenderCell: this._onRenderCell,\n      selection: selection,\n      selectionMode: checkboxVisibility !== CheckboxVisibility.hidden ? selectionMode : SelectionMode.none,\n      dragDropEvents: dragDropEvents,\n      dragDropHelper: dragDropHelper,\n      eventsToRegister: rowElementEventMap,\n      listProps: additionalListProps,\n      onGroupExpandStateChanged: this._onGroupExpandStateChanged,\n      usePageCache: usePageCache,\n      onShouldVirtualize: onShouldVirtualize,\n      getGroupHeight: getGroupHeight,\n      compact: compact\n    }) : React.createElement(FocusZone, __assign({}, focusZoneProps), React.createElement(List, __assign({\n      ref: this._list,\n      role: \"presentation\",\n      items: items,\n      onRenderCell: this._onRenderListCell(0),\n      usePageCache: usePageCache,\n      onShouldVirtualize: onShouldVirtualize\n    }, additionalListProps)));\n    return (// If shouldApplyApplicationRole is true, role application will be applied to make arrow keys work\n      // with JAWS.\n      React.createElement(\"div\", __assign({\n        ref: this._root,\n        className: classNames.root,\n        \"data-automationid\": \"DetailsList\",\n        \"data-is-scrollable\": \"false\",\n        \"aria-label\": ariaLabel\n      }, shouldApplyApplicationRole ? {\n        role: 'application'\n      } : {}), React.createElement(FocusRects, null), React.createElement(\"div\", {\n        role: \"grid\",\n        \"aria-label\": ariaLabelForGrid,\n        \"aria-rowcount\": isPlaceholderData ? -1 : rowCount,\n        \"aria-colcount\": (selectAllVisibility !== SelectAllVisibility.none ? 1 : 0) + (adjustedColumns ? adjustedColumns.length : 0),\n        \"aria-readonly\": \"true\",\n        \"aria-busy\": isPlaceholderData\n      }, React.createElement(\"div\", {\n        onKeyDown: this._onHeaderKeyDown,\n        role: \"presentation\",\n        className: classNames.headerWrapper\n      }, isHeaderVisible && onRenderDetailsHeader({\n        componentRef: this._header,\n        selectionMode: selectionMode,\n        layoutMode: layoutMode,\n        selection: selection,\n        columns: adjustedColumns,\n        onColumnClick: onColumnHeaderClick,\n        onColumnContextMenu: onColumnHeaderContextMenu,\n        onColumnResized: this._onColumnResized,\n        onColumnIsSizingChanged: this._onColumnIsSizingChanged,\n        onColumnAutoResized: this._onColumnAutoResized,\n        groupNestingDepth: groupNestingDepth,\n        isAllCollapsed: isCollapsed,\n        onToggleCollapseAll: this._onToggleCollapse,\n        ariaLabel: ariaLabelForListHeader,\n        ariaLabelForSelectAllCheckbox: ariaLabelForSelectAllCheckbox,\n        ariaLabelForSelectionColumn: ariaLabelForSelectionColumn,\n        selectAllVisibility: selectAllVisibility,\n        collapseAllVisibility: groupProps && groupProps.collapseAllVisibility,\n        viewport: viewport,\n        columnReorderProps: columnReorderProps,\n        minimumPixelsForDrag: minimumPixelsForDrag,\n        cellStyleProps: cellStyleProps,\n        checkboxVisibility: checkboxVisibility,\n        indentWidth: indentWidth,\n        onRenderDetailsCheckbox: onRenderCheckbox,\n        rowWidth: this._sumColumnWidths(this.state.adjustedColumns),\n        useFastIcons: useFastIcons\n      }, this._onRenderDetailsHeader)), React.createElement(\"div\", {\n        onKeyDown: this._onContentKeyDown,\n        role: \"presentation\",\n        className: classNames.contentWrapper\n      }, !this.props.disableSelectionZone ? React.createElement(SelectionZone, __assign({\n        ref: this._selectionZone,\n        selection: selection,\n        selectionPreservedOnEmptyClick: selectionPreservedOnEmptyClick,\n        selectionMode: selectionMode,\n        onItemInvoked: onItemInvoked,\n        onItemContextMenu: onItemContextMenu,\n        enterModalOnTouch: this.props.enterModalSelectionOnTouch\n      }, selectionZoneProps || {}), list) : list), onRenderDetailsFooter(__assign({}, detailsFooterProps), this._onRenderDetailsFooter)))\n    );\n  };\n\n  DetailsListBase.prototype.forceUpdate = function () {\n    _super.prototype.forceUpdate.call(this);\n\n    this._forceListUpdates();\n  };\n\n  DetailsListBase.prototype._getGroupNestingDepth = function () {\n    var groups = this.props.groups;\n    var level = 0;\n    var groupsInLevel = groups;\n\n    while (groupsInLevel && groupsInLevel.length > 0) {\n      level++;\n      groupsInLevel = groupsInLevel[0].children;\n    }\n\n    return level;\n  };\n\n  DetailsListBase.prototype._setFocusToRowIfPending = function (row) {\n    var itemIndex = row.props.itemIndex;\n\n    if (this._initialFocusedIndex !== undefined && itemIndex === this._initialFocusedIndex) {\n      this._setFocusToRow(row);\n\n      delete this._initialFocusedIndex;\n    }\n  };\n\n  DetailsListBase.prototype._setFocusToRow = function (row, forceIntoFirstElement) {\n    if (forceIntoFirstElement === void 0) {\n      forceIntoFirstElement = false;\n    }\n\n    if (this._selectionZone.current) {\n      this._selectionZone.current.ignoreNextFocus();\n    }\n\n    this._async.setTimeout(function () {\n      row.focus(forceIntoFirstElement);\n    }, 0);\n  };\n\n  DetailsListBase.prototype._forceListUpdates = function () {\n    if (this._groupedList.current) {\n      this._groupedList.current.forceUpdate();\n    }\n\n    if (this._list.current) {\n      this._list.current.forceUpdate();\n    }\n  };\n\n  DetailsListBase.prototype._notifyColumnsResized = function () {\n    this.state.adjustedColumns.forEach(function (column) {\n      if (column.onColumnResize) {\n        column.onColumnResize(column.currentWidth);\n      }\n    });\n  };\n\n  DetailsListBase.prototype._adjustColumns = function (newProps, forceUpdate, resizingColumnIndex) {\n    var adjustedColumns = this._getAdjustedColumns(newProps, forceUpdate, resizingColumnIndex);\n\n    var viewport = this.props.viewport;\n    var viewportWidth = viewport && viewport.width ? viewport.width : 0;\n\n    if (adjustedColumns) {\n      this.setState({\n        adjustedColumns: adjustedColumns,\n        lastWidth: viewportWidth\n      }, this._notifyColumnsResized);\n    }\n  };\n  /** Returns adjusted columns, given the viewport size and layout mode. */\n\n\n  DetailsListBase.prototype._getAdjustedColumns = function (newProps, forceUpdate, resizingColumnIndex) {\n    var _this = this;\n\n    var newItems = newProps.items,\n        layoutMode = newProps.layoutMode,\n        selectionMode = newProps.selectionMode,\n        viewport = newProps.viewport;\n    var viewportWidth = viewport && viewport.width ? viewport.width : 0;\n    var newColumns = newProps.columns;\n    var columns = this.props ? this.props.columns : [];\n    var lastWidth = this.state ? this.state.lastWidth : -1;\n    var lastSelectionMode = this.state ? this.state.lastSelectionMode : undefined;\n\n    if (!forceUpdate && lastWidth === viewportWidth && lastSelectionMode === selectionMode && (!columns || newColumns === columns)) {\n      return [];\n    }\n\n    newColumns = newColumns || buildColumns(newItems, true);\n    var adjustedColumns;\n\n    if (layoutMode === DetailsListLayoutMode.fixedColumns) {\n      adjustedColumns = this._getFixedColumns(newColumns); // Preserve adjusted column calculated widths.\n\n      adjustedColumns.forEach(function (column) {\n        _this._rememberCalculatedWidth(column, column.calculatedWidth);\n      });\n    } else {\n      if (resizingColumnIndex !== undefined) {\n        adjustedColumns = this._getJustifiedColumnsAfterResize(newColumns, viewportWidth, newProps, resizingColumnIndex);\n      } else {\n        adjustedColumns = this._getJustifiedColumns(newColumns, viewportWidth, newProps, 0);\n      }\n\n      adjustedColumns.forEach(function (column) {\n        _this._getColumnOverride(column.key).currentWidth = column.calculatedWidth;\n      });\n    }\n\n    return adjustedColumns;\n  };\n  /** Builds a set of columns based on the given columns mixed with the current overrides. */\n\n\n  DetailsListBase.prototype._getFixedColumns = function (newColumns) {\n    var _this = this;\n\n    return newColumns.map(function (column) {\n      var newColumn = __assign(__assign({}, column), _this._columnOverrides[column.key]);\n\n      if (!newColumn.calculatedWidth) {\n        newColumn.calculatedWidth = newColumn.maxWidth || newColumn.minWidth || MIN_COLUMN_WIDTH;\n      }\n\n      return newColumn;\n    });\n  };\n\n  DetailsListBase.prototype._getJustifiedColumnsAfterResize = function (newColumns, viewportWidth, props, resizingColumnIndex) {\n    var _this = this;\n\n    var fixedColumns = newColumns.slice(0, resizingColumnIndex);\n    fixedColumns.forEach(function (column) {\n      return column.calculatedWidth = _this._getColumnOverride(column.key).currentWidth;\n    });\n    var fixedWidth = fixedColumns.reduce(function (total, column, i) {\n      return total + getPaddedWidth(column, i === 0, props);\n    }, 0);\n    var remainingColumns = newColumns.slice(resizingColumnIndex);\n    var remainingWidth = viewportWidth - fixedWidth;\n    return __spreadArrays(fixedColumns, this._getJustifiedColumns(remainingColumns, remainingWidth, props, resizingColumnIndex));\n  };\n  /** Builds a set of columns to fix within the viewport width. */\n\n\n  DetailsListBase.prototype._getJustifiedColumns = function (newColumns, viewportWidth, props, firstIndex) {\n    var _this = this;\n\n    var _a = props.selectionMode,\n        selectionMode = _a === void 0 ? this._selection.mode : _a,\n        checkboxVisibility = props.checkboxVisibility;\n    var rowCheckWidth = selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden ? CHECKBOX_WIDTH : 0;\n    var groupExpandWidth = this._getGroupNestingDepth() * GROUP_EXPAND_WIDTH;\n    var totalWidth = 0; // offset because we have one less inner padding.\n\n    var availableWidth = viewportWidth - (rowCheckWidth + groupExpandWidth);\n    var adjustedColumns = newColumns.map(function (column, i) {\n      var newColumn = __assign(__assign(__assign({}, column), {\n        calculatedWidth: column.minWidth || MIN_COLUMN_WIDTH\n      }), _this._columnOverrides[column.key]);\n\n      var isFirst = i + firstIndex === 0;\n      totalWidth += getPaddedWidth(newColumn, isFirst, props);\n      return newColumn;\n    });\n    var lastIndex = adjustedColumns.length - 1; // Shrink or remove collapsable columns.\n\n    while (lastIndex > 0 && totalWidth > availableWidth) {\n      var column = adjustedColumns[lastIndex];\n      var minWidth = column.minWidth || MIN_COLUMN_WIDTH;\n      var overflowWidth = totalWidth - availableWidth; // eslint-disable-next-line deprecation/deprecation\n\n      if (column.calculatedWidth - minWidth >= overflowWidth || !(column.isCollapsible || column.isCollapsable)) {\n        var originalWidth = column.calculatedWidth;\n        column.calculatedWidth = Math.max(column.calculatedWidth - overflowWidth, minWidth);\n        totalWidth -= originalWidth - column.calculatedWidth;\n      } else {\n        totalWidth -= getPaddedWidth(column, false, props);\n        adjustedColumns.splice(lastIndex, 1);\n      }\n\n      lastIndex--;\n    } // Then expand columns starting at the beginning, until we've filled the width.\n\n\n    for (var i = 0; i < adjustedColumns.length && totalWidth < availableWidth; i++) {\n      var column = adjustedColumns[i];\n      var isLast = i === adjustedColumns.length - 1;\n      var overrides = this._columnOverrides[column.key];\n\n      if (overrides && overrides.calculatedWidth && !isLast) {\n        continue;\n      }\n\n      var spaceLeft = availableWidth - totalWidth;\n      var increment = void 0;\n\n      if (isLast) {\n        increment = spaceLeft;\n      } else {\n        var maxWidth = column.maxWidth;\n        var minWidth = column.minWidth || maxWidth || MIN_COLUMN_WIDTH;\n        increment = maxWidth ? Math.min(spaceLeft, maxWidth - minWidth) : spaceLeft;\n      }\n\n      column.calculatedWidth = column.calculatedWidth + increment;\n      totalWidth += increment;\n    }\n\n    return adjustedColumns;\n  };\n\n  DetailsListBase.prototype._rememberCalculatedWidth = function (column, newCalculatedWidth) {\n    var overrides = this._getColumnOverride(column.key);\n\n    overrides.calculatedWidth = newCalculatedWidth;\n    overrides.currentWidth = newCalculatedWidth;\n  };\n\n  DetailsListBase.prototype._getColumnOverride = function (key) {\n    return this._columnOverrides[key] = this._columnOverrides[key] || {};\n  };\n\n  DetailsListBase.prototype._getItemKey = function (item, itemIndex) {\n    var getKey = this.props.getKey;\n    var itemKey = undefined;\n\n    if (item) {\n      itemKey = item.key;\n    }\n\n    if (getKey) {\n      itemKey = getKey(item, itemIndex);\n    }\n\n    if (!itemKey) {\n      itemKey = itemIndex;\n    }\n\n    return itemKey;\n  };\n\n  DetailsListBase.prototype._getDetailsFooterProps = function () {\n    var columns = this.state.adjustedColumns;\n    var _a = this.props,\n        viewport = _a.viewport,\n        checkboxVisibility = _a.checkboxVisibility,\n        indentWidth = _a.indentWidth,\n        _b = _a.cellStyleProps,\n        cellStyleProps = _b === void 0 ? DEFAULT_CELL_STYLE_PROPS : _b,\n        _c = _a.selectionMode,\n        selectionMode = _c === void 0 ? this._selection.mode : _c;\n    return {\n      columns: columns,\n      groupNestingDepth: this._getGroupNestingDepth(),\n      selection: this._selection,\n      selectionMode: selectionMode,\n      viewport: viewport,\n      checkboxVisibility: checkboxVisibility,\n      indentWidth: indentWidth,\n      cellStyleProps: cellStyleProps\n    };\n  };\n\n  DetailsListBase.prototype._getColumnReorderProps = function () {\n    var columnReorderOptions = this.props.columnReorderOptions;\n\n    if (columnReorderOptions) {\n      return __assign(__assign({}, columnReorderOptions), {\n        onColumnDragEnd: this._onColumnDragEnd\n      });\n    }\n  };\n\n  DetailsListBase.prototype._getGroupProps = function (detailsGroupProps) {\n    var _this = this;\n\n    var onRenderDetailsGroupFooter = detailsGroupProps.onRenderFooter,\n        onRenderDetailsGroupHeader = detailsGroupProps.onRenderHeader;\n    var columns = this.state.adjustedColumns;\n    var _a = this.props,\n        _b = _a.selectionMode,\n        selectionMode = _b === void 0 ? this._selection.mode : _b,\n        viewport = _a.viewport,\n        _c = _a.cellStyleProps,\n        cellStyleProps = _c === void 0 ? DEFAULT_CELL_STYLE_PROPS : _c,\n        checkboxVisibility = _a.checkboxVisibility,\n        indentWidth = _a.indentWidth;\n\n    var groupNestingDepth = this._getGroupNestingDepth();\n\n    var onRenderFooter = onRenderDetailsGroupFooter ? function (props, defaultRender) {\n      return onRenderDetailsGroupFooter(__assign(__assign({}, props), {\n        columns: columns,\n        groupNestingDepth: groupNestingDepth,\n        indentWidth: indentWidth,\n        selection: _this._selection,\n        selectionMode: selectionMode,\n        viewport: viewport,\n        checkboxVisibility: checkboxVisibility,\n        cellStyleProps: cellStyleProps\n      }), defaultRender);\n    } : undefined;\n    var onRenderHeader = onRenderDetailsGroupHeader ? function (props, defaultRender) {\n      return onRenderDetailsGroupHeader(__assign(__assign({}, props), {\n        columns: columns,\n        groupNestingDepth: groupNestingDepth,\n        indentWidth: indentWidth,\n        selection: _this._selection,\n        selectionMode: selectionMode,\n        viewport: viewport,\n        checkboxVisibility: checkboxVisibility,\n        cellStyleProps: cellStyleProps\n      }), defaultRender);\n    } : undefined;\n    return __assign(__assign({}, detailsGroupProps), {\n      onRenderFooter: onRenderFooter,\n      onRenderHeader: onRenderHeader\n    });\n  };\n\n  DetailsListBase.defaultProps = {\n    layoutMode: DetailsListLayoutMode.justified,\n    selectionMode: SelectionMode.multiple,\n    constrainMode: ConstrainMode.horizontalConstrained,\n    checkboxVisibility: CheckboxVisibility.onHover,\n    isHeaderVisible: true,\n    compact: false,\n    useFastIcons: true\n  };\n  DetailsListBase = __decorate([withViewport], DetailsListBase);\n  return DetailsListBase;\n}(React.Component);\n\nexport { DetailsListBase };\nexport function buildColumns(items, canResizeColumns, onColumnClick, sortedColumnKey, isSortedDescending, groupedColumnKey, isMultiline) {\n  var columns = [];\n\n  if (items && items.length) {\n    var firstItem = items[0];\n\n    for (var propName in firstItem) {\n      if (firstItem.hasOwnProperty(propName)) {\n        columns.push({\n          key: propName,\n          name: propName,\n          fieldName: propName,\n          minWidth: MIN_COLUMN_WIDTH,\n          maxWidth: 300,\n          isCollapsable: !!columns.length,\n          isCollapsible: !!columns.length,\n          isMultiline: isMultiline === undefined ? false : isMultiline,\n          isSorted: sortedColumnKey === propName,\n          isSortedDescending: !!isSortedDescending,\n          isRowHeader: false,\n          columnActionsMode: ColumnActionsMode.clickable,\n          isResizable: canResizeColumns,\n          onColumnClick: onColumnClick,\n          isGrouped: groupedColumnKey === propName\n        });\n      }\n    }\n  }\n\n  return columns;\n}\n\nfunction getPaddedWidth(column, isFirst, props) {\n  var _a = props.cellStyleProps,\n      cellStyleProps = _a === void 0 ? DEFAULT_CELL_STYLE_PROPS : _a;\n  return column.calculatedWidth + cellStyleProps.cellLeftPadding + cellStyleProps.cellRightPadding + (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0);\n}","import \"core-js/modules/es6.string.small\";\nimport { getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-DetailsList',\n  compact: 'ms-DetailsList--Compact',\n  contentWrapper: 'ms-DetailsList-contentWrapper',\n  headerWrapper: 'ms-DetailsList-headerWrapper',\n  isFixed: 'is-fixed',\n  isHorizontalConstrained: 'is-horizontalConstrained',\n  listCell: 'ms-List-cell'\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b;\n\n  var theme = props.theme,\n      className = props.className,\n      isHorizontalConstrained = props.isHorizontalConstrained,\n      compact = props.compact,\n      isFixed = props.isFixed;\n  var semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.small, {\n      position: 'relative',\n      color: semanticColors.listText,\n      selectors: (_a = {}, _a[\"& .\" + classNames.listCell] = {\n        minHeight: 38,\n        wordBreak: 'break-word'\n      }, _a)\n    }, isFixed && classNames.isFixed, compact && [classNames.compact, {\n      selectors: (_b = {}, _b[\".\" + classNames.listCell] = {\n        minHeight: 32\n      }, _b)\n    }], isHorizontalConstrained && [classNames.isHorizontalConstrained, {\n      overflowX: 'auto',\n      overflowY: 'visible',\n      WebkitOverflowScrolling: 'touch'\n    }], className],\n    focusZone: [{\n      display: 'inline-block',\n      minWidth: '100%',\n      minHeight: 1\n    }],\n    headerWrapper: classNames.headerWrapper,\n    contentWrapper: classNames.contentWrapper\n  };\n};","import { styled } from '../../Utilities';\nimport { DetailsListBase } from './DetailsList.base';\nimport { getStyles } from './DetailsList.styles';\nexport var DetailsList = styled(DetailsListBase, getStyles, undefined, {\n  scope: 'DetailsList'\n});","import { __extends } from \"tslib\";\nimport * as React from 'react';\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\n\nvar DelayedRender =\n/** @class */\nfunction (_super) {\n  __extends(DelayedRender, _super);\n\n  function DelayedRender(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      isRendered: false\n    };\n    return _this;\n  }\n\n  DelayedRender.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var delay = this.props.delay;\n    this._timeoutId = window.setTimeout(function () {\n      _this.setState({\n        isRendered: true\n      });\n    }, delay);\n  };\n\n  DelayedRender.prototype.componentWillUnmount = function () {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  };\n\n  DelayedRender.prototype.render = function () {\n    return this.state.isRendered ? React.Children.only(this.props.children) : null;\n  };\n\n  DelayedRender.defaultProps = {\n    delay: 0\n  };\n  return DelayedRender;\n}(React.Component);\n\nexport { DelayedRender };"],"sourceRoot":""}